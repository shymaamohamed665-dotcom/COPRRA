PHP CS Fixer 3.88.2 Folding Bike by Fabien Potencier, Dariusz Ruminski and contributors.
PHP runtime: 8.2.29
Running analysis on 1 core sequentially.
You can enable parallel runner and speed up the analysis! Please see https://cs.symfony.com/doc/usage.html for more information.
Loaded config default.
Using cache file ".php-cs-fixer.cache".
   0/246 [░░░░░░░░░░░░░░░░░░░░░░░░░░░░]   0%
   1/246 [░░░░░░░░░░░░░░░░░░░░░░░░░░░░]   0%
   4/246 [░░░░░░░░░░░░░░░░░░░░░░░░░░░░]   1%
   7/246 [░░░░░░░░░░░░░░░░░░░░░░░░░░░░]   2%
   9/246 [▓░░░░░░░░░░░░░░░░░░░░░░░░░░░]   3%
  12/246 [▓░░░░░░░░░░░░░░░░░░░░░░░░░░░]   4%
  15/246 [▓░░░░░░░░░░░░░░░░░░░░░░░░░░░]   6%
  20/246 [▓▓░░░░░░░░░░░░░░░░░░░░░░░░░░]   8%
  22/246 [▓▓░░░░░░░░░░░░░░░░░░░░░░░░░░]   8%
  24/246 [▓▓░░░░░░░░░░░░░░░░░░░░░░░░░░]   9%
  25/246 [▓▓░░░░░░░░░░░░░░░░░░░░░░░░░░]  10%
  28/246 [▓▓▓░░░░░░░░░░░░░░░░░░░░░░░░░]  11%
  31/246 [▓▓▓░░░░░░░░░░░░░░░░░░░░░░░░░]  12%
  34/246 [▓▓▓░░░░░░░░░░░░░░░░░░░░░░░░░]  13%
  37/246 [▓▓▓▓░░░░░░░░░░░░░░░░░░░░░░░░]  15%
  39/246 [▓▓▓▓░░░░░░░░░░░░░░░░░░░░░░░░]  15%
  41/246 [▓▓▓▓░░░░░░░░░░░░░░░░░░░░░░░░]  16%
  44/246 [▓▓▓▓▓░░░░░░░░░░░░░░░░░░░░░░░]  17%
  49/246 [▓▓▓▓▓░░░░░░░░░░░░░░░░░░░░░░░]  19%
  50/246 [▓▓▓▓▓░░░░░░░░░░░░░░░░░░░░░░░]  20%
  53/246 [▓▓▓▓▓▓░░░░░░░░░░░░░░░░░░░░░░]  21%
  57/246 [▓▓▓▓▓▓░░░░░░░░░░░░░░░░░░░░░░]  23%
  59/246 [▓▓▓▓▓▓░░░░░░░░░░░░░░░░░░░░░░]  23%
  63/246 [▓▓▓▓▓▓▓░░░░░░░░░░░░░░░░░░░░░]  25%
  65/246 [▓▓▓▓▓▓▓░░░░░░░░░░░░░░░░░░░░░]  26%
  67/246 [▓▓▓▓▓▓▓░░░░░░░░░░░░░░░░░░░░░]  27%
  72/246 [▓▓▓▓▓▓▓▓░░░░░░░░░░░░░░░░░░░░]  29%
  74/246 [▓▓▓▓▓▓▓▓░░░░░░░░░░░░░░░░░░░░]  30%
  78/246 [▓▓▓▓▓▓▓▓░░░░░░░░░░░░░░░░░░░░]  31%
  81/246 [▓▓▓▓▓▓▓▓▓░░░░░░░░░░░░░░░░░░░]  32%
  85/246 [▓▓▓▓▓▓▓▓▓░░░░░░░░░░░░░░░░░░░]  34%
  91/246 [▓▓▓▓▓▓▓▓▓▓░░░░░░░░░░░░░░░░░░]  36%
  94/246 [▓▓▓▓▓▓▓▓▓▓░░░░░░░░░░░░░░░░░░]  38%
  98/246 [▓▓▓▓▓▓▓▓▓▓▓░░░░░░░░░░░░░░░░░]  39%
  99/246 [▓▓▓▓▓▓▓▓▓▓▓░░░░░░░░░░░░░░░░░]  40%
 104/246 [▓▓▓▓▓▓▓▓▓▓▓░░░░░░░░░░░░░░░░░]  42%
 107/246 [▓▓▓▓▓▓▓▓▓▓▓▓░░░░░░░░░░░░░░░░]  43%
 110/246 [▓▓▓▓▓▓▓▓▓▓▓▓░░░░░░░░░░░░░░░░]  44%
 113/246 [▓▓▓▓▓▓▓▓▓▓▓▓░░░░░░░░░░░░░░░░]  45%
 116/246 [▓▓▓▓▓▓▓▓▓▓▓▓▓░░░░░░░░░░░░░░░]  47%
 119/246 [▓▓▓▓▓▓▓▓▓▓▓▓▓░░░░░░░░░░░░░░░]  48%
 123/246 [▓▓▓▓▓▓▓▓▓▓▓▓▓▓░░░░░░░░░░░░░░]  50%
 131/246 [▓▓▓▓▓▓▓▓▓▓▓▓▓▓░░░░░░░░░░░░░░]  53%
 139/246 [▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓░░░░░░░░░░░░░]  56%
 144/246 [▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓░░░░░░░░░░░░]  58%
 148/246 [▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓░░░░░░░░░░░░]  60%
 153/246 [▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓░░░░░░░░░░░]  62%
 159/246 [▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓░░░░░░░░░░]  64%
 167/246 [▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓░░░░░░░░░]  67%
 173/246 [▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓░░░░░░░░░]  70%
 181/246 [▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓░░░░░░░░]  73%
 185/246 [▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓░░░░░░░]  75%
 195/246 [▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓░░░░░░]  79%
 197/246 [▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓░░░░░░]  80%
 198/246 [▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓░░░░░░]  80%
 199/246 [▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓░░░░░░]  80%
 201/246 [▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓░░░░░░]  81%
 203/246 [▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓░░░░░]  82%
 205/246 [▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓░░░░░]  83%
 207/246 [▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓░░░░░]  84%
 208/246 [▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓░░░░░]  84%
 209/246 [▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓░░░░░]  84%
 211/246 [▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓░░░░]  85%
 213/246 [▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓░░░░]  86%
 216/246 [▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓░░░░]  87%
 218/246 [▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓░░░░]  88%
 221/246 [▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓░░░]  89%
 222/246 [▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓░░░]  90%
 225/246 [▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓░░░]  91%
 228/246 [▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓░░░]  92%
 230/246 [▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓░░]  93%
 231/246 [▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓░░]  93%
 234/246 [▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓░░]  95%
 235/246 [▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓░░]  95%
 241/246 [▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓░]  97%
 244/246 [▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓░]  99%
 246/246 [▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓] 100%

   1) app/Console/Commands/AgentProposeFixCommand.php
      ---------- begin diff ----------
--- /var/www/html/app/Console/Commands/AgentProposeFixCommand.php
+++ /var/www/html/app/Console/Commands/AgentProposeFixCommand.php
@@ -8,11 +8,11 @@
 use Illuminate\Console\Command;
 
 /**
- * @property \Illuminate\Foundation\Application $laravel
+ * @property \Illuminate\Foundation\Application              $laravel
  * @property \Symfony\Component\Console\Input\InputInterface $input
- * @property \Illuminate\Console\OutputStyle $output
- * @property \Illuminate\Console\View\Components\Factory $components
- * @property string|null $name
+ * @property \Illuminate\Console\OutputStyle                 $output
+ * @property \Illuminate\Console\View\Components\Factory     $components
+ * @property string|null                                     $name
  *
  * @psalm-suppress PropertyNotSetInConstructor
  */
@@ -35,7 +35,7 @@
         /**
          * The process service instance.
          */
-        private readonly ProcessService $processService
+        private readonly ProcessService $processService,
     ) {
         parent::__construct();
     }
@@ -57,18 +57,18 @@
         $this->info("📝 Generated branch name: {$branchName}");
 
         // Step 1: Create and switch to new branch
-        if (! $this->createBranch($branchName)) {
+        if (!$this->createBranch($branchName)) {
             return 1;
         }
 
         // Step 2: Run the appropriate fixer based on type
         $fixResult = $this->runFixer($type);
-        if ($fixResult === false) {
+        if (false === $fixResult) {
             return 1;
         }
 
         // Step 3: Stage all changes
-        if (! $this->stageChanges()) {
+        if (!$this->stageChanges()) {
             return 1;
         }
 
@@ -76,12 +76,12 @@
         $this->commitChanges($type);
 
         // Step 5: Push the new branch to remote
-        if (! $this->pushBranch($branchName)) {
+        if (!$this->pushBranch($branchName)) {
             return 1;
         }
 
         // Step 6: Create Pull Request
-        if (! $this->createPullRequest($branchName, $type)) {
+        if (!$this->createPullRequest($branchName, $type)) {
             return 1;
         }
 
@@ -119,7 +119,7 @@
         return match ($type) {
             'style' => $this->runStyleFixer(),
             'analysis' => $this->runAnalysisFixer(),
-            default => $this->handleUnsupportedType($type)
+            default => $this->handleUnsupportedType($type),
         };
     }
 
@@ -156,7 +156,7 @@
         $baselinePath = 'phpstan-baseline.neon';
 
         // Check if baseline file exists, create empty one if not
-        if (! file_exists($baselinePath)) {
+        if (!file_exists($baselinePath)) {
             $this->info('INFO: Baseline file not found. Creating an empty one.');
             file_put_contents($baselinePath, '');
         }
@@ -297,7 +297,7 @@
         return match ($type) {
             'style' => 'style: Apply automated code style fixes',
             'analysis' => 'refactor: Generate PHPStan baseline',
-            default => "fix: Apply automated {$type} fixes"
+            default => "fix: Apply automated {$type} fixes",
         };
     }
 
@@ -309,7 +309,7 @@
         return match ($type) {
             'style' => 'Automated Style Fixes',
             'analysis' => 'Automated Static Analysis Fixes: PHPStan Baseline',
-            default => "Automated {$type} Fixes"
+            default => "Automated {$type} Fixes",
         };
     }
 
@@ -321,7 +321,7 @@
         return match ($type) {
             'style' => 'This PR was automatically generated by the AI agent to apply code style fixes found by Laravel Pint.',
             'analysis' => 'This PR was automatically generated by the AI agent to create a PHPStan baseline file for static analysis.',
-            default => "This PR was automatically generated by the AI agent to apply {$type} fixes."
+            default => "This PR was automatically generated by the AI agent to apply {$type} fixes.",
         };
     }
 }

      ----------- end diff -----------

   2) app/Console/Commands/CacheManagement.php
      ---------- begin diff ----------
--- /var/www/html/app/Console/Commands/CacheManagement.php
+++ /var/www/html/app/Console/Commands/CacheManagement.php
@@ -28,7 +28,7 @@
     /**
      * Execute the console command.
      */
-    public function handle(CacheService $cacheService): int|null
+    public function handle(CacheService $cacheService): ?int
     {
         $action = $this->argument('action');
 
@@ -87,8 +87,8 @@
      */
     protected function clearPriceComparisons(CacheService $cacheService): int
     {
-        if (! $this->option('force')) {
-            if (! $this->confirm('Are you sure you want to clear all price comparison caches?')) {
+        if (!$this->option('force')) {
+            if (!$this->confirm('Are you sure you want to clear all price comparison caches?')) {
                 $this->info('Operation cancelled.');
 
                 return self::SUCCESS;
@@ -109,8 +109,8 @@
      */
     protected function clearSearchResults(CacheService $cacheService): int
     {
-        if (! $this->option('force')) {
-            if (! $this->confirm('Are you sure you want to clear all search result caches?')) {
+        if (!$this->option('force')) {
+            if (!$this->confirm('Are you sure you want to clear all search result caches?')) {
                 $this->info('Operation cancelled.');
 
                 return self::SUCCESS;
@@ -131,8 +131,8 @@
      */
     protected function clearAllCache(CacheService $cacheService): int
     {
-        if (! $this->option('force')) {
-            if (! $this->confirm('⚠️  This will clear ALL cache. Are you sure?')) {
+        if (!$this->option('force')) {
+            if (!$this->confirm('⚠️  This will clear ALL cache. Are you sure?')) {
                 $this->info('Operation cancelled.');
 
                 return self::SUCCESS;

      ----------- end diff -----------

   3) app/Console/Commands/CleanAnalytics.php
      ---------- begin diff ----------
--- /var/www/html/app/Console/Commands/CleanAnalytics.php
+++ /var/www/html/app/Console/Commands/CleanAnalytics.php
@@ -32,8 +32,8 @@
     {
         $days = (int) $this->option('days');
 
-        if (! $this->option('force')) {
-            if (! $this->confirm("This will delete analytics data older than {$days} days. Continue?")) {
+        if (!$this->option('force')) {
+            if (!$this->confirm("This will delete analytics data older than {$days} days. Continue?")) {
                 $this->info('Operation cancelled.');
 
                 return self::SUCCESS;

      ----------- end diff -----------

   4) app/Console/Commands/OptimizePerformance.php
      ---------- begin diff ----------
--- /var/www/html/app/Console/Commands/OptimizePerformance.php
+++ /var/www/html/app/Console/Commands/OptimizePerformance.php
@@ -132,7 +132,7 @@
 
                 try {
                     DB::statement("OPTIMIZE TABLE `{$tableName}`");
-                    $optimized++;
+                    ++$optimized;
                 } catch (\Exception $e) {
                     // Skip if table cannot be optimized
                 }
@@ -140,7 +140,7 @@
 
             $this->line("  ✓ Optimized {$optimized} tables");
         } catch (\Exception $e) {
-            $this->warn('  ✗ Failed to optimize database: ' . $e->getMessage());
+            $this->warn('  ✗ Failed to optimize database: '.$e->getMessage());
         }
 
         $this->newLine();
@@ -157,7 +157,7 @@
             // Check slow queries
             $slowQueries = DB::select('SHOW VARIABLES LIKE "slow_query_log"');
             if (!empty($slowQueries)) {
-                $status = $slowQueries[0]->Value === 'ON' ? '✓ Enabled' : '✗ Disabled';
+                $status = 'ON' === $slowQueries[0]->Value ? '✓ Enabled' : '✗ Disabled';
                 $this->line("  Slow query log: {$status}");
             }
 
@@ -189,7 +189,7 @@
                 $this->line('  Top 10 largest tables:');
                 $this->table(
                     ['Table', 'Size (MB)', 'Rows'],
-                    array_map(fn($row) => (array) $row, $tableSizes)
+                    array_map(fn ($row) => (array) $row, $tableSizes)
                 );
             }
 
@@ -218,7 +218,7 @@
                 $this->line('  ✓ All tables have indexes');
             }
         } catch (\Exception $e) {
-            $this->warn('  ✗ Failed to analyze database: ' . $e->getMessage());
+            $this->warn('  ✗ Failed to analyze database: '.$e->getMessage());
         }
 
         $this->newLine();
@@ -234,13 +234,13 @@
         try {
             exec('composer dump-autoload --optimize --no-dev 2>&1', $output, $returnCode);
 
-            if ($returnCode === 0) {
+            if (0 === $returnCode) {
                 $this->line('  ✓ Autoloader optimized');
             } else {
                 $this->warn('  ✗ Failed to optimize autoloader');
             }
         } catch (\Exception $e) {
-            $this->warn('  ✗ Failed to optimize autoloader: ' . $e->getMessage());
+            $this->warn('  ✗ Failed to optimize autoloader: '.$e->getMessage());
         }
 
         $this->newLine();
@@ -257,7 +257,7 @@
             Artisan::call('view:cache');
             $this->line('  ✓ Views compiled and cached');
         } catch (\Exception $e) {
-            $this->warn('  ✗ Failed to optimize views: ' . $e->getMessage());
+            $this->warn('  ✗ Failed to optimize views: '.$e->getMessage());
         }
 
         $this->newLine();
@@ -274,7 +274,7 @@
             Artisan::call('route:cache');
             $this->line('  ✓ Routes cached');
         } catch (\Exception $e) {
-            $this->warn('  ✗ Failed to optimize routes: ' . $e->getMessage());
+            $this->warn('  ✗ Failed to optimize routes: '.$e->getMessage());
         }
 
         $this->newLine();
@@ -291,7 +291,7 @@
             Artisan::call('config:cache');
             $this->line('  ✓ Configuration cached');
         } catch (\Exception $e) {
-            $this->warn('  ✗ Failed to optimize configuration: ' . $e->getMessage());
+            $this->warn('  ✗ Failed to optimize configuration: '.$e->getMessage());
         }
 
         $this->newLine();
@@ -319,7 +319,7 @@
         ];
 
         foreach ($recommendations as $index => $recommendation) {
-            $this->line('  ' . ($index + 1) . '. ' . $recommendation);
+            $this->line('  '.($index + 1).'. '.$recommendation);
         }
 
         $this->newLine();

      ----------- end diff -----------

   5) app/Console/Commands/ProcessPendingWebhooks.php
      ---------- begin diff ----------
--- /var/www/html/app/Console/Commands/ProcessPendingWebhooks.php
+++ /var/www/html/app/Console/Commands/ProcessPendingWebhooks.php
@@ -47,6 +47,7 @@
 
         if ($webhooks->isEmpty()) {
             $this->info('✅ No pending webhooks to process.');
+
             return self::SUCCESS;
         }
 
@@ -61,9 +62,9 @@
         foreach ($webhooks as $webhook) {
             try {
                 $webhookService->processWebhook($webhook);
-                $processed++;
+                ++$processed;
             } catch (\Exception $e) {
-                $failed++;
+                ++$failed;
                 $this->error("\nFailed to process webhook {$webhook->id}: {$e->getMessage()}");
             }
 

      ----------- end diff -----------

   6) app/Console/Commands/SEOAudit.php
      ---------- begin diff ----------
--- /var/www/html/app/Console/Commands/SEOAudit.php
+++ /var/www/html/app/Console/Commands/SEOAudit.php
@@ -145,8 +145,6 @@
 
     /**
      * Audit a single model.
-     *
-     * @param Category|Product|Store $model
      */
     protected function auditModel(Product|Category|Store $model, string $type): void
     {
@@ -153,7 +151,7 @@
         $metaData = $this->seoService->generateMetaData($model, $type);
         $issues = $this->seoService->validateMetaData($metaData);
 
-        if (! empty($issues)) {
+        if (!empty($issues)) {
             $this->totalIssues += count($issues);
 
             if ($this->option('details')) {
@@ -178,19 +176,19 @@
         $fixed = false;
 
         // Fix missing meta title
-        if (empty($model->meta_title) && ! empty($metaData['title'])) {
+        if (empty($model->meta_title) && !empty($metaData['title'])) {
             $model->meta_title = $metaData['title'];
             $fixed = true;
         }
 
         // Fix missing meta description
-        if (empty($model->meta_description) && ! empty($metaData['description'])) {
+        if (empty($model->meta_description) && !empty($metaData['description'])) {
             $model->meta_description = $metaData['description'];
             $fixed = true;
         }
 
         // Fix missing meta keywords
-        if (empty($model->meta_keywords) && ! empty($metaData['keywords'])) {
+        if (empty($model->meta_keywords) && !empty($metaData['keywords'])) {
             $model->meta_keywords = $metaData['keywords'];
             $fixed = true;
         }
@@ -197,7 +195,7 @@
 
         if ($fixed) {
             $model->save();
-            $this->fixedIssues++;
+            ++$this->fixedIssues;
 
             if ($this->option('details')) {
                 $this->info("     ✅ Fixed {$type} #{$model->id}");
@@ -215,7 +213,7 @@
 
         foreach ($routes as $route) {
             // Only check GET routes
-            if (! in_array('GET', $route->methods())) {
+            if (!in_array('GET', $route->methods())) {
                 continue;
             }
 
@@ -228,7 +226,7 @@
             $publicRoutes[] = $uri;
         }
 
-        $this->info("  Found " . count($publicRoutes) . " public routes");
+        $this->info('  Found '.count($publicRoutes).' public routes');
 
         // Check for common SEO issues
         $this->checkForDuplicateRoutes($publicRoutes);
@@ -241,9 +239,9 @@
     {
         $duplicates = array_diff_assoc($routes, array_unique($routes));
 
-        if (! empty($duplicates)) {
+        if (!empty($duplicates)) {
             $this->totalIssues += count($duplicates);
-            $this->warn("  ⚠️  Found " . count($duplicates) . " duplicate routes");
+            $this->warn('  ⚠️  Found '.count($duplicates).' duplicate routes');
 
             if ($this->option('details')) {
                 foreach ($duplicates as $duplicate) {
@@ -271,7 +269,7 @@
             ]
         );
 
-        if ($this->totalIssues === 0) {
+        if (0 === $this->totalIssues) {
             $this->info('✅ No SEO issues found! Your site is well optimized.');
         } elseif ($this->fixedIssues > 0) {
             $this->info("✅ Fixed {$this->fixedIssues} issues automatically.");

      ----------- end diff -----------

   7) app/Console/Commands/StatsCommand.php
      ---------- begin diff ----------
--- /var/www/html/app/Console/Commands/StatsCommand.php
+++ /var/www/html/app/Console/Commands/StatsCommand.php
@@ -159,7 +159,7 @@
         $units = ['B', 'KB', 'MB', 'GB', 'TB'];
 
         $unitsCount = count($units) - 1;
-        for ($i = 0; $size > 1024 && $i < $unitsCount; $i++) {
+        for ($i = 0; $size > 1024 && $i < $unitsCount; ++$i) {
             $size /= 1024;
         }
 

      ----------- end diff -----------

   8) app/Console/Commands/UpdatePricesCommand.php
      ---------- begin diff ----------
--- /var/www/html/app/Console/Commands/UpdatePricesCommand.php
+++ /var/www/html/app/Console/Commands/UpdatePricesCommand.php
@@ -61,7 +61,7 @@
 
                 $currentPrice = is_numeric($priceOffer->price) ? (float) $priceOffer->price : 0.0;
                 if ($newPrice && $newPrice !== $currentPrice) {
-                    if (! $dryRun) {
+                    if (!$dryRun) {
                         $priceOffer->update([
                             'price' => $newPrice,
                             'updated_at' => now(),
@@ -68,13 +68,13 @@
                         ]);
                     }
 
-                    $updatedCount++;
+                    ++$updatedCount;
                     $productName = is_string($priceOffer->product->name) ? $priceOffer->product->name : 'Unknown Product';
                     $storeName = is_string($priceOffer->store->name) ? $priceOffer->store->name : 'Unknown Store';
                     $this->line("\n💰 Updated {$productName} at {$storeName}: {$currentPrice} → {$newPrice}");
                 }
             } catch (\Exception $e) {
-                $errorCount++;
+                ++$errorCount;
                 $product = $priceOffer->product;
                 $store = $priceOffer->store;
                 $productName = $product && is_string($product->name) ? $product->name : 'Unknown Product';

      ----------- end diff -----------

   9) app/Console/Kernel.php
      ---------- begin diff ----------
--- /var/www/html/app/Console/Kernel.php
+++ /var/www/html/app/Console/Kernel.php
@@ -98,7 +98,7 @@
     #[\Override]
     protected function commands(): void
     {
-        $this->load(__DIR__ . '/Commands');
+        $this->load(__DIR__.'/Commands');
 
         require_once base_path('routes/console.php');
     }

      ----------- end diff -----------

  10) app/Contracts/StoreAdapterInterface.php
      ---------- begin diff ----------
--- /var/www/html/app/Contracts/StoreAdapterInterface.php
+++ /var/www/html/app/Contracts/StoreAdapterInterface.php
@@ -6,7 +6,7 @@
 
 /**
  * Interface for store adapters.
- * 
+ *
  * Each store adapter must implement this interface to provide
  * a unified way to fetch product data from different stores.
  */
@@ -29,8 +29,9 @@
 
     /**
      * Fetch product data by product identifier.
-     * 
+     *
      * @param string $productIdentifier The product ID/SKU/ASIN
+     *
      * @return array{
      *     name: string,
      *     price: float,
@@ -50,9 +51,10 @@
 
     /**
      * Search for products by query.
-     * 
-     * @param string $query Search query
-     * @param array $options Search options (limit, page, filters, etc.)
+     *
+     * @param string $query   Search query
+     * @param array  $options Search options (limit, page, filters, etc.)
+     *
      * @return array Array of product data
      */
     public function searchProducts(string $query, array $options = []): array;
@@ -69,7 +71,7 @@
 
     /**
      * Get rate limit information.
-     * 
+     *
      * @return array{
      *     requests_per_minute: int,
      *     requests_per_hour: int,
@@ -78,4 +80,3 @@
      */
     public function getRateLimits(): array;
 }
-

      ----------- end diff -----------

  11) app/DTO/AnalysisResult.php
      ---------- begin diff ----------
--- /var/www/html/app/DTO/AnalysisResult.php
+++ /var/www/html/app/DTO/AnalysisResult.php
@@ -11,6 +11,7 @@
         public int $score,
         public int $max_score,
         /** @var array<string> */
-        public array $issues
-    ) {}
+        public array $issues,
+    ) {
+    }
 }

      ----------- end diff -----------

  12) app/DTO/ProcessResult.php
      ---------- begin diff ----------
--- /var/www/html/app/DTO/ProcessResult.php
+++ /var/www/html/app/DTO/ProcessResult.php
@@ -21,8 +21,9 @@
         /**
          * The error output of the process.
          */
-        public readonly string $errorOutput
-    ) {}
+        public readonly string $errorOutput,
+    ) {
+    }
 
     /**
      * Get the output of the process.
@@ -45,7 +46,7 @@
      */
     public function successful(): bool
     {
-        return $this->exitCode === 0;
+        return 0 === $this->exitCode;
     }
 
     /**
@@ -53,6 +54,6 @@
      */
     public function failed(): bool
     {
-        return ! $this->successful();
+        return !$this->successful();
     }
 }

      ----------- end diff -----------

  13) app/Enums/NotificationStatus.php
      ---------- begin diff ----------
--- /var/www/html/app/Enums/NotificationStatus.php
+++ /var/www/html/app/Enums/NotificationStatus.php
@@ -47,4 +47,3 @@
         return array_column(self::cases(), 'value', 'name');
     }
 }
-

      ----------- end diff -----------

  14) app/Enums/OrderStatus.php
      ---------- begin diff ----------
--- /var/www/html/app/Enums/OrderStatus.php
+++ /var/www/html/app/Enums/OrderStatus.php
@@ -78,4 +78,3 @@
         return array_column(self::cases(), 'value', 'name');
     }
 }
-

      ----------- end diff -----------

  15) app/Enums/UserRole.php
      ---------- begin diff ----------
--- /var/www/html/app/Enums/UserRole.php
+++ /var/www/html/app/Enums/UserRole.php
@@ -72,7 +72,7 @@
      */
     public function isAdmin(): bool
     {
-        return $this === self::ADMIN;
+        return self::ADMIN === $this;
     }
 
     /**
@@ -85,4 +85,3 @@
         return array_column(self::cases(), 'value', 'name');
     }
 }
-

      ----------- end diff -----------

  16) app/Events/OrderStatusChanged.php
      ---------- begin diff ----------
--- /var/www/html/app/Events/OrderStatusChanged.php
+++ /var/www/html/app/Events/OrderStatusChanged.php
@@ -22,7 +22,7 @@
     public function __construct(
         public Order $order,
         public OrderStatus $oldStatus,
-        public OrderStatus $newStatus
-    ) {}
+        public OrderStatus $newStatus,
+    ) {
+    }
 }
-

      ----------- end diff -----------

  17) app/Exceptions/GlobalExceptionHandler.php
      ---------- begin diff ----------
--- /var/www/html/app/Exceptions/GlobalExceptionHandler.php
+++ /var/www/html/app/Exceptions/GlobalExceptionHandler.php
@@ -312,7 +312,7 @@
             'RedisException',
             'MemcachedException',
             \GuzzleHttp\Exception\ConnectException::class,
-            \Illuminate\Database\QueryException::class,
+            QueryException::class,
         ];
 
         return in_array($e::class, $criticalErrors) || $e->getCode() >= 500;
@@ -326,7 +326,7 @@
         try {
             $adminEmails = config('app.admin_emails', []);
 
-            if (! empty($adminEmails)) {
+            if (!empty($adminEmails)) {
                 Mail::raw(
                     "Critical error occurred in COPRRA application:\n\n".
                         'Error: '.$e->getMessage()."\n".
@@ -335,7 +335,7 @@
                         'URL: '.request()->fullUrl(),
                     static function (\Illuminate\Mail\Message $message) use ($adminEmails): void {
                         $emailsArray = is_array($adminEmails) ? $adminEmails : (is_string($adminEmails) ? [$adminEmails] : []);
-                        if (! empty($emailsArray)) {
+                        if (!empty($emailsArray)) {
                             $message->to($emailsArray)
                                 ->subject('Critical Error Alert - COPRRA');
                         }

      ----------- end diff -----------

  18) app/Exceptions/Handler.php
      ---------- begin diff ----------
--- /var/www/html/app/Exceptions/Handler.php
+++ /var/www/html/app/Exceptions/Handler.php
@@ -16,7 +16,7 @@
 class Handler extends ExceptionHandler
 {
     /**
-     * @var array<int, class-string<\Throwable>>
+     * @var array<int, class-string<Throwable>>
      */
     protected $dontReport = [];
 
@@ -31,10 +31,10 @@
         $this->reportable(static function (Throwable $e): void {
             // Log security-related exceptions
             if (
-                $e instanceof AuthenticationException ||
-                $e instanceof AuthorizationException ||
-                $e instanceof ValidationException ||
-                $e instanceof QueryException
+                $e instanceof AuthenticationException
+                || $e instanceof AuthorizationException
+                || $e instanceof ValidationException
+                || $e instanceof QueryException
             ) {
                 Log::warning('Security-related exception occurred', [
                     'exception_type' => $e::class,

      ----------- end diff -----------

  19) app/Exceptions/ProductUpdate.php
      ---------- begin diff ----------
--- /var/www/html/app/Exceptions/ProductUpdate.php
+++ /var/www/html/app/Exceptions/ProductUpdate.php
@@ -6,4 +6,6 @@
 
 use Exception;
 
-class ProductUpdate extends Exception {}
+class ProductUpdate extends Exception
+{
+}

      ----------- end diff -----------

  20) app/Helpers/OrderHelper.php
      ---------- begin diff ----------
--- /var/www/html/app/Helpers/OrderHelper.php
+++ /var/www/html/app/Helpers/OrderHelper.php
@@ -27,7 +27,7 @@
     /**
      * Calculate order total with tax and shipping.
      *
-     * @param  array<string, mixed>  $data
+     * @param array<string, mixed> $data
      */
     public static function calculateTotal(array $data): float
     {
@@ -52,7 +52,7 @@
      */
     public static function generateOrderNumber(): string
     {
-        return 'ORD-' . strtoupper(uniqid()) . '-' . time();
+        return 'ORD-'.strtoupper(uniqid()).'-'.time();
     }
 
     /**
@@ -72,7 +72,7 @@
      */
     public static function canBeRefunded(Order $order): bool
     {
-        return $order->status === OrderStatus::DELIVERED;
+        return OrderStatus::DELIVERED === $order->status;
     }
 
     /**
@@ -105,7 +105,7 @@
 
         $symbol = $symbols[$currency] ?? $currency;
 
-        return $symbol . ' ' . number_format($amount, 2);
+        return $symbol.' '.number_format($amount, 2);
     }
 
     /**
@@ -113,11 +113,11 @@
      */
     public static function getEstimatedDeliveryDate(Order $order): ?\DateTimeInterface
     {
-        if ($order->status === OrderStatus::SHIPPED && $order->shipped_at) {
+        if (OrderStatus::SHIPPED === $order->status && $order->shipped_at) {
             return $order->shipped_at->addDays(3);
         }
 
-        if ($order->status === OrderStatus::PROCESSING) {
+        if (OrderStatus::PROCESSING === $order->status) {
             return now()->addDays(5);
         }
 
@@ -129,7 +129,7 @@
      */
     public static function isOverdue(Order $order): bool
     {
-        if ($order->status !== OrderStatus::SHIPPED) {
+        if (OrderStatus::SHIPPED !== $order->status) {
             return false;
         }
 
@@ -138,4 +138,3 @@
         return $estimatedDelivery && now()->isAfter($estimatedDelivery);
     }
 }
-

      ----------- end diff -----------

  21) app/Helpers/PriceHelper.php
      ---------- begin diff ----------
--- /var/www/html/app/Helpers/PriceHelper.php
+++ /var/www/html/app/Helpers/PriceHelper.php
@@ -16,14 +16,14 @@
     {
         $currencyCode ??= config('coprra.default_currency', 'USD');
 
-        /** @var \App\Models\Currency|null $currency */
+        /** @var Currency|null $currency */
         $currency = Currency::where('code', $currencyCode)->first();
 
-        if (! $currency) {
-            return number_format($price, 2) . ' ' . (is_string($currencyCode) ? $currencyCode : 'USD');
+        if (!$currency) {
+            return number_format($price, 2).' '.(is_string($currencyCode) ? $currencyCode : 'USD');
         }
 
-        return (string) $currency->symbol . number_format($price, 2);
+        return (string) $currency->symbol.number_format($price, 2);
     }
 
     /**
@@ -45,11 +45,11 @@
     {
         $difference = self::calculatePriceDifference($originalPrice, $comparePrice);
         if ($difference > 0) {
-            return '+' . number_format($difference, 1) . '%';
+            return '+'.number_format($difference, 1).'%';
         }
 
         if ($difference < 0) {
-            return number_format($difference, 1) . '%';
+            return number_format($difference, 1).'%';
         }
 
         return '0%';
@@ -58,11 +58,11 @@
     /**
      * Check if price is a good deal (below average).
      *
-     * @param  array<float>  $allPrices
+     * @param array<float> $allPrices
      */
     public static function isGoodDeal(float $price, array $allPrices): bool
     {
-        if ($allPrices === []) {
+        if ([] === $allPrices) {
             return false;
         }
 
@@ -74,11 +74,11 @@
     /**
      * Get best price from array of prices.
      *
-     * @param  array<float>  $prices
+     * @param array<float> $prices
      */
     public static function getBestPrice(array $prices): ?float
     {
-        if ($prices === []) {
+        if ([] === $prices) {
             return null;
         }
 
@@ -105,7 +105,7 @@
         $defaultCurrency = config('coprra.default_currency', 'USD');
         $currencyCode ??= is_string($defaultCurrency) ? $defaultCurrency : 'USD';
 
-        /** @var \App\Models\Currency|null $currency */
+        /** @var Currency|null $currency */
         $currency = Currency::where('code', $currencyCode)->first();
 
         // The symbol is either the currency's symbol or the currency code string itself.
@@ -112,9 +112,9 @@
         $symbol = $currency ? (string) $currency->symbol : (string) $currencyCode;
 
         if ($minPrice === $maxPrice) {
-            return $symbol . number_format($minPrice, 2);
+            return $symbol.number_format($minPrice, 2);
         }
 
-        return $symbol . number_format($minPrice, 2) . ' - ' . $symbol . number_format($maxPrice, 2);
+        return $symbol.number_format($minPrice, 2).' - '.$symbol.number_format($maxPrice, 2);
     }
 }

      ----------- end diff -----------

  22) app/Http/Controllers/Admin/AIControlPanelController.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Controllers/Admin/AIControlPanelController.php
+++ /var/www/html/app/Http/Controllers/Admin/AIControlPanelController.php
@@ -5,12 +5,7 @@
 namespace App\Http\Controllers\Admin;
 
 use App\Http\Controllers\Controller;
-use App\Services\AIService;
-use Illuminate\Contracts\View\View as ViewContract;
-use Illuminate\Http\JsonResponse;
-use Illuminate\Http\Request;
 
 class AIControlPanelController extends Controller
 {
-
 }

      ----------- end diff -----------

  23) app/Http/Controllers/Admin/DashboardController.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Controllers/Admin/DashboardController.php
+++ /var/www/html/app/Http/Controllers/Admin/DashboardController.php
@@ -15,7 +15,7 @@
     public function __construct(
         private readonly LoginAttemptService $loginAttemptService,
         private readonly UserBanService $userBanService,
-        private readonly FileSecurityService $fileSecurityService
+        private readonly FileSecurityService $fileSecurityService,
     ) {
         $this->middleware('auth');
         $this->middleware('admin');
@@ -282,7 +282,7 @@
         $total = disk_total_space('/');
         $free = disk_free_space('/');
 
-        if ($total === false || $free === false) {
+        if (false === $total || false === $free) {
             return [
                 'total' => 0,
                 'used' => 0,
@@ -319,7 +319,7 @@
     {
         try {
             \Cache::put('test_key', 'test_value', 1);
-            $status = \Cache::get('test_key') === 'test_value';
+            $status = 'test_value' === \Cache::get('test_key');
             \Cache::forget('test_key');
 
             return [
@@ -363,7 +363,7 @@
             $result = \Cache::get('health_check');
             \Cache::forget('health_check');
 
-            return ['status' => $result === 'ok' ? 'healthy' : 'error', 'message' => 'Cache test completed'];
+            return ['status' => 'ok' === $result ? 'healthy' : 'error', 'message' => 'Cache test completed'];
         } catch (\Exception $e) {
             return ['status' => 'error', 'message' => $e->getMessage()];
         }
@@ -382,7 +382,7 @@
             $result = \Storage::get($testFile);
             \Storage::delete($testFile);
 
-            $isHealthy = is_string($result) && $result === 'test';
+            $isHealthy = is_string($result) && 'test' === $result;
 
             return ['status' => $isHealthy ? 'healthy' : 'error', 'message' => 'Storage test completed'];
         } catch (\Exception $e) {
@@ -442,7 +442,7 @@
     private function getUserRegistrationChart(): array
     {
         $data = [];
-        for ($i = 6; $i >= 0; $i--) {
+        for ($i = 6; $i >= 0; --$i) {
             $date = now()->subDays($i);
             $data[] = [
                 'date' => $date->format('Y-m-d'),

      ----------- end diff -----------

  24) app/Http/Controllers/AdminController.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Controllers/AdminController.php
+++ /var/www/html/app/Http/Controllers/AdminController.php
@@ -4,14 +4,6 @@
 
 namespace App\Http\Controllers;
 
-use App\Models\Brand;
-use App\Models\Category;
-use App\Models\Product;
-use App\Models\Store;
-use App\Models\User;
-use Illuminate\Contracts\View\View;
-
 class AdminController extends Controller
 {
-
 }

      ----------- end diff -----------

  25) app/Http/Controllers/AnalyticsController.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Controllers/AnalyticsController.php
+++ /var/www/html/app/Http/Controllers/AnalyticsController.php
@@ -10,13 +10,15 @@
 
 class AnalyticsController extends Controller
 {
-    public function __construct(private BehaviorAnalysisService $behaviorAnalysisService) {}
+    public function __construct(private BehaviorAnalysisService $behaviorAnalysisService)
+    {
+    }
 
     public function userAnalytics(Request $request): JsonResponse
     {
         /** @var \App\Models\User $user */
         $user = $request->user();
-        if (! $user) {
+        if (!$user) {
             return response()->json(['error' => 'Unauthorized'], 401);
         }
         $analytics = $this->behaviorAnalysisService->getUserAnalytics($user);
@@ -42,13 +44,13 @@
             'data' => 'nullable|array',
         ]);
 
-        if (! is_array($validated)) {
+        if (!is_array($validated)) {
             return response()->json(['error' => 'Invalid validation result'], 400);
         }
 
         /** @var \App\Models\User $user */
         $user = $request->user();
-        if (! $user) {
+        if (!$user) {
             return response()->json(['error' => 'Unauthorized'], 401);
         }
         $actionValue = $validated['action'] ?? '';

      ----------- end diff -----------

  26) app/Http/Controllers/Api/Admin/BrandController.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Controllers/Api/Admin/BrandController.php
+++ /var/www/html/app/Http/Controllers/Api/Admin/BrandController.php
@@ -11,8 +11,6 @@
 
 class BrandController extends Controller
 {
-
-
     public function update(Request $request, Brand $brand): JsonResponse
     {
         $validated = $request->validate([

      ----------- end diff -----------

  27) app/Http/Controllers/Api/Admin/CategoryController.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Controllers/Api/Admin/CategoryController.php
+++ /var/www/html/app/Http/Controllers/Api/Admin/CategoryController.php
@@ -11,8 +11,6 @@
 
 class CategoryController extends Controller
 {
-
-
     public function update(Request $request, Category $category): JsonResponse
     {
         $validated = $request->validate([

      ----------- end diff -----------

  28) app/Http/Controllers/Api/AuthController.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Controllers/Api/AuthController.php
+++ /var/www/html/app/Http/Controllers/Api/AuthController.php
@@ -5,14 +5,7 @@
 namespace App\Http\Controllers\Api;
 
 use App\Http\Controllers\Controller;
-use App\Http\Requests\LoginRequest;
-use App\Models\User;
-use Illuminate\Http\JsonResponse;
-use Illuminate\Http\Request;
-use Illuminate\Support\Facades\Hash;
-use Illuminate\Validation\ValidationException;
 
 class AuthController extends Controller
 {
-
 }

      ----------- end diff -----------

  29) app/Http/Controllers/Api/BaseApiController.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Controllers/Api/BaseApiController.php
+++ /var/www/html/app/Http/Controllers/Api/BaseApiController.php
@@ -7,9 +7,6 @@
 use App\Http\Controllers\Controller;
 use Illuminate\Http\JsonResponse;
 use Illuminate\Http\Request;
-use Illuminate\Support\Facades\Log;
-use Illuminate\Support\Facades\Validator;
-use Illuminate\Validation\ValidationException;
 
 /**
  * @OA\Info(
@@ -100,7 +97,7 @@
     /**
      * Error response.
      *
-     * @param array<string, mixed>  $meta
+     * @param array<string, mixed> $meta
      *
      * @psalm-param array<string, mixed>|null $errors
      */
@@ -107,8 +104,8 @@
     protected function errorResponse(
         string $message = 'Error',
         int $statusCode = 400,
-        array|null $errors = null,
-        array $meta = []
+        ?array $errors = null,
+        array $meta = [],
     ): JsonResponse {
         $response = [
             'success' => false,
@@ -115,11 +112,11 @@
             'message' => $message,
         ];
 
-        if ($errors !== null) {
+        if (null !== $errors) {
             $response['errors'] = $errors;
         }
 
-        if ($meta !== []) {
+        if ([] !== $meta) {
             $response['meta'] = $meta;
         }
 
@@ -129,11 +126,11 @@
     /**
      * Validation error response.
      *
-     * @param  array<string, mixed>  $errors
+     * @param array<string, mixed> $errors
      */
     protected function validationErrorResponse(
         array $errors,
-        string $message = 'Validation failed'
+        string $message = 'Validation failed',
     ): JsonResponse {
         return $this->errorResponse($message, 422, $errors);
     }
@@ -142,7 +139,7 @@
      * Not found response.
      */
     protected function notFoundResponse(
-        string $message = 'Resource not found'
+        string $message = 'Resource not found',
     ): JsonResponse {
         return $this->errorResponse($message, 404);
     }
@@ -151,7 +148,7 @@
      * Unauthorized response.
      */
     protected function unauthorizedResponse(
-        string $message = 'Unauthorized'
+        string $message = 'Unauthorized',
     ): JsonResponse {
         return $this->errorResponse($message, 401);
     }
@@ -160,7 +157,7 @@
      * Forbidden response.
      */
     protected function forbiddenResponse(
-        string $message = 'Forbidden'
+        string $message = 'Forbidden',
     ): JsonResponse {
         return $this->errorResponse($message, 403);
     }
@@ -169,7 +166,7 @@
      * Server error response.
      */
     protected function serverErrorResponse(
-        string $message = 'Internal server error'
+        string $message = 'Internal server error',
     ): JsonResponse {
         return $this->errorResponse($message, 500);
     }
@@ -178,11 +175,9 @@
      * Get filtering parameters.
      */
 
-
     /**
      * Get search parameters.
      */
-
 
     /**
      * Get API version from request.

      ----------- end diff -----------

  30) app/Http/Controllers/Api/DocumentationController.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Controllers/Api/DocumentationController.php
+++ /var/www/html/app/Http/Controllers/Api/DocumentationController.php
@@ -4,9 +4,6 @@
 
 namespace App\Http\Controllers\Api;
 
-use Illuminate\Http\JsonResponse;
-
 class DocumentationController extends BaseApiController
 {
-
 }

      ----------- end diff -----------

  31) app/Http/Controllers/Api/PriceSearchController.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Controllers/Api/PriceSearchController.php
+++ /var/www/html/app/Http/Controllers/Api/PriceSearchController.php
@@ -7,18 +7,14 @@
 use App\Http\Controllers\Controller;
 use App\Models\PriceOffer;
 use App\Models\Product;
-use App\Models\Store;
 use Exception;
 use Illuminate\Http\JsonResponse;
 use Illuminate\Http\Request;
 use Illuminate\Support\Facades\Http;
 use Illuminate\Support\Facades\Log;
-use Throwable;
 
 class PriceSearchController extends Controller
 {
-
-
     public function bestOffer(Request $request): JsonResponse
     {
         try {
@@ -30,7 +26,7 @@
                 // If no parameters, return all products as a list
                 $queryBuilder = Product::with([
                     'priceOffers' => static function ($query): void {
-                        /** @var \Illuminate\Database\Eloquent\Builder<\App\Models\PriceOffer> $query */
+                        /* @var \Illuminate\Database\Eloquent\Builder<\App\Models\PriceOffer> $query */
                         $query->where('is_available', true)
                             ->orderBy('price', 'asc')
                             ->with('store:id,name');
@@ -46,7 +42,7 @@
                     ], 404);
                 }
 
-                /** @var \Illuminate\Support\Collection<int, \App\Models\Product> $products */
+                /* @var \Illuminate\Support\Collection<int, \App\Models\Product> $products */
                 return response()->json([
                     'data' => $products->map(static function (Product $product): array {
                         $bestOffer = $product->priceOffers->first();
@@ -67,7 +63,7 @@
             if ($productId) {
                 $queryBuilder = Product::with([
                     'priceOffers' => static function ($query): void {
-                        /** @var \Illuminate\Database\Eloquent\Builder<\App\Models\PriceOffer> $query */
+                        /* @var \Illuminate\Database\Eloquent\Builder<\App\Models\PriceOffer> $query */
                         $query->where('is_available', true)
                             ->orderBy('price', 'asc')
                             ->with('store:id,name');
@@ -80,7 +76,7 @@
                 $productNameStr = is_string($productName) ? $productName : '';
                 $queryBuilder = Product::with([
                     'priceOffers' => static function ($query): void {
-                        /** @var \Illuminate\Database\Eloquent\Builder<\App\Models\PriceOffer> $query */
+                        /* @var \Illuminate\Database\Eloquent\Builder<\App\Models\PriceOffer> $query */
                         $query->where('is_available', true)
                             ->orderBy('price', 'asc')
                             ->with('store:id,name');
@@ -91,13 +87,13 @@
                 $product = $queryBuilder->where('name', 'like', '%'.$productNameStr.'%')->first();
             }
 
-            if (! $product) {
+            if (!$product) {
                 return response()->json([
                     'message' => 'Product not found',
                 ], 404);
             }
 
-            /** @var \App\Models\Product $product */
+            /** @var Product $product */
             if ($product->priceOffers->isEmpty()) {
                 return response()->json([
                     'message' => 'No offers available for this product',
@@ -104,7 +100,7 @@
                 ], 404);
             }
 
-            /** @var \App\Models\PriceOffer $bestOffer */
+            /** @var PriceOffer $bestOffer */
             $bestOffer = $product->priceOffers->first();
 
             return response()->json([
@@ -128,7 +124,7 @@
                     ];
                 })->toArray(),
             ]);
-        } catch (\Exception $e) {
+        } catch (Exception $e) {
             Log::error('PriceSearchController@bestOffer failed: '.$e->getMessage());
 
             return response()->json([
@@ -141,7 +137,7 @@
     private function getCountryCode(Request $request): string
     {
         $countryInput = $request->input('country');
-        if ($request->has('country') && is_string($countryInput) && strlen($countryInput) === 2) {
+        if ($request->has('country') && is_string($countryInput) && 2 === strlen($countryInput)) {
             return strtoupper($countryInput);
         }
 
@@ -153,7 +149,7 @@
         try {
             $response = Http::timeout(2)->get('https://ipapi.co/country');
             $body = $response->body();
-            if ($response->successful() && strlen(trim($body)) === 2) {
+            if ($response->successful() && 2 === strlen(trim($body))) {
                 return strtoupper(trim($body));
             }
         } catch (Exception) {

      ----------- end diff -----------

  32) app/Http/Controllers/Api/V2/BaseApiController.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Controllers/Api/V2/BaseApiController.php
+++ /var/www/html/app/Http/Controllers/Api/V2/BaseApiController.php
@@ -43,13 +43,13 @@
     /**
      * Enhanced success response with v2 features.
      *
-     * @param  array<mixed>  $meta
+     * @param array<mixed> $meta
      */
     protected function successResponse(
         mixed $data = null,
         string $message = 'Success',
         int $statusCode = 200,
-        array $meta = []
+        array $meta = [],
     ): JsonResponse {
         $response = [
             'success' => true,
@@ -59,7 +59,7 @@
             'timestamp' => now()->toISOString(),
         ];
 
-        if ($meta !== []) {
+        if ([] !== $meta) {
             $response['meta'] = $meta;
         }
 
@@ -69,13 +69,13 @@
     /**
      * Enhanced error response with v2 features.
      *
-     * @param  array<mixed>  $meta
+     * @param array<mixed> $meta
      */
     protected function errorResponse(
         string $message = 'Error',
         int $statusCode = 400,
         mixed $errors = null,
-        array $meta = []
+        array $meta = [],
     ): JsonResponse {
         $response = [
             'success' => false,
@@ -84,11 +84,11 @@
             'timestamp' => now()->toISOString(),
         ];
 
-        if ($errors !== null) {
+        if (null !== $errors) {
             $response['errors'] = $errors;
         }
 
-        if ($meta !== []) {
+        if ([] !== $meta) {
             $response['meta'] = $meta;
         }
 
@@ -98,12 +98,12 @@
     /**
      * Enhanced paginated response with v2 features.
      *
-     * @param  array<mixed>  $meta
+     * @param array<mixed> $meta
      */
     protected function paginatedResponse(
         mixed $data,
         string $message = 'Success',
-        array $meta = []
+        array $meta = [],
     ): JsonResponse {
         $pagination = [
             'current_page' => is_object($data) && method_exists($data, 'currentPage') ? $data->currentPage() : 1,
@@ -130,7 +130,7 @@
             'timestamp' => now()->toISOString(),
         ];
 
-        if ($meta !== []) {
+        if ([] !== $meta) {
             $response['meta'] = $meta;
         }
 
@@ -178,7 +178,7 @@
         $filters = $request->except(['page', 'per_page', 'sort_by', 'sort_order', 'search', 'include', 'fields']);
 
         // Remove empty values
-        $filters = array_filter($filters, static fn ($value): bool => $value !== null && $value !== '');
+        $filters = array_filter($filters, static fn ($value): bool => null !== $value && '' !== $value);
 
         // Add v2 specific filters
         if ($request->has('date_from')) {
@@ -260,7 +260,7 @@
         $sortMode = $request->get('sort_mode', 'default'); // default, natural, custom
 
         // Validate sort order
-        if (! in_array($sortOrder, ['asc', 'desc'])) {
+        if (!in_array($sortOrder, ['asc', 'desc'])) {
             $sortOrder = 'desc';
         }
 

      ----------- end diff -----------

  33) app/Http/Controllers/Auth/AuthController.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Controllers/Auth/AuthController.php
+++ /var/www/html/app/Http/Controllers/Auth/AuthController.php
@@ -5,22 +5,7 @@
 namespace App\Http\Controllers\Auth;
 
 use App\Http\Controllers\Controller;
-use App\Http\Requests\ForgotPasswordRequest;
-use App\Http\Requests\LoginRequest;
-use App\Http\Requests\RegisterRequest;
-use App\Http\Requests\ResetPasswordRequest;
-use App\Models\User;
-use Illuminate\Auth\Events\PasswordReset;
-use Illuminate\Auth\Events\Registered;
-use Illuminate\Contracts\View\View;
-use Illuminate\Http\RedirectResponse;
-use Illuminate\Support\Facades\Auth;
-use Illuminate\Support\Facades\Hash;
-use Illuminate\Support\Facades\Password;
-use Illuminate\Support\Str;
 
 class AuthController extends Controller
 {
-
 }
-

      ----------- end diff -----------

  34) app/Http/Controllers/Auth/EmailVerificationController.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Controllers/Auth/EmailVerificationController.php
+++ /var/www/html/app/Http/Controllers/Auth/EmailVerificationController.php
@@ -5,15 +5,7 @@
 namespace App\Http\Controllers\Auth;
 
 use App\Http\Controllers\Controller;
-use App\Models\User;
-use Illuminate\Auth\Events\Verified;
-use Illuminate\Contracts\View\View;
-use Illuminate\Foundation\Auth\EmailVerificationRequest;
-use Illuminate\Http\RedirectResponse;
-use Illuminate\Http\Request;
 
 class EmailVerificationController extends Controller
 {
-
 }
-

      ----------- end diff -----------

  35) app/Http/Controllers/BackupController.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Controllers/BackupController.php
+++ /var/www/html/app/Http/Controllers/BackupController.php
@@ -92,7 +92,7 @@
         try {
             $backup = $this->getBackupById($id);
 
-            if (! $backup) {
+            if (!$backup) {
                 return response()->json([
                     'success' => false,
                     'message' => 'Backup not found',
@@ -102,7 +102,7 @@
             $filename = is_string($backup['filename'] ?? '') ? (string) ($backup['filename'] ?? '') : '';
             $filePath = $this->backupPath.'/'.(string) $filename;
 
-            if (! file_exists($filePath)) {
+            if (!file_exists($filePath)) {
                 return response()->json([
                     'success' => false,
                     'message' => 'Backup file not found',
@@ -138,7 +138,7 @@
         try {
             $backup = $this->getBackupById($id);
 
-            if (! $backup) {
+            if (!$backup) {
                 return response()->json([
                     'success' => false,
                     'message' => 'Backup not found',
@@ -177,7 +177,7 @@
         try {
             $backup = $this->getBackupById($id);
 
-            if (! $backup) {
+            if (!$backup) {
                 return response()->json([
                     'success' => false,
                     'message' => 'Backup not found',
@@ -251,21 +251,21 @@
     private function getBackupsList(): array
     {
         try {
-            if (! is_dir($this->backupPath)) {
+            if (!is_dir($this->backupPath)) {
                 mkdir($this->backupPath, 0755, true);
             }
 
             $files = scandir($this->backupPath);
-            if ($files === false) {
+            if (false === $files) {
                 return [];
             }
 
             $backups = [];
             foreach ($files as $file) {
-                if ($file === '.') {
+                if ('.' === $file) {
                     continue;
                 }
-                if ($file === '..') {
+                if ('..' === $file) {
                     continue;
                 }
                 $filePath = $this->backupPath.'/'.(string) $file;
@@ -275,9 +275,9 @@
                     $backups[] = [
                         'id' => pathinfo($file, PATHINFO_FILENAME),
                         'filename' => $file,
-                        'size' => $fileSize !== false ? $fileSize : 0,
-                        'size_formatted' => $this->formatBytes($fileSize !== false ? $fileSize : 0),
-                        'created_at' => $fileTime !== false ? date('Y-m-d H:i:s', $fileTime) : now()->format('Y-m-d H:i:s'),
+                        'size' => false !== $fileSize ? $fileSize : 0,
+                        'size_formatted' => $this->formatBytes(false !== $fileSize ? $fileSize : 0),
+                        'created_at' => false !== $fileTime ? date('Y-m-d H:i:s', $fileTime) : now()->format('Y-m-d H:i:s'),
                         'type' => $this->getBackupType($file),
                     ];
                 }
@@ -297,7 +297,8 @@
     /**
      * Create backup.
      *
-     * @param  array<string, mixed>  $options
+     * @param array<string, mixed> $options
+     *
      * @return array<string, mixed>
      */
     private function createBackup(array $options): array
@@ -310,20 +311,20 @@
             $filename = (is_string($name) ? (string) $name : 'backup').'.zip';
             $filePath = $this->backupPath.'/'.(string) $filename;
 
-            if (! is_dir($this->backupPath)) {
+            if (!is_dir($this->backupPath)) {
                 mkdir($this->backupPath, 0755, true);
             }
 
-            $zip = new ZipArchive;
-            if ($zip->open($filePath, ZipArchive::CREATE) !== true) {
+            $zip = new ZipArchive();
+            if (true !== $zip->open($filePath, ZipArchive::CREATE)) {
                 throw new RuntimeException('Cannot create backup file');
             }
 
-            if ($type === 'full' || $type === 'database') {
+            if ('full' === $type || 'database' === $type) {
                 $this->backupDatabase($zip);
             }
 
-            if ($type === 'full' || $type === 'files') {
+            if ('full' === $type || 'files' === $type) {
                 $this->backupFiles($zip, $options);
             }
 
@@ -337,8 +338,8 @@
                 'id' => pathinfo($filename, PATHINFO_FILENAME),
                 'filename' => $filename,
                 'type' => $type,
-                'size' => $fileSize !== false ? $fileSize : 0,
-                'size_formatted' => $this->formatBytes($fileSize !== false ? $fileSize : 0),
+                'size' => false !== $fileSize ? $fileSize : 0,
+                'size_formatted' => $this->formatBytes(false !== $fileSize ? $fileSize : 0),
                 'created_at' => now()->toISOString(),
                 'description' => $description,
             ];
@@ -359,7 +360,7 @@
             $dumpFile = storage_path('app/temp/database_dump.sql');
             $dumpDir = dirname($dumpFile);
 
-            if (! is_dir($dumpDir)) {
+            if (!is_dir($dumpDir)) {
                 mkdir($dumpDir, 0755, true);
             }
 
@@ -380,7 +381,7 @@
     /**
      * Backup files.
      *
-     * @param  array<string, mixed>  $options
+     * @param array<string, mixed> $options
      */
     private function backupFiles(ZipArchive $zip, array $options): void
     {
@@ -410,7 +411,7 @@
      */
     private function addDirectoryToZip(ZipArchive $zip, string $dir, string $zipPath): void
     {
-        if (! is_dir($dir)) {
+        if (!is_dir($dir)) {
             return;
         }
 
@@ -422,7 +423,7 @@
         foreach ($files as $file) {
             if ($file instanceof \SplFileInfo && $file->isFile()) {
                 $realPath = $file->getRealPath();
-                if ($realPath !== false) {
+                if (false !== $realPath) {
                     $relativePath = $zipPath.'/'.substr($realPath, strlen($dir) + 1);
                     $zip->addFile($realPath, $relativePath);
                 }
@@ -451,7 +452,8 @@
     /**
      * Restore from backup.
      *
-     * @param  array<string, mixed>  $backup
+     * @param array<string, mixed> $backup
+     *
      * @return array<string, mixed>
      */
     private function restoreFromBackup(array $backup): array
@@ -460,7 +462,7 @@
             $filename = is_string($backup['filename'] ?? '') ? (string) ($backup['filename'] ?? '') : '';
             $filePath = $this->backupPath.'/'.(string) $filename;
 
-            if (! file_exists($filePath)) {
+            if (!file_exists($filePath)) {
                 return [
                     'success' => false,
                     'message' => 'Backup file not found',
@@ -467,8 +469,8 @@
                 ];
             }
 
-            $zip = new ZipArchive;
-            if ($zip->open($filePath) !== true) {
+            $zip = new ZipArchive();
+            if (true !== $zip->open($filePath)) {
                 return [
                     'success' => false,
                     'message' => 'Cannot open backup file',
@@ -538,12 +540,12 @@
             foreach ($files as $file) {
                 if ($file instanceof \SplFileInfo && $file->isFile()) {
                     $realPath = $file->getRealPath();
-                    if ($realPath !== false) {
+                    if (false !== $realPath) {
                         $relativePath = substr($realPath, strlen($tempDir) + 1);
                         $targetPath = base_path($relativePath);
 
                         $targetDir = dirname($targetPath);
-                        if (! is_dir($targetDir)) {
+                        if (!is_dir($targetDir)) {
                             mkdir($targetDir, 0755, true);
                         }
 
@@ -590,7 +592,7 @@
      */
     private function removeDirectory(string $dir): void
     {
-        if (! is_dir($dir)) {
+        if (!is_dir($dir)) {
             return;
         }
 

      ----------- end diff -----------

  36) app/Http/Controllers/BrandController.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Controllers/BrandController.php
+++ /var/www/html/app/Http/Controllers/BrandController.php
@@ -4,7 +4,6 @@
 
 namespace App\Http\Controllers;
 
-use App\Http\Requests\StoreBrandRequest;
 use App\Http\Requests\UpdateBrandRequest;
 use App\Models\Brand;
 use Illuminate\Http\RedirectResponse;
@@ -12,8 +11,6 @@
 
 class BrandController extends Controller
 {
-
-
     /**
      * Show the form for creating a new resource.
      */

      ----------- end diff -----------

  37) app/Http/Controllers/CategoryController.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Controllers/CategoryController.php
+++ /var/www/html/app/Http/Controllers/CategoryController.php
@@ -4,10 +4,6 @@
 
 namespace App\Http\Controllers;
 
-use App\Models\Category;
-use Illuminate\View\View;
-
 class CategoryController extends Controller
 {
-
 }

      ----------- end diff -----------

  38) app/Http/Controllers/ErrorController.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Controllers/ErrorController.php
+++ /var/www/html/app/Http/Controllers/ErrorController.php
@@ -45,7 +45,7 @@
     {
         $error = $this->getErrorById($id);
 
-        if (! $error) {
+        if (!$error) {
             if ($request->expectsJson()) {
                 return response()->json([
                     'success' => false,
@@ -139,10 +139,10 @@
                     if (str_contains($line, 'ERROR') || str_contains($line, 'CRITICAL')) {
                         $error = $this->parseLogLine($line);
 
-                        $stats['total_errors']++;
+                        ++$stats['total_errors'];
 
                         if (str_contains($line, 'CRITICAL')) {
-                            $stats['critical_errors']++;
+                            ++$stats['critical_errors'];
                         }
 
                         // Count by type
@@ -154,7 +154,7 @@
                         // Count by hour
                         $timestampValue = $error['timestamp'] ?? null;
                         $timestamp = is_string($timestampValue) ? strtotime($timestampValue) : time();
-                        $validTimestamp = $timestamp === false ? time() : $timestamp;
+                        $validTimestamp = false === $timestamp ? time() : $timestamp;
                         $hour = date('H', $validTimestamp);
                         $stats['errors_by_hour'][$hour] = ($stats['errors_by_hour'][$hour] ?? 0) + 1;
 
@@ -200,11 +200,11 @@
 
             $overallHealth = 'healthy';
             foreach ($health as $status) {
-                if ($status['status'] === 'critical') {
+                if ('critical' === $status['status']) {
                     $overallHealth = 'critical';
                     break;
                 }
-                if ($status['status'] === 'warning') {
+                if ('warning' === $status['status']) {
                     $overallHealth = 'warning';
                 }
             }
@@ -351,7 +351,7 @@
             $retrieved = \Cache::get($testKey);
             \Cache::forget($testKey);
 
-            if ($retrieved === 'test') {
+            if ('test' === $retrieved) {
                 return ['status' => 'healthy', 'message' => 'Cache is working'];
             }
 

      ----------- end diff -----------

  39) app/Http/Controllers/HealthController.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Controllers/HealthController.php
+++ /var/www/html/app/Http/Controllers/HealthController.php
@@ -4,10 +4,6 @@
 
 namespace App\Http\Controllers;
 
-use Illuminate\Support\Facades\Cache;
-use Illuminate\Support\Facades\DB;
-
 class HealthController extends Controller
 {
-
 }

      ----------- end diff -----------

  40) app/Http/Controllers/HomeController.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Controllers/HomeController.php
+++ /var/www/html/app/Http/Controllers/HomeController.php
@@ -4,12 +4,6 @@
 
 namespace App\Http\Controllers;
 
-use App\Models\Brand;
-use App\Models\Category;
-use App\Models\Product;
-use Illuminate\View\View;
-
 class HomeController extends Controller
 {
-
 }

      ----------- end diff -----------

  41) app/Http/Controllers/LocaleController.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Controllers/LocaleController.php
+++ /var/www/html/app/Http/Controllers/LocaleController.php
@@ -4,17 +4,7 @@
 
 namespace App\Http\Controllers;
 
-use App\Http\Requests\SwitchLanguageRequest;
-use App\Models\Currency;
-use App\Models\Language;
-use Illuminate\Contracts\Auth\Guard;
-use Illuminate\Contracts\Foundation\Application;
-use Illuminate\Contracts\Session\Session;
-
 class LocaleController extends Controller
 {
-
-
     // تم حذف المتغير غير المستخدم من هنا
-
 }

      ----------- end diff -----------

  42) app/Http/Controllers/LogController.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Controllers/LogController.php
+++ /var/www/html/app/Http/Controllers/LogController.php
@@ -24,7 +24,7 @@
     public function index(Request $request): JsonResponse
     {
         try {
-            if (! File::exists($this->logPath)) {
+            if (!File::exists($this->logPath)) {
                 return response()->json([
                     'success' => false,
                     'message' => 'Log file not found',
@@ -94,7 +94,7 @@
     public function download(): JsonResponse
     {
         try {
-            if (! File::exists($this->logPath)) {
+            if (!File::exists($this->logPath)) {
                 return response()->json([
                     'success' => false,
                     'message' => 'Log file not found',
@@ -132,7 +132,7 @@
     public function getStatistics(): JsonResponse
     {
         try {
-            if (! File::exists($this->logPath)) {
+            if (!File::exists($this->logPath)) {
                 return response()->json([
                     'success' => false,
                     'message' => 'Log file not found',
@@ -171,13 +171,14 @@
     /**
      * Parse log file with filters.
      *
-     * @param  array<string>  $allowedLevels
+     * @param array<string> $allowedLevels
+     *
      * @return array<string, mixed>
      */
     public function parseLogFile(array $allowedLevels = []): array
     {
         try {
-            if (! File::exists($this->logPath)) {
+            if (!File::exists($this->logPath)) {
                 return [
                     'success' => false,
                     'message' => 'Log file not found',
@@ -196,7 +197,7 @@
             $reversedLines = array_reverse($lines);
 
             // Filter by allowed levels
-            if ($allowedLevels !== []) {
+            if ([] !== $allowedLevels) {
                 $reversedLines = array_filter($reversedLines, static function ($line) use ($allowedLevels): bool {
                     foreach ($allowedLevels as $level) {
                         if (str_contains($line, $level)) {
@@ -234,7 +235,7 @@
         try {
             $accessLogPath = storage_path('logs/access.log');
 
-            if (! File::exists($accessLogPath)) {
+            if (!File::exists($accessLogPath)) {
                 return [
                     'success' => false,
                     'message' => 'Access log file not found',
@@ -277,7 +278,7 @@
             $limit = $request->get('limit', 50);
             $parsedLogs = $this->parseLogFile(['ERROR', 'CRITICAL', 'EMERGENCY']);
 
-            if (! $parsedLogs['success']) {
+            if (!$parsedLogs['success']) {
                 return response()->json([
                     'success' => false,
                     'message' => $parsedLogs['message'],
@@ -339,7 +340,7 @@
     /**
      * Export logs to file.
      *
-     * @param  array<string, mixed>  $logs
+     * @param array<string, mixed> $logs
      */
     public function exportLogsToFile(array $logs): JsonResponse
     {
@@ -348,7 +349,7 @@
             $filePath = storage_path('app/'.$filename);
 
             $file = fopen($filePath, 'w');
-            if ($file === false) {
+            if (false === $file) {
                 return response()->json([
                     'success' => false,
                     'message' => 'Failed to create export file',
@@ -441,7 +442,7 @@
     /**
      * Count log level occurrences.
      *
-     * @param  array<string>  $lines
+     * @param array<string> $lines
      */
     private function countLogLevel(array $lines, string $level): int
     {
@@ -448,7 +449,7 @@
         $count = 0;
         foreach ($lines as $line) {
             if (str_contains($line, $level)) {
-                $count++;
+                ++$count;
             }
         }
 

      ----------- end diff -----------

  43) app/Http/Controllers/OrderController.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Controllers/OrderController.php
+++ /var/www/html/app/Http/Controllers/OrderController.php
@@ -4,16 +4,11 @@
 
 namespace App\Http\Controllers;
 
-use App\Models\Order;
-use App\Services\OrderService;
-use App\Services\PointsService;
 use Illuminate\Http\JsonResponse;
 use Illuminate\Http\Request;
 
 class OrderController extends Controller
 {
-
-
     public function create(Request $request): JsonResponse
     {
         $validated = $request->validate([
@@ -24,12 +19,12 @@
             'billing_address' => 'required|array',
         ]);
 
-        if (! is_array($validated)) {
+        if (!is_array($validated)) {
             return response()->json(['error' => 'Invalid validation result'], 400);
         }
 
         $user = $request->user();
-        if (! $user) {
+        if (!$user) {
             return response()->json(['error' => 'Unauthorized'], 401);
         }
 

      ----------- end diff -----------

  44) app/Http/Controllers/PaymentController.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Controllers/PaymentController.php
+++ /var/www/html/app/Http/Controllers/PaymentController.php
@@ -4,13 +4,6 @@
 
 namespace App\Http\Controllers;
 
-use App\Models\Order;
-use App\Models\PaymentMethod;
-use App\Services\PaymentService;
-use Illuminate\Http\JsonResponse;
-use Illuminate\Http\Request;
-
 class PaymentController extends Controller
 {
-
 }

      ----------- end diff -----------

  45) app/Http/Controllers/PointsController.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Controllers/PointsController.php
+++ /var/www/html/app/Http/Controllers/PointsController.php
@@ -4,12 +4,6 @@
 
 namespace App\Http\Controllers;
 
-use App\Models\Reward;
-use App\Services\PointsService;
-use Illuminate\Http\JsonResponse;
-use Illuminate\Http\Request;
-
 class PointsController extends Controller
 {
-
 }

      ----------- end diff -----------

  46) app/Http/Controllers/PriceAlertController.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Controllers/PriceAlertController.php
+++ /var/www/html/app/Http/Controllers/PriceAlertController.php
@@ -4,7 +4,6 @@
 
 namespace App\Http\Controllers;
 
-use App\Http\Requests\StorePriceAlertRequest;
 use App\Http\Requests\UpdatePriceAlertRequest;
 use App\Models\PriceAlert;
 use App\Models\Product;

      ----------- end diff -----------

  47) app/Http/Controllers/PriceComparisonController.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Controllers/PriceComparisonController.php
+++ /var/www/html/app/Http/Controllers/PriceComparisonController.php
@@ -16,8 +16,9 @@
     public function __construct(
         private readonly AnalyticsService $analyticsService,
         private readonly CacheService $cacheService,
-        private readonly StoreAdapterManager $storeAdapterManager
-    ) {}
+        private readonly StoreAdapterManager $storeAdapterManager,
+    ) {
+    }
 
     /**
      * Show price comparison for a product.
@@ -80,7 +81,7 @@
                     'currency' => $productData['currency'],
                     'original_price' => null, // TODO: Get from price history
                     'url' => $productData['url'],
-                    'in_stock' => $productData['availability'] === 'in_stock',
+                    'in_stock' => 'in_stock' === $productData['availability'],
                     'rating' => $productData['rating'],
                     'reviews_count' => $productData['reviews_count'],
                     'shipping_cost' => null, // TODO: Calculate shipping
@@ -102,7 +103,7 @@
         }
 
         // Find lowest price among in-stock items
-        $inStockPrices = array_filter($prices, fn($p) => $p['in_stock']);
+        $inStockPrices = array_filter($prices, fn ($p) => $p['in_stock']);
 
         if (empty($inStockPrices)) {
             return $prices;
@@ -134,7 +135,7 @@
      */
     private function getStoreName(string $identifier): string
     {
-        return match($identifier) {
+        return match ($identifier) {
             'amazon' => 'Amazon',
             'ebay' => 'eBay',
             'noon' => 'Noon',
@@ -161,7 +162,7 @@
      */
     private function formatPrice(float $price, string $currency): string
     {
-        return number_format($price, 2) . ' ' . $currency;
+        return number_format($price, 2).' '.$currency;
     }
 
     /**
@@ -182,4 +183,3 @@
         ]);
     }
 }
-

      ----------- end diff -----------

  48) app/Http/Controllers/ProfileController.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Controllers/ProfileController.php
+++ /var/www/html/app/Http/Controllers/ProfileController.php
@@ -10,8 +10,6 @@
 
 class ProfileController extends Controller
 {
-
-
     /**
      * Update the user profile.
      *
@@ -21,7 +19,7 @@
     {
         $user = Auth::user();
 
-        if (! $user) {
+        if (!$user) {
             return back()->withErrors(['error' => 'User not authenticated.']);
         }
 
@@ -42,7 +40,7 @@
             $currentPasswordValue = $request->current_password;
             $currentPassword = is_string($currentPasswordValue) ? $currentPasswordValue : '';
 
-            if (! Hash::check($currentPassword, $user->password)) {
+            if (!Hash::check($currentPassword, $user->password)) {
                 return back()->withErrors(['current_password' => 'The current password is incorrect.']);
             }
 

      ----------- end diff -----------

  49) app/Http/Controllers/RecommendationController.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Controllers/RecommendationController.php
+++ /var/www/html/app/Http/Controllers/RecommendationController.php
@@ -11,12 +11,14 @@
 
 class RecommendationController extends Controller
 {
-    public function __construct(private RecommendationService $recommendationService) {}
+    public function __construct(private RecommendationService $recommendationService)
+    {
+    }
 
     public function index(Request $request): JsonResponse
     {
         $user = $request->user();
-        if (! $user) {
+        if (!$user) {
             return response()->json(['error' => 'Unauthorized'], 401);
         }
 

      ----------- end diff -----------

  50) app/Http/Controllers/ReportController.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Controllers/ReportController.php
+++ /var/www/html/app/Http/Controllers/ReportController.php
@@ -4,12 +4,6 @@
 
 namespace App\Http\Controllers;
 
-use App\Services\ReportService;
-use Illuminate\Http\JsonResponse;
-use Illuminate\Http\Request;
-use Illuminate\Support\Facades\Log;
-
 class ReportController extends Controller
 {
-
 }

      ----------- end diff -----------

  51) app/Http/Controllers/ReviewController.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Controllers/ReviewController.php
+++ /var/www/html/app/Http/Controllers/ReviewController.php
@@ -4,7 +4,6 @@
 
 namespace App\Http\Controllers;
 
-use App\Http\Requests\StoreReviewRequest;
 use App\Http\Requests\UpdateReviewRequest;
 use App\Models\Product;
 use App\Models\Review;

      ----------- end diff -----------

  52) app/Http/Controllers/SettingController.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Controllers/SettingController.php
+++ /var/www/html/app/Http/Controllers/SettingController.php
@@ -13,8 +13,6 @@
 
 class SettingController extends Controller
 {
-
-
     /**
      * Update settings.
      */
@@ -206,7 +204,7 @@
     /**
      * Process imported settings.
      *
-     * @param  array<string, mixed>  $settings
+     * @param array<string, mixed> $settings
      */
     private function processImportedSettings(array $settings): void
     {

      ----------- end diff -----------

  53) app/Http/Controllers/SystemController.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Controllers/SystemController.php
+++ /var/www/html/app/Http/Controllers/SystemController.php
@@ -12,8 +12,6 @@
 
 class SystemController extends Controller
 {
-
-
     /**
      * Run database migrations.
      */
@@ -77,7 +75,7 @@
             $process->setTimeout(3600); // 1 hour timeout
             $process->run();
 
-            if (! $process->isSuccessful()) {
+            if (!$process->isSuccessful()) {
                 throw new RuntimeException($process->getErrorOutput());
             }
 
@@ -102,7 +100,8 @@
     /**
      * Run system backup.
      *
-     * @param  array<string, mixed>  $options
+     * @param array<string, mixed> $options
+     *
      * @return array<string, mixed>
      */
     public function runBackup(array $options = []): array

      ----------- end diff -----------

  54) app/Http/Controllers/UserController.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Controllers/UserController.php
+++ /var/www/html/app/Http/Controllers/UserController.php
@@ -17,8 +17,9 @@
 {
     public function __construct(
         private readonly UserBanService $userBanService,
-        private readonly PasswordPolicyService $passwordPolicyService
-    ) {}
+        private readonly PasswordPolicyService $passwordPolicyService,
+    ) {
+    }
 
     /**
      * Display a listing of users.
@@ -48,9 +49,9 @@
         // Filter by status
         if ($request->has('status')) {
             $status = $request->get('status');
-            if ($status === 'active') {
+            if ('active' === $status) {
                 $query->where('is_blocked', false);
-            } elseif ($status === 'blocked') {
+            } elseif ('blocked' === $status) {
                 $query->where('is_blocked', true);
             }
         }
@@ -102,7 +103,7 @@
     {
         // Verify current password
         $currentPassword = $request->current_password;
-        if (! Hash::check(is_string($currentPassword) ? $currentPassword : '', $user->password)) {
+        if (!Hash::check(is_string($currentPassword) ? $currentPassword : '', $user->password)) {
             return response()->json([
                 'success' => false,
                 'message' => 'Current password is incorrect',
@@ -112,7 +113,7 @@
         // Validate new password against policy
         $newPassword = $request->new_password;
         $passwordValidation = $this->passwordPolicyService->validatePassword(is_string($newPassword) ? $newPassword : '', $user->id);
-        if (! $passwordValidation['valid']) {
+        if (!$passwordValidation['valid']) {
             return response()->json([
                 'success' => false,
                 'message' => 'Password does not meet policy requirements',

      ----------- end diff -----------

  55) app/Http/Controllers/WebhookController.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Controllers/WebhookController.php
+++ /var/www/html/app/Http/Controllers/WebhookController.php
@@ -4,7 +4,6 @@
 
 namespace App\Http\Controllers;
 
-use App\Services\WebhookService;
 use Illuminate\Http\JsonResponse;
 use Illuminate\Http\Request;
 use Illuminate\Support\Facades\Log;
@@ -11,8 +10,6 @@
 
 class WebhookController extends Controller
 {
-
-
     /**
      * Generic webhook handler.
      */
@@ -54,7 +51,6 @@
                 'webhook_id' => $webhook->id,
                 'message' => 'Webhook received and queued for processing',
             ], 202);
-
         } catch (\Illuminate\Validation\ValidationException $e) {
             Log::warning('Webhook validation failed', [
                 'store' => $storeIdentifier,
@@ -66,7 +62,6 @@
                 'message' => 'Validation failed',
                 'errors' => $e->errors(),
             ], 422);
-
         } catch (\Exception $e) {
             Log::error('Webhook handling failed', [
                 'store' => $storeIdentifier,
@@ -80,4 +75,3 @@
         }
     }
 }
-

      ----------- end diff -----------

  56) app/Http/Controllers/WishlistController.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Controllers/WishlistController.php
+++ /var/www/html/app/Http/Controllers/WishlistController.php
@@ -4,10 +4,6 @@
 
 namespace App\Http\Controllers;
 
-use Illuminate\Contracts\Auth\Guard;
-use Illuminate\Http\JsonResponse;
-use Illuminate\Http\Request;
-
 class WishlistController extends Controller
 {
     // تم إضافة هذا الثابت لتقليل التكرار

      ----------- end diff -----------

  57) app/Http/Kernel.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Kernel.php
+++ /var/www/html/app/Http/Kernel.php
@@ -17,13 +17,13 @@
      */
     protected $middleware = [
         // \App\Http\Middleware\TrustHosts::class,
-        \App\Http\Middleware\TrustProxies::class,
+        Middleware\TrustProxies::class,
         \Illuminate\Http\Middleware\HandleCors::class,
-        \App\Http\Middleware\PreventRequestsDuringMaintenance::class,
+        Middleware\PreventRequestsDuringMaintenance::class,
         \Illuminate\Foundation\Http\Middleware\ValidatePostSize::class,
-        \App\Http\Middleware\TrimStrings::class,
+        Middleware\TrimStrings::class,
         \Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull::class,
-        \App\Http\Middleware\SecurityHeadersMiddleware::class,
+        Middleware\SecurityHeadersMiddleware::class,
     ];
 
     /**
@@ -33,14 +33,14 @@
      */
     protected $middlewareGroups = [
         'web' => [
-            \App\Http\Middleware\EncryptCookies::class,
+            Middleware\EncryptCookies::class,
             \Illuminate\Cookie\Middleware\AddQueuedCookiesToResponse::class,
             \Illuminate\Session\Middleware\StartSession::class,
             \Illuminate\View\Middleware\ShareErrorsFromSession::class,
-            \App\Http\Middleware\VerifyCsrfToken::class,
+            Middleware\VerifyCsrfToken::class,
             \Illuminate\Routing\Middleware\SubstituteBindings::class,
-            \App\Http\Middleware\LocaleMiddleware::class,
-            \App\Http\Middleware\SetLocaleAndCurrency::class,
+            Middleware\LocaleMiddleware::class,
+            Middleware\SetLocaleAndCurrency::class,
         ],
 
         'api' => [
@@ -47,7 +47,7 @@
             \Laravel\Sanctum\Http\Middleware\EnsureFrontendRequestsAreStateful::class,
             'throttle:api',
             \Illuminate\Routing\Middleware\SubstituteBindings::class,
-            \App\Http\Middleware\ApiErrorHandler::class,
+            Middleware\ApiErrorHandler::class,
         ],
     ];
 
@@ -59,18 +59,18 @@
      * @var array<string, class-string|string>
      */
     protected $middlewareAliases = [
-        'auth' => \App\Http\Middleware\Authenticate::class,
+        'auth' => Middleware\Authenticate::class,
         'auth.basic' => \Illuminate\Auth\Middleware\AuthenticateWithBasicAuth::class,
         'auth.session' => \Illuminate\Session\Middleware\AuthenticateSession::class,
         'cache.headers' => \Illuminate\Http\Middleware\SetCacheHeaders::class,
         'can' => \Illuminate\Auth\Middleware\Authorize::class,
-        'guest' => \App\Http\Middleware\RedirectIfAuthenticated::class,
+        'guest' => Middleware\RedirectIfAuthenticated::class,
         'password.confirm' => \Illuminate\Auth\Middleware\RequirePassword::class,
         'precognitive' => \Illuminate\Foundation\Http\Middleware\HandlePrecognitiveRequests::class,
-        'signed' => \App\Http\Middleware\ValidateSignature::class,
+        'signed' => Middleware\ValidateSignature::class,
         'throttle' => \Illuminate\Routing\Middleware\ThrottleRequests::class,
         'verified' => \Illuminate\Auth\Middleware\EnsureEmailIsVerified::class,
-        'locale' => \App\Http\Middleware\LocaleMiddleware::class, // ✅ تم إضافة هذا السطر
-        'admin' => \App\Http\Middleware\AdminMiddleware::class,
+        'locale' => Middleware\LocaleMiddleware::class, // ✅ تم إضافة هذا السطر
+        'admin' => Middleware\AdminMiddleware::class,
     ];
 }

      ----------- end diff -----------

  58) app/Http/Middleware/AddQueuedCookiesToResponse.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Middleware/AddQueuedCookiesToResponse.php
+++ /var/www/html/app/Http/Middleware/AddQueuedCookiesToResponse.php
@@ -17,7 +17,7 @@
     {
         $response = $next($request);
 
-        if (! ($response instanceof Response)) {
+        if (!($response instanceof Response)) {
             throw new \RuntimeException('Middleware must return Response instance');
         }
 

      ----------- end diff -----------

  59) app/Http/Middleware/AdminMiddleware.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Middleware/AdminMiddleware.php
+++ /var/www/html/app/Http/Middleware/AdminMiddleware.php
@@ -4,10 +4,6 @@
 
 namespace App\Http\Middleware;
 
-use Closure;
-use Illuminate\Http\Request;
-
 class AdminMiddleware
 {
-
 }

      ----------- end diff -----------

  60) app/Http/Middleware/ApiErrorHandler.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Middleware/ApiErrorHandler.php
+++ /var/www/html/app/Http/Middleware/ApiErrorHandler.php
@@ -4,7 +4,6 @@
 
 namespace App\Http\Middleware;
 
-use Closure;
 use Illuminate\Auth\Access\AuthorizationException;
 use Illuminate\Auth\AuthenticationException;
 use Illuminate\Database\Eloquent\ModelNotFoundException;
@@ -19,8 +18,6 @@
 
 class ApiErrorHandler
 {
-
-
     /**
      * Handle the exception and return appropriate JSON response.
      */

      ----------- end diff -----------

  61) app/Http/Middleware/Authenticate.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Middleware/Authenticate.php
+++ /var/www/html/app/Http/Middleware/Authenticate.php
@@ -24,7 +24,7 @@
     }
 
     /**
-     * @param  array<int, string>  $guards
+     * @param array<int, string> $guards
      */
     #[\Override]
     protected function unauthenticated($request, array $guards): never

      ----------- end diff -----------

  62) app/Http/Middleware/AuthenticateSession.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Middleware/AuthenticateSession.php
+++ /var/www/html/app/Http/Middleware/AuthenticateSession.php
@@ -32,7 +32,7 @@
         }
 
         $response = $next($request);
-        if (! ($response instanceof \Symfony\Component\HttpFoundation\Response)) {
+        if (!($response instanceof \Symfony\Component\HttpFoundation\Response)) {
             throw new \RuntimeException('Middleware must return Response instance');
         }
 

      ----------- end diff -----------

  63) app/Http/Middleware/AuthenticateWithBasicAuth.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Middleware/AuthenticateWithBasicAuth.php
+++ /var/www/html/app/Http/Middleware/AuthenticateWithBasicAuth.php
@@ -16,22 +16,22 @@
     {
         $username = $request->getUser();
         $password = $request->getPassword();
-        if (! $username) {
+        if (!$username) {
             return response('Unauthorized', 401, [
                 'WWW-Authenticate' => 'Basic realm="API"',
             ]);
         }
-        if (! $password) {
+        if (!$password) {
             return response('Unauthorized', 401, [
                 'WWW-Authenticate' => 'Basic realm="API"',
             ]);
         }
         if (
-            $username === config('app.basic_auth_username') &&
-            $password === config('app.basic_auth_password')
+            $username === config('app.basic_auth_username')
+            && $password === config('app.basic_auth_password')
         ) {
             $response = $next($request);
-            if (! ($response instanceof \Symfony\Component\HttpFoundation\Response)) {
+            if (!($response instanceof \Symfony\Component\HttpFoundation\Response)) {
                 throw new \RuntimeException('Middleware must return Response instance');
             }
 

      ----------- end diff -----------

  64) app/Http/Middleware/Authorize.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Middleware/Authorize.php
+++ /var/www/html/app/Http/Middleware/Authorize.php
@@ -16,7 +16,7 @@
     {
         if (auth()->check() && auth()->user()?->can($ability)) {
             $response = $next($request);
-            if (! ($response instanceof \Symfony\Component\HttpFoundation\Response)) {
+            if (!($response instanceof \Symfony\Component\HttpFoundation\Response)) {
                 throw new \RuntimeException('Middleware must return Response instance');
             }
 

      ----------- end diff -----------

  65) app/Http/Middleware/CheckPermission.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Middleware/CheckPermission.php
+++ /var/www/html/app/Http/Middleware/CheckPermission.php
@@ -13,14 +13,13 @@
     /**
      * Handle an incoming request.
      *
-     * @param  \Closure(\Illuminate\Http\Request): (\Symfony\Component\HttpFoundation\Response)  $next
-     * @param  string  ...$permissions
+     * @param Closure(Request): (Response) $next
      */
     public function handle(Request $request, Closure $next, string ...$permissions): Response
     {
         $user = $request->user();
 
-        if (! $user) {
+        if (!$user) {
             abort(401, 'Unauthorized');
         }
 
@@ -34,4 +33,3 @@
         abort(403, 'Forbidden - Missing required permission');
     }
 }
-

      ----------- end diff -----------

  66) app/Http/Middleware/CheckUserRole.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Middleware/CheckUserRole.php
+++ /var/www/html/app/Http/Middleware/CheckUserRole.php
@@ -14,14 +14,13 @@
     /**
      * Handle an incoming request.
      *
-     * @param  \Closure(\Illuminate\Http\Request): (\Symfony\Component\HttpFoundation\Response)  $next
-     * @param  string  ...$roles
+     * @param Closure(Request): (Response) $next
      */
     public function handle(Request $request, Closure $next, string ...$roles): Response
     {
         $user = $request->user();
 
-        if (! $user) {
+        if (!$user) {
             abort(401, 'Unauthorized');
         }
 
@@ -32,7 +31,7 @@
         );
 
         // Check if user has any of the allowed roles
-        if (! in_array($user->role, $allowedRoles, true)) {
+        if (!in_array($user->role, $allowedRoles, true)) {
             abort(403, 'Forbidden - Insufficient permissions');
         }
 
@@ -39,4 +38,3 @@
         return $next($request);
     }
 }
-

      ----------- end diff -----------

  67) app/Http/Middleware/CompressionMiddleware.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Middleware/CompressionMiddleware.php
+++ /var/www/html/app/Http/Middleware/CompressionMiddleware.php
@@ -11,32 +11,32 @@
 class CompressionMiddleware
 {
     /**
-     * @return \Illuminate\Http\Response|\Symfony\Component\HttpFoundation\Response
+     * @return Response|\Symfony\Component\HttpFoundation\Response
      */
     public function handle(Request $request, Closure $next): \Symfony\Component\HttpFoundation\Response
     {
         $response = $next($request);
 
-        if (! ($response instanceof \Symfony\Component\HttpFoundation\Response)) {
+        if (!($response instanceof \Symfony\Component\HttpFoundation\Response)) {
             throw new \RuntimeException('Middleware must return Response instance');
         }
 
-        if (! ($response instanceof \Illuminate\Http\Response)) {
+        if (!($response instanceof Response)) {
             return $response;
         }
 
-        if (! $this->shouldCompress($request, $response)) {
+        if (!$this->shouldCompress($request, $response)) {
             return $response;
         }
 
         $content = $response->getContent();
-        if (! is_string($content)) {
+        if (!is_string($content)) {
             return $response;
         }
 
         $compressed = $this->compressContent($content, $request);
 
-        if ($compressed !== false) {
+        if (false !== $compressed) {
             $contentString = (string) $compressed;
             $response->setContent($contentString);
             $response->headers->set('Content-Encoding', 'gzip');
@@ -52,7 +52,7 @@
         // Check if client accepts gzip
         $acceptEncoding = $request->header('Accept-Encoding');
         $acceptEncodingString = is_string($acceptEncoding) ? $acceptEncoding : '';
-        if (! str_contains($acceptEncodingString, 'gzip')) {
+        if (!str_contains($acceptEncodingString, 'gzip')) {
             return false;
         }
 
@@ -77,7 +77,7 @@
             }
         }
 
-        if (! $shouldCompress) {
+        if (!$shouldCompress) {
             return false;
         }
 
@@ -92,7 +92,7 @@
         // Try Brotli first if supported
         if (function_exists('brotli_compress') && str_contains($request->header('Accept-Encoding') ?? '', 'br')) {
             $compressed = brotli_compress($content, 6);
-            if ($compressed !== false) {
+            if (false !== $compressed) {
                 return $compressed;
             }
         }

      ----------- end diff -----------

  68) app/Http/Middleware/ConvertEmptyStringsToNull.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Middleware/ConvertEmptyStringsToNull.php
+++ /var/www/html/app/Http/Middleware/ConvertEmptyStringsToNull.php
@@ -21,7 +21,7 @@
         }
 
         $response = $next($request);
-        if (! ($response instanceof \Symfony\Component\HttpFoundation\Response)) {
+        if (!($response instanceof \Symfony\Component\HttpFoundation\Response)) {
             throw new \RuntimeException('Middleware must return Response instance');
         }
 
@@ -30,12 +30,12 @@
 
     private function convertEmptyStringsToNull(array $input): mixed
     {
-        if (! is_array($input)) {
+        if (!is_array($input)) {
             return $input;
         }
 
         foreach ($input as $key => $value) {
-            if (is_string($value) && $value === '') {
+            if (is_string($value) && '' === $value) {
                 $input[$key] = null;
             } elseif (is_array($value)) {
                 $input[$key] = $this->convertEmptyStringsToNull($value);

      ----------- end diff -----------

  69) app/Http/Middleware/EnsureEmailIsVerified.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Middleware/EnsureEmailIsVerified.php
+++ /var/www/html/app/Http/Middleware/EnsureEmailIsVerified.php
@@ -14,7 +14,7 @@
      */
     public function handle(Request $request, Closure $next): \Symfony\Component\HttpFoundation\Response
     {
-        if (auth()->check() && ! auth()->user()?->hasVerifiedEmail()) {
+        if (auth()->check() && !auth()->user()?->hasVerifiedEmail()) {
             if ($request->expectsJson()) {
                 return response()->json(['message' => 'Email verification required'], 403);
             }
@@ -23,7 +23,7 @@
         }
 
         $response = $next($request);
-        if (! ($response instanceof \Symfony\Component\HttpFoundation\Response)) {
+        if (!($response instanceof \Symfony\Component\HttpFoundation\Response)) {
             throw new \RuntimeException('Middleware must return Response instance');
         }
 

      ----------- end diff -----------

  70) app/Http/Middleware/HandleCors.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Middleware/HandleCors.php
+++ /var/www/html/app/Http/Middleware/HandleCors.php
@@ -16,7 +16,7 @@
     {
         $response = $next($request);
 
-        if (! ($response instanceof \Symfony\Component\HttpFoundation\Response)) {
+        if (!($response instanceof \Symfony\Component\HttpFoundation\Response)) {
             throw new \RuntimeException('Middleware must return Response instance');
         }
 
@@ -26,7 +26,7 @@
         $response->headers->set('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, OPTIONS');
         $response->headers->set('Access-Control-Allow-Headers', 'Content-Type, Authorization, X-Requested-With');
 
-        if ($request->getMethod() === 'OPTIONS') {
+        if ('OPTIONS' === $request->getMethod()) {
             $response->setStatusCode(200);
         }
 

      ----------- end diff -----------

  71) app/Http/Middleware/HandlePrecognitiveRequests.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Middleware/HandlePrecognitiveRequests.php
+++ /var/www/html/app/Http/Middleware/HandlePrecognitiveRequests.php
@@ -19,7 +19,7 @@
         }
 
         $response = $next($request);
-        if (! ($response instanceof \Symfony\Component\HttpFoundation\Response)) {
+        if (!($response instanceof \Symfony\Component\HttpFoundation\Response)) {
             throw new \RuntimeException('Middleware must return Response instance');
         }
 

      ----------- end diff -----------

  72) app/Http/Middleware/InputSanitizationMiddleware.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Middleware/InputSanitizationMiddleware.php
+++ /var/www/html/app/Http/Middleware/InputSanitizationMiddleware.php
@@ -13,7 +13,7 @@
     /**
      * Handle an incoming request.
      */
-    public function handle(Request $request, Closure $next): \Symfony\Component\HttpFoundation\Response
+    public function handle(Request $request, Closure $next): Response
     {
         // Sanitize input data
         $this->sanitizeInput($request);
@@ -20,7 +20,7 @@
 
         $response = $next($request);
 
-        if (! ($response instanceof \Symfony\Component\HttpFoundation\Response)) {
+        if (!($response instanceof Response)) {
             throw new \RuntimeException('Middleware must return Response instance');
         }
 
@@ -57,7 +57,8 @@
     /**
      * Sanitize array recursively.
      *
-     * @param  array<array-key, mixed>  $data
+     * @param array<array-key, mixed> $data
+     *
      * @return array<array-key, mixed>
      */
     private function sanitizeArray(array $data): array

      ----------- end diff -----------

  73) app/Http/Middleware/LocaleMiddleware.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Middleware/LocaleMiddleware.php
+++ /var/www/html/app/Http/Middleware/LocaleMiddleware.php
@@ -6,15 +6,10 @@
 
 use App\Models\Language;
 use App\Models\User;
-use Closure;
-use Illuminate\Contracts\Auth\Guard;
-use Illuminate\Contracts\Session\Session;
 use Illuminate\Http\Request;
 
 class LocaleMiddleware
 {
-
-
     private function determineLanguage(Request $request): string
     {
         // 1. تحقق من المستخدم المسجل

      ----------- end diff -----------

  74) app/Http/Middleware/RedirectIfAuthenticated.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Middleware/RedirectIfAuthenticated.php
+++ /var/www/html/app/Http/Middleware/RedirectIfAuthenticated.php
@@ -4,13 +4,6 @@
 
 namespace App\Http\Middleware;
 
-use App\Providers\RouteServiceProvider;
-use Closure;
-use Illuminate\Http\Request;
-use Illuminate\Support\Facades\Auth;
-use Symfony\Component\HttpFoundation\Response;
-
 class RedirectIfAuthenticated
 {
-
 }

      ----------- end diff -----------

  75) app/Http/Middleware/RequirePassword.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Middleware/RequirePassword.php
+++ /var/www/html/app/Http/Middleware/RequirePassword.php
@@ -22,7 +22,7 @@
 
                 if (time() - $lastConfirmation <= $timeout) {
                     $response = $next($request);
-                    if (! ($response instanceof \Symfony\Component\HttpFoundation\Response)) {
+                    if (!($response instanceof \Symfony\Component\HttpFoundation\Response)) {
                         throw new \RuntimeException('Middleware must return Response instance');
                     }
 

      ----------- end diff -----------

  76) app/Http/Middleware/RTLMiddleware.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Middleware/RTLMiddleware.php
+++ /var/www/html/app/Http/Middleware/RTLMiddleware.php
@@ -28,7 +28,7 @@
         }
 
         $response = $next($request);
-        if (! ($response instanceof \Symfony\Component\HttpFoundation\Response)) {
+        if (!($response instanceof \Symfony\Component\HttpFoundation\Response)) {
             throw new \RuntimeException('Middleware must return Response instance');
         }
 

      ----------- end diff -----------

  77) app/Http/Middleware/SecurityHeaders.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Middleware/SecurityHeaders.php
+++ /var/www/html/app/Http/Middleware/SecurityHeaders.php
@@ -33,7 +33,7 @@
     {
         $response = $next($request);
 
-        if (! ($response instanceof \Symfony\Component\HttpFoundation\Response)) {
+        if (!($response instanceof \Symfony\Component\HttpFoundation\Response)) {
             throw new \RuntimeException('Middleware must return Response instance');
         }
 
@@ -43,7 +43,7 @@
         }
 
         // Force HTTPS in production
-        if (app()->environment('production') && ! $request->secure()) {
+        if (app()->environment('production') && !$request->secure()) {
             return redirect()->secure($request->getRequestUri());
         }
 

      ----------- end diff -----------

  78) app/Http/Middleware/SecurityHeadersMiddleware.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Middleware/SecurityHeadersMiddleware.php
+++ /var/www/html/app/Http/Middleware/SecurityHeadersMiddleware.php
@@ -4,14 +4,10 @@
 
 namespace App\Http\Middleware;
 
-use Closure;
-use Illuminate\Http\Request;
 use Symfony\Component\HttpFoundation\Response;
 
 class SecurityHeadersMiddleware
 {
-
-
     /**
      * Add security headers to response.
      */

      ----------- end diff -----------

  79) app/Http/Middleware/SessionManagementMiddleware.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Middleware/SessionManagementMiddleware.php
+++ /var/www/html/app/Http/Middleware/SessionManagementMiddleware.php
@@ -15,7 +15,7 @@
     /**
      * Handle an incoming request.
      */
-    public function handle(Request $request, Closure $next): \Symfony\Component\HttpFoundation\Response
+    public function handle(Request $request, Closure $next): Response
     {
         // Check for session fixation
         $this->preventSessionFixation($request);
@@ -28,7 +28,7 @@
 
         $response = $next($request);
 
-        if (! ($response instanceof \Symfony\Component\HttpFoundation\Response)) {
+        if (!($response instanceof Response)) {
             throw new \RuntimeException('Middleware must return Response instance');
         }
 

      ----------- end diff -----------

  80) app/Http/Middleware/SetCacheHeaders.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Middleware/SetCacheHeaders.php
+++ /var/www/html/app/Http/Middleware/SetCacheHeaders.php
@@ -16,11 +16,11 @@
     {
         $response = $next($request);
 
-        if (! ($response instanceof \Symfony\Component\HttpFoundation\Response)) {
+        if (!($response instanceof \Symfony\Component\HttpFoundation\Response)) {
             throw new \RuntimeException('Middleware must return Response instance');
         }
 
-        if ($request->isMethod('GET') && $response->getStatusCode() === 200) {
+        if ($request->isMethod('GET') && 200 === $response->getStatusCode()) {
             $response->headers->set('Cache-Control', 'public, max-age=3600');
             $response->headers->set('Expires', gmdate('D, d M Y H:i:s', time() + 3600).' GMT');
         }

      ----------- end diff -----------

  81) app/Http/Middleware/SetLocale.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Middleware/SetLocale.php
+++ /var/www/html/app/Http/Middleware/SetLocale.php
@@ -33,7 +33,7 @@
 
         // Validate supported locales
         $supportedLocales = ['en', 'ar', 'fr', 'es', 'de'];
-        if (! in_array($locale, $supportedLocales)) {
+        if (!in_array($locale, $supportedLocales)) {
             $defaultLocale = config('app.locale');
             $locale = is_string($defaultLocale) ? $defaultLocale : 'en';
         }
@@ -42,7 +42,7 @@
         Session::put('locale', $locale);
 
         $response = $next($request);
-        if (! ($response instanceof \Symfony\Component\HttpFoundation\Response)) {
+        if (!($response instanceof \Symfony\Component\HttpFoundation\Response)) {
             throw new \RuntimeException('Middleware must return Response instance');
         }
 

      ----------- end diff -----------

  82) app/Http/Middleware/SetLocaleAndCurrency.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Middleware/SetLocaleAndCurrency.php
+++ /var/www/html/app/Http/Middleware/SetLocaleAndCurrency.php
@@ -6,16 +6,12 @@
 
 use App\Models\Currency;
 use App\Models\Language;
-use Closure;
 use Illuminate\Http\Request;
 use Illuminate\Support\Facades\App;
 use Illuminate\Support\Facades\Session;
-use Symfony\Component\HttpFoundation\Response;
 
 class SetLocaleAndCurrency
 {
-
-
     /**
      * Configure application locale based on user preference, session, or default.
      */
@@ -30,22 +26,22 @@
         }
 
         // 2. Check session
-        if (! $locale && Session::has('locale')) {
+        if (!$locale && Session::has('locale')) {
             $locale = Session::get('locale');
         }
 
         // 3. Check URL parameter
-        if (! $locale && $request->has('lang')) {
+        if (!$locale && $request->has('lang')) {
             $locale = $request->get('lang');
         }
 
         // 4. Check Accept-Language header
-        if (! $locale) {
+        if (!$locale) {
             $locale = $request->getPreferredLanguage(['en', 'ar', 'es', 'fr', 'de']);
         }
 
         // 5. Use default from config
-        if (! $locale) {
+        if (!$locale) {
             $locale = config('coprra.default_language', 'en');
         }
 
@@ -81,17 +77,17 @@
         }
 
         // 2. Check session
-        if (! $currency && Session::has('currency')) {
+        if (!$currency && Session::has('currency')) {
             $currency = Session::get('currency');
         }
 
         // 3. Check URL parameter
-        if (! $currency && $request->has('currency')) {
+        if (!$currency && $request->has('currency')) {
             $currency = $request->get('currency');
         }
 
         // 4. Use default from config
-        if (! $currency) {
+        if (!$currency) {
             $currency = config('coprra.default_currency', 'USD');
         }
 

      ----------- end diff -----------

  83) app/Http/Middleware/ShareErrorsFromSession.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Middleware/ShareErrorsFromSession.php
+++ /var/www/html/app/Http/Middleware/ShareErrorsFromSession.php
@@ -16,7 +16,7 @@
     {
         $response = $next($request);
 
-        if (! ($response instanceof \Symfony\Component\HttpFoundation\Response)) {
+        if (!($response instanceof \Symfony\Component\HttpFoundation\Response)) {
             throw new \RuntimeException('Middleware must return Response instance');
         }
 

      ----------- end diff -----------

  84) app/Http/Middleware/StartSession.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Middleware/StartSession.php
+++ /var/www/html/app/Http/Middleware/StartSession.php
@@ -14,7 +14,7 @@
      */
     public function handle(Request $request, Closure $next): \Symfony\Component\HttpFoundation\Response
     {
-        if (! $request->hasSession()) {
+        if (!$request->hasSession()) {
             $request->setLaravelSession(
                 app('session.store')
             );
@@ -21,7 +21,7 @@
         }
 
         $response = $next($request);
-        if (! ($response instanceof \Symfony\Component\HttpFoundation\Response)) {
+        if (!($response instanceof \Symfony\Component\HttpFoundation\Response)) {
             throw new \RuntimeException('Middleware must return Response instance');
         }
 

      ----------- end diff -----------

  85) app/Http/Middleware/SubstituteBindings.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Middleware/SubstituteBindings.php
+++ /var/www/html/app/Http/Middleware/SubstituteBindings.php
@@ -26,7 +26,7 @@
         }
 
         $response = $next($request);
-        if (! ($response instanceof \Symfony\Component\HttpFoundation\Response)) {
+        if (!($response instanceof \Symfony\Component\HttpFoundation\Response)) {
             throw new \RuntimeException('Middleware must return Response instance');
         }
 

      ----------- end diff -----------

  86) app/Http/Middleware/ThrottleRequests.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Middleware/ThrottleRequests.php
+++ /var/www/html/app/Http/Middleware/ThrottleRequests.php
@@ -32,7 +32,7 @@
         }
 
         $response = $next($request);
-        if (! ($response instanceof \Symfony\Component\HttpFoundation\Response)) {
+        if (!($response instanceof \Symfony\Component\HttpFoundation\Response)) {
             throw new \RuntimeException('Middleware must return Response instance');
         }
 

      ----------- end diff -----------

  87) app/Http/Middleware/ThrottleSensitiveOperations.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Middleware/ThrottleSensitiveOperations.php
+++ /var/www/html/app/Http/Middleware/ThrottleSensitiveOperations.php
@@ -42,7 +42,7 @@
         RateLimiter::hit($key, $decaySeconds);
 
         $response = $next($request);
-        if (! ($response instanceof \Symfony\Component\HttpFoundation\Response)) {
+        if (!($response instanceof \Symfony\Component\HttpFoundation\Response)) {
             throw new \RuntimeException('Middleware must return Response instance');
         }
 

      ----------- end diff -----------

  88) app/Http/Middleware/TrustProxies.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Middleware/TrustProxies.php
+++ /var/www/html/app/Http/Middleware/TrustProxies.php
@@ -14,7 +14,7 @@
      *
      * @var array<int, string>|string|null
      */
-    protected $proxies = null;
+    protected $proxies;
 
     /**
      * The headers that should be used to detect proxies.

      ----------- end diff -----------

  89) app/Http/Middleware/ValidateApiRequest.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Middleware/ValidateApiRequest.php
+++ /var/www/html/app/Http/Middleware/ValidateApiRequest.php
@@ -16,9 +16,9 @@
     public function handle(Request $request, Closure $next, ?string $rules = null): \Symfony\Component\HttpFoundation\Response
     {
         // Skip validation if no rules provided
-        if (! $rules) {
+        if (!$rules) {
             $response = $next($request);
-            if (! ($response instanceof \Symfony\Component\HttpFoundation\Response)) {
+            if (!($response instanceof \Symfony\Component\HttpFoundation\Response)) {
                 throw new \RuntimeException('Middleware must return Response instance');
             }
 
@@ -28,9 +28,9 @@
         // Get validation rules from config
         $validationRules = $this->getValidationRules($rules);
 
-        if ($validationRules === []) {
+        if ([] === $validationRules) {
             $response = $next($request);
-            if (! ($response instanceof \Symfony\Component\HttpFoundation\Response)) {
+            if (!($response instanceof \Symfony\Component\HttpFoundation\Response)) {
                 throw new \RuntimeException('Middleware must return Response instance');
             }
 
@@ -49,7 +49,7 @@
         }
 
         $response = $next($request);
-        if (! ($response instanceof \Symfony\Component\HttpFoundation\Response)) {
+        if (!($response instanceof \Symfony\Component\HttpFoundation\Response)) {
             throw new \RuntimeException('Middleware must return Response instance');
         }
 

      ----------- end diff -----------

  90) app/Http/Middleware/ValidatePostSize.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Middleware/ValidatePostSize.php
+++ /var/www/html/app/Http/Middleware/ValidatePostSize.php
@@ -22,7 +22,7 @@
         }
 
         $response = $next($request);
-        if (! ($response instanceof \Symfony\Component\HttpFoundation\Response)) {
+        if (!($response instanceof \Symfony\Component\HttpFoundation\Response)) {
             throw new \RuntimeException('Middleware must return Response instance');
         }
 

      ----------- end diff -----------

  91) app/Http/Requests/BaseApiRequest.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Requests/BaseApiRequest.php
+++ /var/www/html/app/Http/Requests/BaseApiRequest.php
@@ -35,14 +35,7 @@
     #[\Override]
     protected function failedValidation(Validator $validator): void
     {
-        throw new HttpResponseException(
-            response()->json([
-                'success' => false,
-                'message' => 'Validation failed',
-                'errors' => $validator->errors(),
-                'error_code' => 'VALIDATION_ERROR',
-            ], 422)
-        );
+        throw new HttpResponseException(response()->json(['success' => false, 'message' => 'Validation failed', 'errors' => $validator->errors(), 'error_code' => 'VALIDATION_ERROR'], 422));
     }
 
     /**

      ----------- end diff -----------

  92) app/Http/Requests/CartRequest.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Requests/CartRequest.php
+++ /var/www/html/app/Http/Requests/CartRequest.php
@@ -8,8 +8,6 @@
 
 class CartRequest extends FormRequest
 {
-
-
     /**
      * Get custom messages for validator errors.
      *

      ----------- end diff -----------

  93) app/Http/Requests/ChangePasswordRequest.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Requests/ChangePasswordRequest.php
+++ /var/www/html/app/Http/Requests/ChangePasswordRequest.php
@@ -8,5 +8,4 @@
 
 class ChangePasswordRequest extends FormRequest
 {
-
 }

      ----------- end diff -----------

  94) app/Http/Requests/ForgotPasswordRequest.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Requests/ForgotPasswordRequest.php
+++ /var/www/html/app/Http/Requests/ForgotPasswordRequest.php
@@ -8,8 +8,6 @@
 
 class ForgotPasswordRequest extends FormRequest
 {
-
-
     /**
      * Get custom messages for validator errors.
      *
@@ -25,4 +23,3 @@
         ];
     }
 }
-

      ----------- end diff -----------

  95) app/Http/Requests/LoginRequest.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Requests/LoginRequest.php
+++ /var/www/html/app/Http/Requests/LoginRequest.php
@@ -11,7 +11,7 @@
     /**
      * @property string $email
      * @property string $password
-     * @property bool $remember
+     * @property bool   $remember
      */
 
     /**

      ----------- end diff -----------

  96) app/Http/Requests/ProductCreateRequest.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Requests/ProductCreateRequest.php
+++ /var/www/html/app/Http/Requests/ProductCreateRequest.php
@@ -192,7 +192,7 @@
             // Additional custom validation logic
             if ($this->has('dimensions')) {
                 $dimensions = $this->input('dimensions');
-                if (is_array($dimensions) && count($dimensions) === 3) {
+                if (is_array($dimensions) && 3 === count($dimensions)) {
                     $total = array_sum($dimensions);
                     if ($total > 2000) { // 2000cm total
                         $validator->errors()->add('dimensions', 'مجموع الأبعاد لا يمكن أن يتجاوز 2000 سم');

      ----------- end diff -----------

  97) app/Http/Requests/ProductIndexRequest.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Requests/ProductIndexRequest.php
+++ /var/www/html/app/Http/Requests/ProductIndexRequest.php
@@ -8,8 +8,6 @@
 
 class ProductIndexRequest extends FormRequest
 {
-
-
     /**
      * Get custom messages for validator errors.
      *
@@ -32,4 +30,3 @@
         ];
     }
 }
-

      ----------- end diff -----------

  98) app/Http/Requests/ProductRequest.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Requests/ProductRequest.php
+++ /var/www/html/app/Http/Requests/ProductRequest.php
@@ -63,7 +63,7 @@
     #[\Override]
     protected function prepareForValidation(): void
     {
-        if ($this->has('name') && ! $this->has('slug')) {
+        if ($this->has('name') && !$this->has('slug')) {
             $this->merge([
                 'slug' => \Str::slug(is_string($this->name) ? $this->name : ''),
             ]);

      ----------- end diff -----------

  99) app/Http/Requests/ProductSearchRequest.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Requests/ProductSearchRequest.php
+++ /var/www/html/app/Http/Requests/ProductSearchRequest.php
@@ -161,16 +161,11 @@
     /**
      * Get the validated data from the request.
      *
-     * @return mixed
-     *
-     * @param null|string $key
-     * @param null|string $default
-     *
      * @psalm-param 'order'|'q'|'sort'|null $key
      * @psalm-param ''|'desc'|'popularity'|null $default
      */
     #[\Override]
-    public function validated(string|null $key = null, string|null $default = null)
+    public function validated(?string $key = null, ?string $default = null)
     {
         $validated = parent::validated($key, $default);
 
@@ -257,7 +252,7 @@
             $data['tags'] = is_array($this->tags) ? array_map(static fn ($tag): string => is_string($tag) ? trim($tag) : '', $this->tags) : [];
         }
 
-        if (! empty($data)) {
+        if (!empty($data)) {
             $this->merge($data);
         }
     }

      ----------- end diff -----------

 100) app/Http/Requests/ProductUpdateRequest.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Requests/ProductUpdateRequest.php
+++ /var/www/html/app/Http/Requests/ProductUpdateRequest.php
@@ -192,7 +192,7 @@
             // Additional custom validation logic
             if ($this->has('dimensions')) {
                 $dimensions = $this->input('dimensions');
-                if (is_array($dimensions) && count($dimensions) === 3) {
+                if (is_array($dimensions) && 3 === count($dimensions)) {
                     $total = array_sum($dimensions);
                     if ($total > 2000) { // 2000cm total
                         $validator->errors()->add('dimensions', 'مجموع الأبعاد لا يمكن أن يتجاوز 2000 سم');
@@ -223,8 +223,6 @@
 
     /**
      * Get the validated data from the request.
-     *
-     * @return mixed
      */
     #[\Override]
     public function validated($key = null, $default = null)
@@ -273,7 +271,7 @@
             $data['tags'] = is_array($tags) ? array_map(static fn ($tag): string => is_string($tag) ? trim($tag) : '', $tags) : [];
         }
 
-        if (! empty($data)) {
+        if (!empty($data)) {
             $this->merge($data);
         }
     }

      ----------- end diff -----------

 101) app/Http/Requests/RegisterRequest.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Requests/RegisterRequest.php
+++ /var/www/html/app/Http/Requests/RegisterRequest.php
@@ -5,12 +5,9 @@
 namespace App\Http\Requests;
 
 use Illuminate\Foundation\Http\FormRequest;
-use Illuminate\Validation\Rules\Password;
 
 class RegisterRequest extends FormRequest
 {
-
-
     /**
      * Get custom messages for validator errors.
      *
@@ -48,4 +45,3 @@
         ];
     }
 }
-

      ----------- end diff -----------

 102) app/Http/Requests/ResetPasswordRequest.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Requests/ResetPasswordRequest.php
+++ /var/www/html/app/Http/Requests/ResetPasswordRequest.php
@@ -5,12 +5,9 @@
 namespace App\Http\Requests;
 
 use Illuminate\Foundation\Http\FormRequest;
-use Illuminate\Validation\Rules\Password;
 
 class ResetPasswordRequest extends FormRequest
 {
-
-
     /**
      * Get custom messages for validator errors.
      *
@@ -29,4 +26,3 @@
         ];
     }
 }
-

      ----------- end diff -----------

 103) app/Http/Requests/StoreBrandRequest.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Requests/StoreBrandRequest.php
+++ /var/www/html/app/Http/Requests/StoreBrandRequest.php
@@ -8,5 +8,4 @@
 
 class StoreBrandRequest extends FormRequest
 {
-
 }

      ----------- end diff -----------

 104) app/Http/Requests/StorePriceAlertRequest.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Requests/StorePriceAlertRequest.php
+++ /var/www/html/app/Http/Requests/StorePriceAlertRequest.php
@@ -8,5 +8,4 @@
 
 class StorePriceAlertRequest extends FormRequest
 {
-
 }

      ----------- end diff -----------

 105) app/Http/Requests/StoreProductRequest.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Requests/StoreProductRequest.php
+++ /var/www/html/app/Http/Requests/StoreProductRequest.php
@@ -8,5 +8,4 @@
 
 class StoreProductRequest extends FormRequest
 {
-
 }

      ----------- end diff -----------

 106) app/Http/Requests/StoreReviewRequest.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Requests/StoreReviewRequest.php
+++ /var/www/html/app/Http/Requests/StoreReviewRequest.php
@@ -8,5 +8,4 @@
 
 class StoreReviewRequest extends FormRequest
 {
-
 }

      ----------- end diff -----------

 107) app/Http/Requests/SwitchLanguageRequest.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Requests/SwitchLanguageRequest.php
+++ /var/www/html/app/Http/Requests/SwitchLanguageRequest.php
@@ -8,5 +8,4 @@
 
 class SwitchLanguageRequest extends FormRequest
 {
-
 }

      ----------- end diff -----------

 108) app/Http/Requests/UpdateBrandRequest.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Requests/UpdateBrandRequest.php
+++ /var/www/html/app/Http/Requests/UpdateBrandRequest.php
@@ -8,5 +8,4 @@
 
 class UpdateBrandRequest extends FormRequest
 {
-
 }

      ----------- end diff -----------

 109) app/Http/Requests/UpdateCartRequest.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Requests/UpdateCartRequest.php
+++ /var/www/html/app/Http/Requests/UpdateCartRequest.php
@@ -8,8 +8,6 @@
 
 class UpdateCartRequest extends FormRequest
 {
-
-
     /**
      * Get custom messages for validator errors.
      *
@@ -27,4 +25,3 @@
         ];
     }
 }
-

      ----------- end diff -----------

 110) app/Http/Requests/UpdatePriceAlertRequest.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Requests/UpdatePriceAlertRequest.php
+++ /var/www/html/app/Http/Requests/UpdatePriceAlertRequest.php
@@ -8,5 +8,4 @@
 
 class UpdatePriceAlertRequest extends FormRequest
 {
-
 }

      ----------- end diff -----------

 111) app/Http/Requests/UpdateProductRequest.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Requests/UpdateProductRequest.php
+++ /var/www/html/app/Http/Requests/UpdateProductRequest.php
@@ -8,5 +8,4 @@
 
 class UpdateProductRequest extends FormRequest
 {
-
 }

      ----------- end diff -----------

 112) app/Http/Requests/UpdateReviewRequest.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Requests/UpdateReviewRequest.php
+++ /var/www/html/app/Http/Requests/UpdateReviewRequest.php
@@ -8,5 +8,4 @@
 
 class UpdateReviewRequest extends FormRequest
 {
-
 }

      ----------- end diff -----------

 113) app/Http/Requests/UpdateUserRequest.php
      ---------- begin diff ----------
--- /var/www/html/app/Http/Requests/UpdateUserRequest.php
+++ /var/www/html/app/Http/Requests/UpdateUserRequest.php
@@ -5,9 +5,7 @@
 namespace App\Http\Requests;
 
 use Illuminate\Foundation\Http\FormRequest;
-use Illuminate\Validation\Rule;
 
 class UpdateUserRequest extends FormRequest
 {
-
 }

      ----------- end diff -----------

 114) app/Jobs/ProcessHeavyOperation.php
      ---------- begin diff ----------
--- /var/www/html/app/Jobs/ProcessHeavyOperation.php
+++ /var/www/html/app/Jobs/ProcessHeavyOperation.php
@@ -12,7 +12,6 @@
 use Illuminate\Queue\SerializesModels;
 use Illuminate\Support\Carbon;
 use Illuminate\Support\Facades\Cache;
-use Illuminate\Support\Facades\Log;
 
 class ProcessHeavyOperation implements ShouldQueue
 {
@@ -44,9 +43,11 @@
     /**
      * Create a new job instance.
      *
-     * @param  array<string, mixed>  $data
+     * @param array<string, mixed> $data
      */
-    public function __construct(private string $operation, private array $data = [], private ?int $userId = null) {}
+    public function __construct(private string $operation, private array $data = [], private ?int $userId = null)
+    {
+    }
 
     /**
      * Execute the specific operation.
@@ -105,7 +106,7 @@
             foreach ($imageIds as $imageId) {
                 // Simulate image processing
                 usleep(100000); // 100ms per image
-                $processed++;
+                ++$processed;
             }
         }
 
@@ -151,7 +152,7 @@
             foreach ($userIds as $userId) {
                 // Simulate notification sending
                 usleep(50000); // 50ms per notification
-                $sent++;
+                ++$sent;
             }
         }
 
@@ -177,7 +178,7 @@
             foreach ($statTypes as $statType) {
                 // Simulate statistics update
                 usleep(200000); // 200ms per stat type
-                $updated++;
+                ++$updated;
             }
         }
 
@@ -252,7 +253,7 @@
     /**
      * Update job status.
      *
-     * @param  array<string, mixed>|null  $result
+     * @param array<string, mixed>|null $result
      */
     private function updateJobStatus(string $status, ?array $result = null): void
     {

      ----------- end diff -----------

 115) app/Listeners/SendOrderStatusNotification.php
      ---------- begin diff ----------
--- /var/www/html/app/Listeners/SendOrderStatusNotification.php
+++ /var/www/html/app/Listeners/SendOrderStatusNotification.php
@@ -51,4 +51,3 @@
         };
     }
 }
-

      ----------- end diff -----------

 116) app/Mail/WelcomeMail.php
      ---------- begin diff ----------
--- /var/www/html/app/Mail/WelcomeMail.php
+++ /var/www/html/app/Mail/WelcomeMail.php
@@ -4,11 +4,8 @@
 
 namespace App\Mail;
 
-use App\Models\User;
 use Illuminate\Bus\Queueable;
 use Illuminate\Mail\Mailable;
-use Illuminate\Mail\Mailables\Content;
-use Illuminate\Mail\Mailables\Envelope;
 use Illuminate\Queue\SerializesModels;
 
 class WelcomeMail extends Mailable

      ----------- end diff -----------

 117) app/Models/AnalyticsEvent.php
      ---------- begin diff ----------
--- /var/www/html/app/Models/AnalyticsEvent.php
+++ /var/www/html/app/Models/AnalyticsEvent.php
@@ -6,23 +6,24 @@
 
 use Illuminate\Database\Eloquent\Factories\HasFactory;
 use Illuminate\Database\Eloquent\Model;
-use Illuminate\Database\Eloquent\Relations\BelongsTo;
 use Illuminate\Support\Carbon;
 
 /**
- * @property int $id
- * @property string $event_type
- * @property string $event_name
+ * @property int      $id
+ * @property string   $event_type
+ * @property string   $event_name
  * @property int|null $user_id
  * @property int|null $product_id
  * @property int|null $category_id
+ *
  * @propfinal erty int|null $store_id
- * @property array|null $metadata
+ *
+ * @property array|null  $metadata
  * @property string|null $ip_address
  * @property string|null $user_agent
  * @property string|null $session_id
- * @property Carbon $created_at
- * @property Carbon $updated_at
+ * @property Carbon      $created_at
+ * @property Carbon      $updated_at
  */
 class AnalyticsEvent extends Model
 {
@@ -66,4 +67,3 @@
         'metadata' => 'array',
     ];
 }
-

      ----------- end diff -----------

 118) app/Models/AuditLog.php
      ---------- begin diff ----------
--- /var/www/html/app/Models/AuditLog.php
+++ /var/www/html/app/Models/AuditLog.php
@@ -6,26 +6,26 @@
 
 use Illuminate\Database\Eloquent\Factories\HasFactory;
 use Illuminate\Database\Eloquent\Model;
-use Illuminate\Database\Eloquent\Relations\BelongsTo;
-use Illuminate\Database\Eloquent\Relations\MorphTo;
 
 /**
- * @property int $id
- * @property string $event
- * @property string $auditable_type
- * @property int $auditable_id
- * @property int|null $user_id
- * @property string|null $ip_address
- * @property string|null $user_agent
+ * @property int                       $id
+ * @property string                    $event
+ * @property string                    $auditable_type
+ * @property int                       $auditable_id
+ * @property int|null                  $user_id
+ * @property string|null               $ip_address
+ * @property string|null               $user_agent
  * @property array<string, mixed>|null $old_values
  * @property array<string, mixed>|null $new_values
  * @property array<string, mixed>|null $metadata
+ *
  * @pfinal roperty string|null $url
- * @property string|null $method
+ *
+ * @property string|null         $method
  * @property \Carbon\Carbon|null $created_at
  * @property \Carbon\Carbon|null $updated_at
- * @property \App\Models\User|null $user
- * @property \Illuminate\Database\Eloquent\Model|null $auditable
+ * @property User|null           $user
+ * @property Model|null          $auditable
  */
 class AuditLog extends Model
 {

      ----------- end diff -----------

 119) app/Models/Brand.php
      ---------- begin diff ----------
--- /var/www/html/app/Models/Brand.php
+++ /var/www/html/app/Models/Brand.php
@@ -5,20 +5,17 @@
 namespace App\Models;
 
 use Database\Factories\BrandFactory;
-use Illuminate\Database\Eloquent\Builder;
 use Illuminate\Database\Eloquent\Factories\HasFactory;
-use Illuminate\Database\Eloquent\Relations\HasMany;
 use Illuminate\Database\Eloquent\SoftDeletes;
-use RuntimeException;
 
 /**
- * @property int $id
- * @property string $name
- * @property string $slug
- * @property string|null $description
- * @property string|null $logo_url
- * @property string|null $website_url
- * @property bool $is_active
+ * @property int                 $id
+ * @property string              $name
+ * @property string              $slug
+ * @property string|null         $description
+ * @property string|null         $logo_url
+ * @property string|null         $website_url
+ * @property bool                $is_active
  * @property \Carbon\Carbon|null $created_at
  * @property \Carbon\Carbon|null $updated_at
  * @property \Carbon\Carbon|null $deleted_at
@@ -25,7 +22,7 @@
  * @property \Illuminafinal te\Database\Eloquent\Collection<int, Product> $products
  *
  * @method static \App\Models\Brand create(array<string, mixed> $attributes = [])
- * @method static BrandFactory factory(...$parameters)
+ * @method static BrandFactory      factory(...$parameters)
  *
  * @phpstan-type TFactory \Database\Factories\BrandFactory
  *
@@ -41,7 +38,7 @@
     /**
      * @var class-string<\Illuminate\Database\Eloquent\Factories\Factory<Brand>>
      */
-    protected static $factory = \Database\Factories\BrandFactory::class;
+    protected static $factory = BrandFactory::class;
 
     /**
      * Validation errors.
@@ -48,7 +45,7 @@
      *
      * @var \Illuminate\Support\MessageBag|null
      */
-    protected $errors = null;
+    protected $errors;
 
     /**
      * Mass assignable attributes.
@@ -90,7 +87,6 @@
     /**
      * Get validation rules for the model.
      */
-
 
     /**
      * Boot the model.

      ----------- end diff -----------

 120) app/Models/Category.php
      ---------- begin diff ----------
--- /var/www/html/app/Models/Category.php
+++ /var/www/html/app/Models/Category.php
@@ -5,29 +5,27 @@
 namespace App\Models;
 
 use Database\Factories\CategoryFactory;
-use Illuminate\Database\Eloquent\Builder;
 use Illuminate\Database\Eloquent\Factories\HasFactory;
-use Illuminate\Database\Eloquent\Relations\BelongsTo;
 use Illuminate\Database\Eloquent\Relations\HasMany;
 use Illuminate\Database\Eloquent\SoftDeletes;
 
 /**
- * @property int $id
- * @property string $name
- * @property string $slug
- * @property string|null $description
- * @property int|null $parent_id
- * @property int $level
- * @property bool $is_active
- * @property \Carbon\Carbon|null $created_at
- * @property \Carbon\Carbon|null $updated_at
- * @property \Carbon\Carbon|null $deleted_at
- * @property Category|null $parent
- * @property \Illuminate\Database\Eloquent\Collection<int, Category> $childfinal ren
- * @property \Illuminate\Database\Eloquent\Collection<int, Product> $products
+ * @property int                                                     $id
+ * @property string                                                  $name
+ * @property string                                                  $slug
+ * @property string|null                                             $description
+ * @property int|null                                                $parent_id
+ * @property int                                                     $level
+ * @property bool                                                    $is_active
+ * @property \Carbon\Carbon|null                                     $created_at
+ * @property \Carbon\Carbon|null                                     $updated_at
+ * @property \Carbon\Carbon|null                                     $deleted_at
+ * @property Category|null                                           $parent
+ * @property \Illuminate\Database\Eloquent\Collection<int, Category> $childfinal  ren
+ * @property \Illuminate\Database\Eloquent\Collection<int, Product>  $products
  *
  * @method static \App\Models\Category create(array<string, mixed> $attributes = [])
- * @method static CategoryFactory factory(...$parameters)
+ * @method static CategoryFactory      factory(...$parameters)
  *
  * @phpstan-type TFactory \Database\Factories\CategoryFactory
  *
@@ -43,7 +41,7 @@
     /**
      * @var class-string<\Illuminate\Database\Eloquent\Factories\Factory<Category>>
      */
-    protected static $factory = \Database\Factories\CategoryFactory::class;
+    protected static $factory = CategoryFactory::class;
 
     /**
      * Validation errors.
@@ -50,7 +48,7 @@
      *
      * @var \Illuminate\Support\MessageBag|null
      */
-    protected $errors = null;
+    protected $errors;
 
     /**
      * @var list<string>
@@ -101,7 +99,6 @@
     /**
      * Get validation rules for the model.
      */
-
 
     /**
      * Boot the model.

      ----------- end diff -----------

 121) app/Models/Currency.php
      ---------- begin diff ----------
--- /var/www/html/app/Models/Currency.php
+++ /var/www/html/app/Models/Currency.php
@@ -7,15 +7,13 @@
 use Database\Factories\CurrencyFactory;
 use Illuminate\Database\Eloquent\Factories\HasFactory;
 use Illuminate\Database\Eloquent\Model;
-use Illuminate\Database\Eloquent\Relations\BelongsToMany;
-use Illuminate\Database\Eloquent\Relations\HasMany;
 
 /**
- * @property int $id
+ * @property int    $id
  * @property string $code
  * @property string final $name
- * @property string $symbol
- * @property \Illuminate\Database\Eloquent\Collection<int, Store> $stores
+ * @property string                                                  $symbol
+ * @property \Illuminate\Database\Eloquent\Collection<int, Store>    $stores
  * @property \Illuminate\Database\Eloquent\Collection<int, Language> $languages
  *
  * @method static CurrencyFactory factory(...$parameters)
@@ -30,7 +28,7 @@
     /**
      * @var class-string<\Illuminate\Database\Eloquent\Factories\Factory<Currency>>
      */
-    protected static $factory = \Database\Factories\CurrencyFactory::class;
+    protected static $factory = CurrencyFactory::class;
 
     /**
      * @var list<string>

      ----------- end diff -----------

 122) app/Models/ExchangeRate.php
      ---------- begin diff ----------
--- /var/www/html/app/Models/ExchangeRate.php
+++ /var/www/html/app/Models/ExchangeRate.php
@@ -9,14 +9,16 @@
 use Illuminate\Support\Carbon;
 
 /**
- * @property int $id
+ * @property int    $id
  * @property string $from_currency
+ *
  * @propfinal erty string $to_currency
- * @property float $rate
- * @property string $source
+ *
+ * @property float       $rate
+ * @property string      $source
  * @property Carbon|null $fetched_at
- * @property Carbon $created_at
- * @property Carbon $updated_at
+ * @property Carbon      $created_at
+ * @property Carbon      $updated_at
  */
 class ExchangeRate extends Model
 {
@@ -62,4 +64,3 @@
         return $rate ? (float) $rate->rate : null;
     }
 }
-

      ----------- end diff -----------

 123) app/Models/Language.php
      ---------- begin diff ----------
--- /var/www/html/app/Models/Language.php
+++ /var/www/html/app/Models/Language.php
@@ -8,17 +8,16 @@
 use Illuminate\Database\Eloquent\Factories\HasFactory;
 use Illuminate\Database\Eloquent\Model;
 use Illuminate\Database\Eloquent\Relations\BelongsToMany;
-use Illuminate\Database\Eloquent\Relations\HasMany;
 
 /**
- * @property int $id
- * @property string $code
- * @property string $name
- * @property string $native_name
- * @property string $direction
- * @property bool $is_active
- * @property int $sofinal rt_order
- * @property \Illuminate\Database\Eloquent\Collection<int, Currency> $currencies
+ * @property int                                                              $id
+ * @property string                                                           $code
+ * @property string                                                           $name
+ * @property string                                                           $native_name
+ * @property string                                                           $direction
+ * @property bool                                                             $is_active
+ * @property int                                                              $sofinal            rt_order
+ * @property \Illuminate\Database\Eloquent\Collection<int, Currency>          $currencies
  * @property \Illuminate\Database\Eloquent\Collection<int, UserLocaleSetting> $userLocaleSettings
  *
  * @method static LanguageFactory factory(...$parameters)
@@ -33,7 +32,7 @@
     /**
      * @var class-string<\Illuminate\Database\Eloquent\Factories\Factory<Language>>
      */
-    protected static $factory = \Database\Factories\LanguageFactory::class;
+    protected static $factory = LanguageFactory::class;
 
     /**
      * @var list<string>

      ----------- end diff -----------

 124) app/Models/Notification.php
      ---------- begin diff ----------
--- /var/www/html/app/Models/Notification.php
+++ /var/www/html/app/Models/Notification.php
@@ -7,28 +7,26 @@
 use App\Enums\NotificationStatus;
 use Carbon\Carbon;
 use Database\Factories\NotificationFactory;
-use Illuminate\Database\Eloquent\Builder;
 use Illuminate\Database\Eloquent\Factories\HasFactory;
 use Illuminate\Database\Eloquent\Model;
-use Illuminate\Database\Eloquent\Relations\BelongsTo;
 
 /**
- * @property int $id
- * @property int $user_id
+ * @property int    $id
+ * @property int    $user_id
  * @property string $type
  * @property string $title
  * @property string $message
  * @property array<string, mfinal ixed> $data
- * @property Carbon|null $read_at
- * @property Carbon|null $sent_at
- * @property int $priority
- * @property string $channel
- * @property string $status
+ * @property Carbon|null          $read_at
+ * @property Carbon|null          $sent_at
+ * @property int                  $priority
+ * @property string               $channel
+ * @property string               $status
  * @property array<string, mixed> $metadata
- * @property array<string> $tags
- * @property Carbon $created_at
- * @property Carbon $updated_at
- * @property \App\Models\User $user
+ * @property array<string>        $tags
+ * @property Carbon               $created_at
+ * @property Carbon               $updated_at
+ * @property User                 $user
  */
 class Notification extends Model
 {
@@ -45,7 +43,7 @@
     /**
      * @var class-string<\Illuminate\Database\Eloquent\Factories\Factory<Notification>>
      */
-    protected static $factory = \Database\Factories\NotificationFactory::class;
+    protected static $factory = NotificationFactory::class;
 
     /**
      * The attributes that are mass assignable.
@@ -126,13 +124,11 @@
     /**
      * Get the notification data with fallback values.
      *
-     * @param array|int|null|string $default
-     *
      * @psalm-param 'View Details'|0|array|null $default
      */
     public function getData(?string $key = null, array|string|int|null $default = null): mixed
     {
-        if ($key === null) {
+        if (null === $key) {
             return $this->data ?? [];
         }
 
@@ -197,13 +193,13 @@
     {
         $tags = $this->getData('tags', []);
 
-        return is_array($tags) ? array_map(static fn($tag) => is_string($tag) ? $tag : 'tag', $tags) : [];
+        return is_array($tags) ? array_map(static fn ($tag) => is_string($tag) ? $tag : 'tag', $tags) : [];
     }
 
     /**
      * Update notification tags.
      *
-     * @param  array<string>  $tags
+     * @param array<string> $tags
      */
     public function updateTags(array $tags): bool
     {

      ----------- end diff -----------

 125) app/Models/Order.php
      ---------- begin diff ----------
--- /var/www/html/app/Models/Order.php
+++ /var/www/html/app/Models/Order.php
@@ -5,10 +5,8 @@
 namespace App\Models;
 
 use App\Enums\OrderStatus;
-use Illuminate\Database\Eloquent\Builder;
 use Illuminate\Database\Eloquent\Factories\HasFactory;
 use Illuminate\Database\Eloquent\Model;
-use Illuminate\Database\Eloquent\Relations\BelongsTo;
 use Illuminate\Database\Eloquent\Relations\HasMany;
 
 class Order extends Model

      ----------- end diff -----------

 126) app/Models/OrderItem.php
      ---------- begin diff ----------
--- /var/www/html/app/Models/OrderItem.php
+++ /var/www/html/app/Models/OrderItem.php
@@ -6,7 +6,6 @@
 
 use Illuminate\Database\Eloquent\Factories\HasFactory;
 use Illuminate\Database\Eloquent\Model;
-use Illuminate\Database\Eloquent\Relations\BelongsTo;
 
 class OrderItem extends Model
 {

      ----------- end diff -----------

 127) app/Models/Payment.php
      ---------- begin diff ----------
--- /var/www/html/app/Models/Payment.php
+++ /var/www/html/app/Models/Payment.php
@@ -4,10 +4,8 @@
 
 namespace App\Models;
 
-use Illuminate\Database\Eloquent\Builder;
 use Illuminate\Database\Eloquent\Factories\HasFactory;
 use Illuminate\Database\Eloquent\Model;
-use Illuminate\Database\Eloquent\Relations\BelongsTo;
 
 class Payment extends Model
 {

      ----------- end diff -----------

 128) app/Models/PaymentMethod.php
      ---------- begin diff ----------
--- /var/www/html/app/Models/PaymentMethod.php
+++ /var/www/html/app/Models/PaymentMethod.php
@@ -4,10 +4,8 @@
 
 namespace App\Models;
 
-use Illuminate\Database\Eloquent\Builder;
 use Illuminate\Database\Eloquent\Factories\HasFactory;
 use Illuminate\Database\Eloquent\Model;
-use Illuminate\Database\Eloquent\Relations\HasMany;
 
 class PaymentMethod extends Model
 {

      ----------- end diff -----------

 129) app/Models/PriceAlert.php
      ---------- begin diff ----------
--- /var/www/html/app/Models/PriceAlert.php
+++ /var/www/html/app/Models/PriceAlert.php
@@ -5,23 +5,21 @@
 namespace App\Models;
 
 use Database\Factories\PriceAlertFactory;
-use Illuminate\Database\Eloquent\Builder;
 use Illuminate\Database\Eloquent\Factories\HasFactory;
-use Illuminate\Database\Eloquent\Relations\BelongsTo;
 use Illuminate\Database\Eloquent\SoftDeletes;
 
 /**
- * @property int $id
- * @property int $user_id
- * @property int $product_id
- * @property float $target_price
- * @property bool $repeat_alert
- * @property bool $is_active
+ * @property int                 $id
+ * @property int                 $user_id
+ * @property int                 $product_id
+ * @property float               $target_price
+ * @property bool                $repeat_alert
+ * @property bool                $is_active
  * @property \Carbon\Carbon|null $created_at
  * @property \Carbon\Carbon|nulfinal l $updated_at
  * @property \Carbon\Carbon|null $deleted_at
- * @property User $user
- * @property Product $product
+ * @property User                $user
+ * @property Product             $product
  *
  * @method static PriceAlertFactory factory(...$parameters)
  *
@@ -39,7 +37,7 @@
     /**
      * @var class-string<\Illuminate\Database\Eloquent\Factories\Factory<PriceAlert>>
      */
-    protected static $factory = \Database\Factories\PriceAlertFactory::class;
+    protected static $factory = PriceAlertFactory::class;
 
     protected $fillable = [
         'user_id',
@@ -73,5 +71,5 @@
      *
      * @var \Illuminate\Support\MessageBag|null
      */
-    protected $errors = null;
+    protected $errors;
 }

      ----------- end diff -----------

 130) app/Models/PriceOffer.php
      ---------- begin diff ----------
--- /var/www/html/app/Models/PriceOffer.php
+++ /var/www/html/app/Models/PriceOffer.php
@@ -7,7 +7,6 @@
 use Database\Factories\PriceOfferFactory;
 use Illuminate\Database\Eloquent\Factories\HasFactory;
 use Illuminate\Database\Eloquent\Model;
-use Illuminate\Database\Eloquent\Relations\BelongsTo;
 
 /**
  * @property int $id
@@ -15,9 +14,9 @@
  * @property int $store_id
  * @property flofinal at $price
  * @property string|null $product_url
- * @property bool $in_stock
- * @property Product $product
- * @property Store $store
+ * @property bool        $in_stock
+ * @property Product     $product
+ * @property Store       $store
  *
  * @method static PriceOfferFactory factory(...$parameters)
  *
@@ -31,7 +30,7 @@
     /**
      * @var class-string<\Illuminate\Database\Eloquent\Factories\Factory<PriceOffer>>
      */
-    protected static $factory = \Database\Factories\PriceOfferFactory::class;
+    protected static $factory = PriceOfferFactory::class;
 
     protected $fillable = [
         'product_id',

      ----------- end diff -----------

 131) app/Models/Product.php
      ---------- begin diff ----------
--- /var/www/html/app/Models/Product.php
+++ /var/www/html/app/Models/Product.php
@@ -5,32 +5,30 @@
 namespace App\Models;
 
 use Database\Factories\ProductFactory;
-use Illuminate\Database\Eloquent\Builder;
 use Illuminate\Database\Eloquent\Factories\HasFactory;
 use Illuminate\Database\Eloquent\Model;
-use Illuminate\Database\Eloquent\Relations\BelongsTo;
 use Illuminate\Database\Eloquent\Relations\HasMany;
 use Illuminate\Database\Eloquent\SoftDeletes;
 use Illuminate\Support\Facades\Cache;
 
 /**
- * @property int $id
- * @property string $name
- * @property string $slug
- * @property string $description
- * @property string $price
- * @property string $sku
- * @property string|null $image
- * @property bool $is_active
- * @property int $stock_quantity
- * @property int $category_id
- * @property int $brand_id
- * @property int $purchase_count
- * @property Category $category
- * @property Brand $brand
- * @property \Illuminate\Database\Eloquent\Collection<int, PriceAlert> $priceAfinal lerts
- * @property \Illuminate\Database\Eloquent\Collection<int, Review> $reviews
- * @property \Illuminate\Database\Eloquent\Collection<int, Wishlist> $wishlists
+ * @property int                                                       $id
+ * @property string                                                    $name
+ * @property string                                                    $slug
+ * @property string                                                    $description
+ * @property string                                                    $price
+ * @property string                                                    $sku
+ * @property string|null                                               $image
+ * @property bool                                                      $is_active
+ * @property int                                                       $stock_quantity
+ * @property int                                                       $category_id
+ * @property int                                                       $brand_id
+ * @property int                                                       $purchase_count
+ * @property Category                                                  $category
+ * @property Brand                                                     $brand
+ * @property \Illuminate\Database\Eloquent\Collection<int, PriceAlert> $priceAfinal    lerts
+ * @property \Illuminate\Database\Eloquent\Collection<int, Review>     $reviews
+ * @property \Illuminate\Database\Eloquent\Collection<int, Wishlist>   $wishlists
  * @property \Illuminate\Database\Eloquent\Collection<int, PriceOffer> $priceOffers
  *
  * @method static ProductFactory factory(...$parameters)
@@ -49,7 +47,7 @@
     /**
      * @var class-string<\Illuminate\Database\Eloquent\Factories\Factory<Product>>
      */
-    protected static $factory = \Database\Factories\ProductFactory::class;
+    protected static $factory = ProductFactory::class;
 
     protected $fillable = [
         'name',
@@ -89,22 +87,22 @@
     /**
      * Create a new factory instance for the model.
      *
-     * @param  array<string, mixed>  $state
+     * @param array<string, mixed> $state
+     *
      * @return \Illuminate\Database\Eloquent\Factories\Factory<Product>
      */
     public static function factory(?int $count = null, array $state = []): \Illuminate\Database\Eloquent\Factories\Factory
     {
         $factory = static::newFactory();
-        if ($factory && $count !== null) {
+        if ($factory && null !== $count) {
             $factory = $factory->count($count);
         }
 
-        return $factory ? $factory->state($state)->connection('testing') : \Database\Factories\ProductFactory::new();
+        return $factory ? $factory->state($state)->connection('testing') : ProductFactory::new();
     }
 
     // --- العلاقات ---
 
-
     /**
      * @return HasMany<PriceAlert, $this>
      */
@@ -139,9 +137,7 @@
 
     // --- Scopes ---
 
-
     // --- طرق مساعدة ---
-
 
     #[\Override]
     protected static function booted(): void

      ----------- end diff -----------

 132) app/Models/Review.php
      ---------- begin diff ----------
--- /var/www/html/app/Models/Review.php
+++ /var/www/html/app/Models/Review.php
@@ -7,20 +7,19 @@
 use Database\Factories\ReviewFactory;
 use Illuminate\Database\Eloquent\Factories\HasFactory;
 use Illuminate\Database\Eloquent\Model;
-use Illuminate\Database\Eloquent\Relations\BelongsTo;
 
 /**
- * @property int $id
- * @property int $user_id
- * @property int $product_id
- * @property string $title
- * @property string $content
- * @property int $rating
- * @property bool $is_verified_purchase
- * @property bool $is_approved
+ * @property int                  $id
+ * @property int                  $user_id
+ * @property int                  $product_id
+ * @property string               $title
+ * @property string               $content
+ * @property int                  $rating
+ * @property bool                 $is_verified_purchase
+ * @property bool                 $is_approved
  * @property array<string, mixed> $helpful_votes
  * @property int final $helpful_count
- * @property User $user
+ * @property User    $user
  * @property Product $product
  *
  * @method static ReviewFactory factory(...$parameters)
@@ -37,7 +36,7 @@
     /**
      * @var class-string<\Illuminate\Database\Eloquent\Factories\Factory<Review>>
      */
-    protected static $factory = \Database\Factories\ReviewFactory::class;
+    protected static $factory = ReviewFactory::class;
 
     /**
      * @var list<string>
@@ -63,5 +62,4 @@
     ];
 
     // دالة مساعدة للتوافق مع الكود القديم
-
 }

      ----------- end diff -----------

 133) app/Models/Store.php
      ---------- begin diff ----------
--- /var/www/html/app/Models/Store.php
+++ /var/www/html/app/Models/Store.php
@@ -5,33 +5,30 @@
 namespace App\Models;
 
 use Database\Factories\StoreFactory;
-use Illuminate\Database\Eloquent\Builder;
 use Illuminate\Database\Eloquent\Factories\HasFactory;
-use Illuminate\Database\Eloquent\Relations\BelongsTo;
-use Illuminate\Database\Eloquent\Relations\HasMany;
 use Illuminate\Database\Eloquent\SoftDeletes;
 
 /**
- * @property int $id
- * @property string $name
- * @property string $slug
- * @property string|null $description
- * @property string|null $logo_url
- * @property string|null $website_url
- * @property string|null $country_code
- * @property array<string>|null $supported_countries
- * @property bool $is_active
- * @property int $priority
- * @property string|null $affiliate_base_url
- * @property string|null $affiliate_code
+ * @property int                       $id
+ * @property string                    $name
+ * @property string                    $slug
+ * @property string|null               $description
+ * @property string|null               $logo_url
+ * @property string|null               $website_url
+ * @property string|null               $country_code
+ * @property array<string>|null        $supported_countries
+ * @property bool                      $is_active
+ * @property int                       $priority
+ * @property string|null               $affiliate_base_url
+ * @property string|null               $affiliate_code
  * @property array<string, mixed>|null $api_config
- * @property int|null $currency_id
- * @property \Carbon\Carbon|null $created_at
- * @property \Carbon\Carbon|null $updated_at
- * @property \Carbon\Carbon|null $deleted_at
+ * @property int|null                  $currency_id
+ * @property \Carbon\Carbon|null       $created_at
+ * @property \Carbon\Carbon|null       $updated_at
+ * @property \Carbon\Carbon|null       $deleted_at
  * @property \Illuminate\Datafinal base\Eloquent\Collection<int, PriceOffer> $priceOffers
  * @property \Illuminate\Database\Eloquent\Collection<int, Product> $products
- * @property Currency|null $currency
+ * @property Currency|null                                          $currency
  *
  * @method static StoreFactory factory(...$parameters)
  *
@@ -49,7 +46,7 @@
     /**
      * @var class-string<\Illuminate\Database\Eloquent\Factories\Factory<Store>>
      */
-    protected static $factory = \Database\Factories\StoreFactory::class;
+    protected static $factory = StoreFactory::class;
 
     /**
      * @var list<string>
@@ -80,7 +77,7 @@
     /**
      * @var \Illuminate\Support\MessageBag|null
      */
-    protected $errors = null;
+    protected $errors;
 
     /**
      * The attributes that should be validated.

      ----------- end diff -----------

 134) app/Models/User.php
      ---------- begin diff ----------
--- /var/www/html/app/Models/User.php
+++ /var/www/html/app/Models/User.php
@@ -16,27 +16,29 @@
 use Laravel\Sanctum\HasApiTokens;
 
 /**
- * @property int $id
- * @property string $name
- * @property string $email
- * @property string $password
- * @property Carbon|null $email_verified_at
- * @property bool $is_admin
- * @property bool $is_active
- * @property bool $is_blocked
- * @property string|null $ban_reason
- * @property string|null $ban_description
- * @property Carbon|null $banned_at
- * @property Carbon|null $ban_expires_at
- * @property string|null $session_id
- * @property string $role
+ * @property int                     $id
+ * @property string                  $name
+ * @property string                  $email
+ * @property string                  $password
+ * @property Carbon|null             $email_verified_at
+ * @property bool                    $is_admin
+ * @property bool                    $is_active
+ * @property bool                    $is_blocked
+ * @property string|null             $ban_reason
+ * @property string|null             $ban_description
+ * @property Carbon|null             $banned_at
+ * @property Carbon|null             $ban_expires_at
+ * @property string|null             $session_id
+ * @property string                  $role
  * @property Collection<int, Review> $reviews
+ *
  * @propefinal rty Collection<int, Wishlist> $wishlists
+ *
  * @property Collection<int, PriceAlert> $priceAlerts
- * @property UserLocaleSetting|null $localeSetting
+ * @property UserLocaleSetting|null      $localeSetting
  *
  * @method static \Illuminate\Database\Eloquent\Builder|User where(string $column, mixed $operator = null, mixed $value = null, string $boolean = 'and')
- * @method static UserFactory factory(...$parameters)
+ * @method static UserFactory                                factory(...$parameters)
  *
  * @phpstan-type TFactory \Database\Factories\UserFactory
  *
@@ -55,7 +57,7 @@
     /**
      * @var class-string<\Illuminate\Database\Eloquent\Factories\Factory<User>>
      */
-    protected static $factory = \Database\Factories\UserFactory::class;
+    protected static $factory = UserFactory::class;
 
     protected $fillable = [
         'name',
@@ -147,7 +149,7 @@
      */
     public function isBanExpired(): bool
     {
-        if (! $this->is_blocked) {
+        if (!$this->is_blocked) {
             return false;
         }
 

      ----------- end diff -----------

 135) app/Models/UserLocaleSetting.php
      ---------- begin diff ----------
--- /var/www/html/app/Models/UserLocaleSetting.php
+++ /var/www/html/app/Models/UserLocaleSetting.php
@@ -7,20 +7,20 @@
 use Database\Factories\UserLocaleSettingFactory;
 use Illuminate\Database\Eloquent\Factories\HasFactory;
 use Illuminate\Database\Eloquent\Model;
-use Illuminate\Database\Eloquent\Relations\BelongsTo;
-use InvalidArgumentException;
 
 /**
- * @property int $id
- * @property int|null $user_id
+ * @property int         $id
+ * @property int|null    $user_id
  * @property string|null $session_id
- * @property int $language_id
- * @property int $currency_id
+ * @property int         $language_id
+ * @property int         $currency_id
+ *
  * @profinal perty string|null $ip_address
+ *
  * @property string|null $country_code
- * @property User|null $user
- * @property Language $language
- * @property Currency $currency
+ * @property User|null   $user
+ * @property Language    $language
+ * @property Currency    $currency
  *
  * @method static UserLocaleSettingFactory factory(...$parameters)
  *
@@ -34,7 +34,7 @@
     /**
      * @var class-string<\Illuminate\Database\Eloquent\Factories\Factory<UserLocaleSetting>>
      */
-    protected static $factory = \Database\Factories\UserLocaleSettingFactory::class;
+    protected static $factory = UserLocaleSettingFactory::class;
 
     protected $fillable = [
         'user_id',

      ----------- end diff -----------

 136) app/Models/UserPoint.php
      ---------- begin diff ----------
--- /var/www/html/app/Models/UserPoint.php
+++ /var/www/html/app/Models/UserPoint.php
@@ -4,10 +4,8 @@
 
 namespace App\Models;
 
-use Illuminate\Database\Eloquent\Builder;
 use Illuminate\Database\Eloquent\Factories\HasFactory;
 use Illuminate\Database\Eloquent\Model;
-use Illuminate\Database\Eloquent\Relations\BelongsTo;
 
 class UserPoint extends Model
 {

      ----------- end diff -----------

 137) app/Models/ValidatableModel.php
      ---------- begin diff ----------
--- /var/www/html/app/Models/ValidatableModel.php
+++ /var/www/html/app/Models/ValidatableModel.php
@@ -5,7 +5,6 @@
 namespace App\Models;
 
 use Illuminate\Database\Eloquent\Model;
-use Illuminate\Support\Facades\Validator;
 
 abstract class ValidatableModel extends Model
 {

      ----------- end diff -----------

 138) app/Models/Webhook.php
      ---------- begin diff ----------
--- /var/www/html/app/Models/Webhook.php
+++ /var/www/html/app/Models/Webhook.php
@@ -6,22 +6,23 @@
 
 use Illuminate\Database\Eloquent\Factories\HasFactory;
 use Illuminate\Database\Eloquent\Model;
-use Illuminate\Database\Eloquent\Relations\BelongsTo;
 use Illuminate\Database\Eloquent\Relations\HasMany;
 
 /**
- * @property int $id
- * @property string $store_identifier
- * @property string $event_type
- * @property string $product_identifier
+ * @property int      $id
+ * @property string   $store_identifier
+ * @property string   $event_type
+ * @property string   $product_identifier
  * @property int|null $product_id
+ *
  * @pfinal roperty array $payload
- * @property string|null $signature
- * @property string $status
- * @property string|null $error_message
+ *
+ * @property string|null         $signature
+ * @property string              $status
+ * @property string|null         $error_message
  * @property \Carbon\Carbon|null $processed_at
- * @property \Carbon\Carbon $created_at
- * @property \Carbon\Carbon $updated_at
+ * @property \Carbon\Carbon      $created_at
+ * @property \Carbon\Carbon      $updated_at
  */
 class Webhook extends Model
 {
@@ -120,4 +121,3 @@
         ]);
     }
 }
-

      ----------- end diff -----------

 139) app/Models/WebhookLog.php
      ---------- begin diff ----------
--- /var/www/html/app/Models/WebhookLog.php
+++ /var/www/html/app/Models/WebhookLog.php
@@ -6,14 +6,13 @@
 
 use Illuminate\Database\Eloquent\Factories\HasFactory;
 use Illuminate\Database\Eloquent\Model;
-use Illuminate\Database\Eloquent\Relations\BelongsTo;
 
 /**
- * @property int $ifinal d
- * @property int $webhook_id
- * @property string $action
- * @property string $message
- * @property array|null $metadata
+ * @property int            $ifinal     d
+ * @property int            $webhook_id
+ * @property string         $action
+ * @property string         $message
+ * @property array|null     $metadata
  * @property \Carbon\Carbon $created_at
  * @property \Carbon\Carbon $updated_at
  */
@@ -42,4 +41,3 @@
         'metadata' => 'array',
     ];
 }
-

      ----------- end diff -----------

 140) app/Models/Wishlist.php
      ---------- begin diff ----------
--- /var/www/html/app/Models/Wishlist.php
+++ /var/www/html/app/Models/Wishlist.php
@@ -5,21 +5,19 @@
 namespace App\Models;
 
 use Database\Factories\WishlistFactory;
-use Illuminate\Database\Eloquent\Builder;
 use Illuminate\Database\Eloquent\Factories\HasFactory;
-use Illuminate\Database\Eloquent\Relations\BelongsTo;
 use Illuminate\Database\Eloquent\SoftDeletes;
 
 /**
- * @property int $id
- * @property int $user_id
- * @property int $product_id
- * @property string|null $notes
+ * @property int                 $id
+ * @property int                 $user_id
+ * @property int                 $product_id
+ * @property string|null         $notes
  * @property \Carbon\Carbon|null $created_at
  * @property \Carbon\Carbon|nfinal ull $updated_at
  * @property \Carbon\Carbon|null $deleted_at
- * @property User $user
- * @property Product $product
+ * @property User                $user
+ * @property Product             $product
  *
  * @method static WishlistFactory factory(...$parameters)
  *
@@ -37,7 +35,7 @@
     /**
      * @var class-string<\Illuminate\Database\Eloquent\Factories\Factory<Wishlist>>
      */
-    protected static $factory = \Database\Factories\WishlistFactory::class;
+    protected static $factory = WishlistFactory::class;
 
     protected $fillable = [
         'user_id',
@@ -48,7 +46,7 @@
     /**
      * @var \Illuminate\Support\MessageBag|null
      */
-    protected $errors = null;
+    protected $errors;
 
     /**
      * The attributes that should be validated.

      ----------- end diff -----------

 141) app/Notifications/OrderConfirmationNotification.php
      ---------- begin diff ----------
--- /var/www/html/app/Notifications/OrderConfirmationNotification.php
+++ /var/www/html/app/Notifications/OrderConfirmationNotification.php
@@ -4,10 +4,8 @@
 
 namespace App\Notifications;
 
-use App\Models\Order;
 use Illuminate\Bus\Queueable;
 use Illuminate\Contracts\Queue\ShouldQueue;
-use Illuminate\Notifications\Messages\MailMessage;
 use Illuminate\Notifications\Notification;
 
 class OrderConfirmationNotification extends Notification implements ShouldQueue

      ----------- end diff -----------

 142) app/Notifications/OrderStatusUpdateNotification.php
      ---------- begin diff ----------
--- /var/www/html/app/Notifications/OrderStatusUpdateNotification.php
+++ /var/www/html/app/Notifications/OrderStatusUpdateNotification.php
@@ -7,7 +7,6 @@
 use App\Models\Order;
 use Illuminate\Bus\Queueable;
 use Illuminate\Contracts\Queue\ShouldQueue;
-use Illuminate\Notifications\Messages\MailMessage;
 use Illuminate\Notifications\Notification;
 
 class OrderStatusUpdateNotification extends Notification implements ShouldQueue
@@ -14,5 +13,7 @@
 {
     use Queueable;
 
-    public function __construct(private Order $order, private string $oldStatus) {}
+    public function __construct(private Order $order, private string $oldStatus)
+    {
+    }
 }

      ----------- end diff -----------

 143) app/Notifications/PaymentConfirmationNotification.php
      ---------- begin diff ----------
--- /var/www/html/app/Notifications/PaymentConfirmationNotification.php
+++ /var/www/html/app/Notifications/PaymentConfirmationNotification.php
@@ -4,10 +4,8 @@
 
 namespace App\Notifications;
 
-use App\Models\Payment;
 use Illuminate\Bus\Queueable;
 use Illuminate\Contracts\Queue\ShouldQueue;
-use Illuminate\Notifications\Messages\MailMessage;
 use Illuminate\Notifications\Notification;
 
 class PaymentConfirmationNotification extends Notification implements ShouldQueue

      ----------- end diff -----------

 144) app/Notifications/PriceDropNotification.php
      ---------- begin diff ----------
--- /var/www/html/app/Notifications/PriceDropNotification.php
+++ /var/www/html/app/Notifications/PriceDropNotification.php
@@ -7,7 +7,6 @@
 use App\Models\Product;
 use Illuminate\Bus\Queueable;
 use Illuminate\Contracts\Queue\ShouldQueue;
-use Illuminate\Notifications\Messages\MailMessage;
 use Illuminate\Notifications\Notification;
 
 class PriceDropNotification extends Notification implements ShouldQueue
@@ -18,11 +17,11 @@
         public Product $product,
         public float $oldPrice,
         public float $newPrice,
-        public float $targetPrice
-    ) {}
+        public float $targetPrice,
+    ) {
+    }
 
     /**
-     * @param  mixed  $notifiable
      * @return array<string, mixed>
      */
     public function toArray($notifiable): array

      ----------- end diff -----------

 145) app/Notifications/ProductAddedNotification.php
      ---------- begin diff ----------
--- /var/www/html/app/Notifications/ProductAddedNotification.php
+++ /var/www/html/app/Notifications/ProductAddedNotification.php
@@ -5,7 +5,6 @@
 namespace App\Notifications;
 
 use Illuminate\Bus\Queueable;
-use Illuminate\Notifications\Messages\MailMessage;
 use Illuminate\Notifications\Notification;
 
 class ProductAddedNotification extends Notification

      ----------- end diff -----------

 146) app/Notifications/ReviewNotification.php
      ---------- begin diff ----------
--- /var/www/html/app/Notifications/ReviewNotification.php
+++ /var/www/html/app/Notifications/ReviewNotification.php
@@ -7,8 +7,6 @@
 use Illuminate\Bus\Queueable;
 use Illuminate\Contracts\Queue\ShouldQueue;
 use Illuminate\Mail\Mailable;
-use Illuminate\Mail\Mailables\Content;
-use Illuminate\Mail\Mailables\Envelope;
 
 class ReviewNotification extends Mailable implements ShouldQueue
 {

      ----------- end diff -----------

 147) app/Notifications/SystemNotification.php
      ---------- begin diff ----------
--- /var/www/html/app/Notifications/SystemNotification.php
+++ /var/www/html/app/Notifications/SystemNotification.php
@@ -5,7 +5,6 @@
 namespace App\Notifications;
 
 use Illuminate\Bus\Queueable;
-use Illuminate\Notifications\Messages\MailMessage;
 use Illuminate\Notifications\Notification;
 
 class SystemNotification extends Notification

      ----------- end diff -----------

 148) app/Policies/ProductPolicy.php
      ---------- begin diff ----------
--- /var/www/html/app/Policies/ProductPolicy.php
+++ /var/www/html/app/Policies/ProductPolicy.php
@@ -9,8 +9,6 @@
 
 class ProductPolicy
 {
-
-
     /**
      * Determine whether the user can create models.
      */

      ----------- end diff -----------

 149) app/Policies/UserPolicy.php
      ---------- begin diff ----------
--- /var/www/html/app/Policies/UserPolicy.php
+++ /var/www/html/app/Policies/UserPolicy.php
@@ -8,8 +8,6 @@
 
 class UserPolicy
 {
-
-
     /**
      * Determine whether the user can create models.
      */

      ----------- end diff -----------

 150) app/Providers/AppServiceProvider.php
      ---------- begin diff ----------
--- /var/www/html/app/Providers/AppServiceProvider.php
+++ /var/www/html/app/Providers/AppServiceProvider.php
@@ -22,7 +22,7 @@
         $this->app->singleton(PriceSearchService::class, static function ($app) {
             /** @var \Illuminate\Foundation\Application $app */
             $validationFactory = $app->make(\Illuminate\Contracts\Validation\Factory::class);
-            if (! ($validationFactory instanceof \Illuminate\Contracts\Validation\Factory)) {
+            if (!($validationFactory instanceof \Illuminate\Contracts\Validation\Factory)) {
                 throw new \RuntimeException('Failed to resolve ValidationFactory');
             }
 
@@ -35,11 +35,11 @@
         $this->app->singleton(ProductService::class, static function ($app) {
             /** @var \Illuminate\Foundation\Application $app */
             $repository = $app->make(ProductRepository::class);
-            if (! ($repository instanceof ProductRepository)) {
+            if (!($repository instanceof ProductRepository)) {
                 throw new \RuntimeException('Failed to resolve ProductRepository');
             }
             $cache = $app->make(CacheService::class);
-            if (! ($cache instanceof CacheService)) {
+            if (!($cache instanceof CacheService)) {
                 throw new \RuntimeException('Failed to resolve CacheService');
             }
 
@@ -52,7 +52,7 @@
      */
     private function configureFactoryNaming(): void
     {
-        $factoryConfigService = new FactoryConfigurationService;
+        $factoryConfigService = new FactoryConfigurationService();
         $factoryConfigService->configureNaming();
     }
 }

      ----------- end diff -----------

 151) app/Providers/CoprraServiceProvider.php
      ---------- begin diff ----------
--- /var/www/html/app/Providers/CoprraServiceProvider.php
+++ /var/www/html/app/Providers/CoprraServiceProvider.php
@@ -5,7 +5,6 @@
 namespace App\Providers;
 
 use Illuminate\Support\Facades\Blade;
-use Illuminate\Support\Facades\View;
 use Illuminate\Support\ServiceProvider;
 
 final class CoprraServiceProvider extends ServiceProvider
@@ -43,6 +42,6 @@
         });
 
         // Language direction directive
-        Blade::directive('rtl', static fn(): string => "<?php echo in_array(app()->getLocale(), ['ar', 'ur', 'fa']) ? 'rtl' : 'ltr'; ?>");
+        Blade::directive('rtl', static fn (): string => "<?php echo in_array(app()->getLocale(), ['ar', 'ur', 'fa']) ? 'rtl' : 'ltr'; ?>");
     }
 }

      ----------- end diff -----------

 152) app/Providers/EventServiceProvider.php
      ---------- begin diff ----------
--- /var/www/html/app/Providers/EventServiceProvider.php
+++ /var/www/html/app/Providers/EventServiceProvider.php
@@ -25,7 +25,9 @@
      * Register any events for your application.
      */
     #[\Override]
-    public function boot(): void {}
+    public function boot(): void
+    {
+    }
 
     /**
      * Determine if events and listeners should be automatically discovered.

      ----------- end diff -----------

 153) app/Providers/TelescopeServiceProvider.php
      ---------- begin diff ----------
--- /var/www/html/app/Providers/TelescopeServiceProvider.php
+++ /var/www/html/app/Providers/TelescopeServiceProvider.php
@@ -24,12 +24,12 @@
         $isLocal = $this->app->environment('local');
 
         Telescope::filter(static function (IncomingEntry $entry) use ($isLocal) {
-            return $isLocal ||
-                $entry->isReportableException() ||
-                $entry->isFailedRequest() ||
-                $entry->isFailedJob() ||
-                $entry->isScheduledTask() ||
-                $entry->hasMonitoredTag();
+            return $isLocal
+                || $entry->isReportableException()
+                || $entry->isFailedRequest()
+                || $entry->isFailedJob()
+                || $entry->isScheduledTask()
+                || $entry->hasMonitoredTag();
         });
     }
 

      ----------- end diff -----------

 154) app/Providers/ViewServiceProvider.php
      ---------- begin diff ----------
--- /var/www/html/app/Providers/ViewServiceProvider.php
+++ /var/www/html/app/Providers/ViewServiceProvider.php
@@ -14,7 +14,9 @@
      * Register any application services.
      */
     #[\Override]
-    public function register(): void {}
+    public function register(): void
+    {
+    }
 
     /**
      * Bootstrap any application services.
@@ -26,12 +28,12 @@
 
         // Register specific view composers
         View::composer(['layouts.app', 'layouts.admin'], static function ($view): void {
-            /** @var \Illuminate\View\View $view */
+            /* @var \Illuminate\View\View $view */
             $view->with('user', auth()->user());
         });
 
         View::composer(['products.*', 'categories.*', 'brands.*'], function ($view): void {
-            /** @var \Illuminate\View\View $view */
+            /* @var \Illuminate\View\View $view */
             $view->with('breadcrumbs', $this->getBreadcrumbs());
         });
     }

      ----------- end diff -----------

 155) app/Repositories/ProductRepository.php
      ---------- begin diff ----------
--- /var/www/html/app/Repositories/ProductRepository.php
+++ /var/www/html/app/Repositories/ProductRepository.php
@@ -33,12 +33,12 @@
     /**
      * Find product by slug with caching.
      *
-     * @throws \InvalidArgumentException If slug is invalid
+     * @throws InvalidArgumentException If slug is invalid
      */
     public function findBySlug(string $slug): ?Product
     {
         // Validate slug format
-        if (! preg_match('/^[a-z0-9]+(?:-[a-z0-9]+)*$/', $slug)) {
+        if (!preg_match('/^[a-z0-9]+(?:-[a-z0-9]+)*$/', $slug)) {
             throw new InvalidArgumentException('Invalid slug format');
         }
 
@@ -59,7 +59,7 @@
      *
      * @return Collection<int, Product>
      *
-     * @throws \InvalidArgumentException If limit is invalid
+     * @throws InvalidArgumentException If limit is invalid
      */
     public function getRelated(Product $product, int $limit = 4): Collection
     {
@@ -81,17 +81,18 @@
             ->limit($limit)
             ->get());
 
-        return $result instanceof Collection ? $result : new Collection;
+        return $result instanceof Collection ? $result : new Collection();
     }
 
     /**
      * Search products with validation and rate limiting.
      *
-     * @param  array<string, mixed>  $filters
+     * @param array<string, mixed> $filters
+     *
      * @return LengthAwarePaginator<int, Product>
      *
-     * @throws ValidationException If filters are invalid
-     * @throws \InvalidArgumentException If parameters are invalid
+     * @throws ValidationException      If filters are invalid
+     * @throws InvalidArgumentException If parameters are invalid
      */
     public function search(string $query, array $filters = [], int $perPage = 15): LengthAwarePaginator
     {
@@ -139,19 +140,19 @@
                 });
 
             // Apply validated filters
-            if (! empty($filters['category_id']) && is_numeric($filters['category_id'])) {
+            if (!empty($filters['category_id']) && is_numeric($filters['category_id'])) {
                 $productsQuery->where('category_id', (int) $filters['category_id']);
             }
 
-            if (! empty($filters['brand_id']) && is_numeric($filters['brand_id'])) {
+            if (!empty($filters['brand_id']) && is_numeric($filters['brand_id'])) {
                 $productsQuery->where('brand_id', (int) $filters['brand_id']);
             }
 
-            if (! empty($filters['min_price']) && is_numeric($filters['min_price'])) {
+            if (!empty($filters['min_price']) && is_numeric($filters['min_price'])) {
                 $productsQuery->where('price', '>=', (float) $filters['min_price']);
             }
 
-            if (! empty($filters['max_price']) && is_numeric($filters['max_price'])) {
+            if (!empty($filters['max_price']) && is_numeric($filters['max_price'])) {
                 $productsQuery->where('price', '<=', (float) $filters['max_price']);
             }
 
@@ -174,7 +175,7 @@
      * Update product price with validation, locking, and logging.
      *
      * @throws ValidationException If price is invalid
-     * @throws \RuntimeException If update fails
+     * @throws \RuntimeException   If update fails
      */
     public function updatePrice(Product $product, float $newPrice): bool
     {
@@ -206,7 +207,7 @@
 
                 $updated = $lockedProduct->update(['price' => $newPrice]);
 
-                if (! $updated) {
+                if (!$updated) {
                     throw new \RuntimeException('Failed to update product price');
                 }
 

      ----------- end diff -----------

 156) app/Rules/PasswordValidator.php
      ---------- begin diff ----------
--- /var/www/html/app/Rules/PasswordValidator.php
+++ /var/www/html/app/Rules/PasswordValidator.php
@@ -55,22 +55,22 @@
         }
 
         // التحقق من الأحرف الكبيرة
-        if ($this->config['require_uppercase'] && ! preg_match('/[A-Z]/', $password)) {
+        if ($this->config['require_uppercase'] && !preg_match('/[A-Z]/', $password)) {
             $errors[] = 'كلمة المرور يجب أن تحتوي على حرف كبير واحد على الأقل';
         }
 
         // التحقق من الأحرف الصغيرة
-        if ($this->config['require_lowercase'] && ! preg_match('/[a-z]/', $password)) {
+        if ($this->config['require_lowercase'] && !preg_match('/[a-z]/', $password)) {
             $errors[] = 'كلمة المرور يجب أن تحتوي على حرف صغير واحد على الأقل';
         }
 
         // التحقق من الأرقام
-        if ($this->config['require_numbers'] && ! preg_match('/\d/', $password)) {
+        if ($this->config['require_numbers'] && !preg_match('/\d/', $password)) {
             $errors[] = 'كلمة المرور يجب أن تحتوي على رقم واحد على الأقل';
         }
 
         // التحقق من الرموز الخاصة
-        if ($this->config['require_symbols'] && ! preg_match('/[^A-Za-z0-9]/', $password)) {
+        if ($this->config['require_symbols'] && !preg_match('/[^A-Za-z0-9]/', $password)) {
             $errors[] = 'كلمة المرور يجب أن تحتوي على رمز خاص واحد على الأقل';
         }
 
@@ -86,7 +86,7 @@
         }
 
         return [
-            'valid' => $errors === [],
+            'valid' => [] === $errors,
             'errors' => $errors,
             'strength' => $this->calculatePasswordStrength($password),
         ];
@@ -105,16 +105,16 @@
         // نقاط التنوع
         $diversity = 0;
         if (preg_match('/[a-z]/', $password)) {
-            $diversity++;
+            ++$diversity;
         }
         if (preg_match('/[A-Z]/', $password)) {
-            $diversity++;
+            ++$diversity;
         }
         if (preg_match('/\d/', $password)) {
-            $diversity++;
+            ++$diversity;
         }
         if (preg_match('/[^A-Za-z0-9]/', $password)) {
-            $diversity++;
+            ++$diversity;
         }
 
         // نقاط إضافية للتنوع

      ----------- end diff -----------

 157) app/Rules/ValidOrderStatus.php
      ---------- begin diff ----------
--- /var/www/html/app/Rules/ValidOrderStatus.php
+++ /var/www/html/app/Rules/ValidOrderStatus.php
@@ -13,21 +13,21 @@
     /**
      * Run the validation rule.
      *
-     * @param  \Closure(string): \Illuminate\Translation\PotentiallyTranslatedString  $fail
+     * @param Closure(string): \Illuminate\Translation\PotentiallyTranslatedString $fail
      */
     #[\Override]
     public function validate(string $attribute, mixed $value, Closure $fail): void
     {
-        if (! is_string($value)) {
+        if (!is_string($value)) {
             $fail('The :attribute must be a string.');
+
             return;
         }
 
         $validStatuses = array_column(OrderStatus::cases(), 'value');
 
-        if (! in_array($value, $validStatuses, true)) {
+        if (!in_array($value, $validStatuses, true)) {
             $fail('The :attribute must be a valid order status.');
         }
     }
 }
-

      ----------- end diff -----------

 158) app/Rules/ValidOrderStatusTransition.php
      ---------- begin diff ----------
--- /var/www/html/app/Rules/ValidOrderStatusTransition.php
+++ /var/www/html/app/Rules/ValidOrderStatusTransition.php
@@ -5,7 +5,6 @@
 namespace App\Rules;
 
 use App\Enums\OrderStatus;
-use App\Models\Order;
 use Closure;
 use Illuminate\Contracts\Validation\DataAwareRule;
 use Illuminate\Contracts\Validation\ValidationRule;
@@ -22,7 +21,7 @@
     /**
      * Set the data under validation.
      *
-     * @param  array<string, mixed>  $data
+     * @param array<string, mixed> $data
      */
     #[\Override]
     public function setData(array $data): static
@@ -35,13 +34,14 @@
     /**
      * Run the validation rule.
      *
-     * @param  \Closure(string): \Illuminate\Translation\PotentiallyTranslatedString  $fail
+     * @param Closure(string): \Illuminate\Translation\PotentiallyTranslatedString $fail
      */
     #[\Override]
     public function validate(string $attribute, mixed $value, Closure $fail): void
     {
-        if (! is_string($value)) {
+        if (!is_string($value)) {
             $fail('The :attribute must be a string.');
+
             return;
         }
 
@@ -49,10 +49,11 @@
             $newStatus = OrderStatus::from($value);
         } catch (\ValueError) {
             $fail('The :attribute must be a valid order status.');
+
             return;
         }
 
-        if (! $this->order->status->canTransitionTo($newStatus)) {
+        if (!$this->order->status->canTransitionTo($newStatus)) {
             $currentLabel = $this->order->status->label();
             $newLabel = $newStatus->label();
             $fail("Cannot transition from {$currentLabel} to {$newLabel}.");
@@ -59,4 +60,3 @@
         }
     }
 }
-

      ----------- end diff -----------

 159) app/Schemas/BrandSchema.php
      ---------- begin diff ----------
--- /var/www/html/app/Schemas/BrandSchema.php
+++ /var/www/html/app/Schemas/BrandSchema.php
@@ -20,4 +20,6 @@
  *     @OA\Property(property="updated_at", type="string", format="date-time")
  * )
  */
-final class BrandSchema {}
+final class BrandSchema
+{
+}

      ----------- end diff -----------

 160) app/Schemas/CategorySchema.php
      ---------- begin diff ----------
--- /var/www/html/app/Schemas/CategorySchema.php
+++ /var/www/html/app/Schemas/CategorySchema.php
@@ -20,4 +20,6 @@
  *     @OA\Property(property="updated_at", type="string", format="date-time")
  * )
  */
-final class CategorySchema {}
+final class CategorySchema
+{
+}

      ----------- end diff -----------

 161) app/Schemas/PaginationLinksSchema.php
      ---------- begin diff ----------
--- /var/www/html/app/Schemas/PaginationLinksSchema.php
+++ /var/www/html/app/Schemas/PaginationLinksSchema.php
@@ -17,4 +17,6 @@
  *     @OA\Property(property="next", type="string", nullable=true, example="http://api.example.com/products?page=3")
  * )
  */
-final class PaginationLinksSchema {}
+final class PaginationLinksSchema
+{
+}

      ----------- end diff -----------

 162) app/Schemas/PaginationMetaSchema.php
      ---------- begin diff ----------
--- /var/www/html/app/Schemas/PaginationMetaSchema.php
+++ /var/www/html/app/Schemas/PaginationMetaSchema.php
@@ -19,4 +19,6 @@
  *     @OA\Property(property="to", type="integer", example=15)
  * )
  */
-final class PaginationMetaSchema {}
+final class PaginationMetaSchema
+{
+}

      ----------- end diff -----------

 163) app/Schemas/PriceOfferSchema.php
      ---------- begin diff ----------
--- /var/www/html/app/Schemas/PriceOfferSchema.php
+++ /var/www/html/app/Schemas/PriceOfferSchema.php
@@ -29,4 +29,6 @@
  *     @OA\Property(property="updated_at", type="string", format="date-time")
  * )
  */
-final class PriceOfferSchema {}
+final class PriceOfferSchema
+{
+}

      ----------- end diff -----------

 164) app/Schemas/ProductCreateRequestSchema.php
      ---------- begin diff ----------
--- /var/www/html/app/Schemas/ProductCreateRequestSchema.php
+++ /var/www/html/app/Schemas/ProductCreateRequestSchema.php
@@ -23,4 +23,6 @@
  *     @OA\Property(property="store_id", type="integer", example=1)
  * )
  */
-final class ProductCreateRequestSchema {}
+final class ProductCreateRequestSchema
+{
+}

      ----------- end diff -----------

 165) app/Schemas/ProductDetailSchema.php
      ---------- begin diff ----------
--- /var/www/html/app/Schemas/ProductDetailSchema.php
+++ /var/www/html/app/Schemas/ProductDetailSchema.php
@@ -19,4 +19,6 @@
  *     }
  * )
  */
-final class ProductDetailSchema {}
+final class ProductDetailSchema
+{
+}

      ----------- end diff -----------

 166) app/Schemas/ProductSchema.php
      ---------- begin diff ----------
--- /var/www/html/app/Schemas/ProductSchema.php
+++ /var/www/html/app/Schemas/ProductSchema.php
@@ -28,4 +28,6 @@
  *     @OA\Property(property="price_offers", type="array", @OA\Items(ref="#/components/schemas/PriceOffer"))
  * )
  */
-final class ProductSchema {}
+final class ProductSchema
+{
+}

      ----------- end diff -----------

 167) app/Schemas/ProductUpdateRequestSchema.php
      ---------- begin diff ----------
--- /var/www/html/app/Schemas/ProductUpdateRequestSchema.php
+++ /var/www/html/app/Schemas/ProductUpdateRequestSchema.php
@@ -22,4 +22,6 @@
  *     @OA\Property(property="store_id", type="integer", example=2)
  * )
  */
-final class ProductUpdateRequestSchema {}
+final class ProductUpdateRequestSchema
+{
+}

      ----------- end diff -----------

 168) app/Schemas/ReviewSchema.php
      ---------- begin diff ----------
--- /var/www/html/app/Schemas/ReviewSchema.php
+++ /var/www/html/app/Schemas/ReviewSchema.php
@@ -20,4 +20,6 @@
  *     @OA\Property(property="updated_at", type="string", format="date-time", example="2023-01-01T00:00:00Z")
  * )
  */
-final class ReviewSchema {}
+final class ReviewSchema
+{
+}

      ----------- end diff -----------

 169) app/Services/AI/ContinuousQualityMonitor.php
      ---------- begin diff ----------
--- /var/www/html/app/Services/AI/ContinuousQualityMonitor.php
+++ /var/www/html/app/Services/AI/ContinuousQualityMonitor.php
@@ -38,7 +38,7 @@
             sleep($this->checkInterval);
             // In a real implementation, you would have a way to stop this loop
             // For now, we'll add a break after a reasonable number of iterations
-            $iterations++;
+            ++$iterations;
             if ($iterations > 1000) {
                 $running = false;
             }
@@ -174,7 +174,8 @@
     /**
      * Check a specific rule.
      *
-     * @param  array<mixed, mixed>  $rule
+     * @param array<mixed, mixed> $rule
+     *
      * @return array<string, mixed>
      */
     private function checkRule(string $ruleId, array $rule): array
@@ -183,7 +184,7 @@
 
         try {
             $command = is_string($rule['command'] ?? null) ? $rule['command'] : '';
-            if ($command !== '' && $command !== '0') {
+            if ('' !== $command && '0' !== $command) {
                 $result = Process::run($command);
                 $endTime = microtime(true);
                 $duration = round((float) ($endTime - $startTime), 2);
@@ -227,7 +228,7 @@
      */
     private function calculateHealthScore(string $ruleId, \Illuminate\Contracts\Process\ProcessResult $result): int
     {
-        if (! $result || ! is_object($result) || ! method_exists($result, 'successful') || ! $result->successful()) {
+        if (!$result || !is_object($result) || !method_exists($result, 'successful') || !$result->successful()) {
             return 0;
         }
 
@@ -323,7 +324,7 @@
     /**
      * Trigger critical alert.
      *
-     * @param  array<string, mixed>  $result
+     * @param array<string, mixed> $result
      */
     private function triggerCriticalAlert(string $ruleId, array $result): void
     {
@@ -345,7 +346,7 @@
     /**
      * Trigger warning alert.
      *
-     * @param  array<string, mixed>  $result
+     * @param array<string, mixed> $result
      */
     private function triggerWarningAlert(string $ruleId, array $result): void
     {
@@ -364,7 +365,7 @@
     /**
      * Update health status.
      *
-     * @param  array<string, mixed>  $results
+     * @param array<string, mixed> $results
      */
     private function updateHealthStatus(int $overallHealth, array $results): void
     {
@@ -378,7 +379,7 @@
     /**
      * Send notification.
      *
-     * @param  array<string, mixed>  $alert
+     * @param array<string, mixed> $alert
      */
     private function sendNotification(array $alert): void
     {

      ----------- end diff -----------

 170) app/Services/AI/StrictQualityAgent.php
      ---------- begin diff ----------
--- /var/www/html/app/Services/AI/StrictQualityAgent.php
+++ /var/www/html/app/Services/AI/StrictQualityAgent.php
@@ -47,7 +47,7 @@
                 $result = $this->executeStage($stageId, $stage);
                 $this->results[$stageId] = $result;
 
-                if (! ($result['success'] ?? false)) {
+                if (!($result['success'] ?? false)) {
                     $overallSuccess = false;
                     $stageNameForError = is_string($stage['name'] ?? null) ? $stage['name'] : '';
                     $this->log('❌ فشل في المرحلة: '.$stageNameForError);
@@ -127,7 +127,7 @@
     {
         $result = $this->results[$stageId] ?? null;
         if (is_array($result)) {
-            /** @var array<string, mixed> $result */
+            /* @var array<string, mixed> $result */
             return $result;
         }
 
@@ -249,7 +249,8 @@
     /**
      * Execute a single stage.
      *
-     * @param  array<string, mixed>  $stage
+     * @param array<string, mixed> $stage
+     *
      * @return array<string, mixed>
      */
     private function executeStage(string $stageId, array $stage): array
@@ -285,7 +286,8 @@
     /**
      * Execute file-based stage (like syntax check).
      *
-     * @param  array<string, mixed>  $stage
+     * @param array<string, mixed> $stage
+     *
      * @return array<string, mixed>
      */
     private function executeFileBasedStage(array $stage): array
@@ -300,7 +302,7 @@
                     $command = (is_string($stage['command'] ?? null) ? $stage['command'] : '').' '.$file;
                     $result = Process::run($command);
 
-                    if (! $result->successful()) {
+                    if (!$result->successful()) {
                         $errors[] = 'خطأ في الملف '.$file.': '.$result->errorOutput();
                         $success = false;
                     }
@@ -318,7 +320,8 @@
     /**
      * Execute command-based stage.
      *
-     * @param  array<string, mixed>  $stage
+     * @param array<string, mixed> $stage
+     *
      * @return array<string, mixed>
      */
     private function executeCommandStage(array $stage): array
@@ -347,7 +350,7 @@
             if (File::exists($dir)) {
                 $phpFiles = File::allFiles($dir);
                 foreach ($phpFiles as $file) {
-                    if ($file->getExtension() === 'php') {
+                    if ('php' === $file->getExtension()) {
                         $files[] = $file->getPathname();
                     }
                 }
@@ -375,7 +378,7 @@
 
         $reportPath = storage_path('logs/ai-quality-report.json');
         $jsonContent = json_encode($report, JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE);
-        if ($jsonContent !== false) {
+        if (false !== $jsonContent) {
             File::put($reportPath, $jsonContent);
         }
 

      ----------- end diff -----------

 171) app/Services/AIService.php
      ---------- begin diff ----------
--- /var/www/html/app/Services/AIService.php
+++ /var/www/html/app/Services/AIService.php
@@ -4,8 +4,6 @@
 
 namespace App\Services;
 
-use Exception;
-use Illuminate\Contracts\Config\Repository as ConfigRepository;
 use Illuminate\Log\LogManager;
 use Illuminate\Support\Facades\Http;
 
@@ -34,7 +32,7 @@
 
         $response = $this->makeRequest('/completions', $data);
 
-        /** @var array{choices?: array<int, array{text?: string}>, error?: string} $response */
+        /* @var array{choices?: array<int, array{text?: string}>, error?: string} $response */
         return $this->parseAnalysisResponse($response);
     }
 
@@ -49,8 +47,9 @@
     }
 
     /**
-     * @param  array<string, mixed>  $userPreferences
-     * @param  array<int, array<string, mixed>>  $products
+     * @param array<string, mixed>             $userPreferences
+     * @param array<int, array<string, mixed>> $products
+     *
      * @return array<string, mixed>
      */
     public function generateRecommendations(array $userPreferences, array $products): array
@@ -81,12 +80,13 @@
 
         $response = $this->makeRequest('/chat/completions', $data);
 
-        /** @var array{choices?: array<int, array{message?: array{content?: string}}>, error?: string} $response */
+        /* @var array{choices?: array<int, array{message?: array{content?: string}}>, error?: string} $response */
         return $this->parseImageAnalysis($response);
     }
 
     /**
-     * @param  array<string, mixed>  $data
+     * @param array<string, mixed> $data
+     *
      * @return array<string, mixed>
      */
     private function makeRequest(string $endpoint, array $data): array
@@ -98,8 +98,8 @@
                 ->timeout($this->timeout)
                 ->post($fullUrl, $data);
 
-            if (! $response->successful()) {
-                if (! $this->isTesting) {
+            if (!$response->successful()) {
+                if (!$this->isTesting) {
                     $this->log->error('AI Service Request Failed', [
                         'url' => $fullUrl,
                         'status' => $response->status(),
@@ -109,16 +109,16 @@
 
                 $jsonResponse = $response->json();
 
-                /** @var array<string, mixed> */
+                /* @var array<string, mixed> */
                 return ['error' => 'API request failed', 'details' => is_array($jsonResponse) ? $jsonResponse : []];
             }
 
             $jsonResponse = $response->json();
 
-            /** @var array<string, mixed> */
+            /* @var array<string, mixed> */
             return is_array($jsonResponse) ? $jsonResponse : [];
-        } catch (Exception $e) {
-            if (! $this->isTesting) {
+        } catch (\Exception $e) {
+            if (!$this->isTesting) {
                 $this->log->error('AI Service Exception', [
                     'url' => $fullUrl,
                     'message' => $e->getMessage(),
@@ -130,7 +130,8 @@
     }
 
     /**
-     * @param  array{choices?: array<int, array{text?: string}>, error?: string}  $data
+     * @param array{choices?: array<int, array{text?: string}>, error?: string} $data
+     *
      * @return array<string, mixed>
      */
     private function parseAnalysisResponse(array $data): array
@@ -149,7 +150,8 @@
     }
 
     /**
-     * @param  array{choices?: array<int, array{message?: array{content?: string}}>, error?: string}  $data
+     * @param array{choices?: array<int, array{message?: array{content?: string}}>, error?: string} $data
+     *
      * @return array<string, mixed>
      */
     private function parseImageAnalysis(array $data): array

      ----------- end diff -----------

 172) app/Services/AnalyticsService.php
      ---------- begin diff ----------
--- /var/www/html/app/Services/AnalyticsService.php
+++ /var/www/html/app/Services/AnalyticsService.php
@@ -2,167 +2,166 @@
 
         declare(strict_types=1);
 
-        namespace App\Services;
+namespace App\Services;
 
-        use App\Models\AnalyticsEvent;
-        use Illuminate\Support\Carbon;
-        use Illuminate\Support\Facades\DB;
-        use Illuminate\Support\Facades\Log;
+use App\Models\AnalyticsEvent;
+use Illuminate\Support\Facades\DB;
+use Illuminate\Support\Facades\Log;
 
-        class AnalyticsService
-        {
-            /**
-             * Track an analytics event.
-             */
-            public function track(
-                string $eventType,
-                string $eventName,
-                ?int $userId = null,
-                ?int $productId = null,
-                ?int $categoryId = null,
-                ?int $storeId = null,
-                ?array $metadata = null
-            ): ?AnalyticsEvent {
-                // Check if tracking is enabled
-                if (! config('coprra.analytics.track_user_behavior', true)) {
-                    return null;
-                }
+class AnalyticsService
+{
+    /**
+     * Track an analytics event.
+     */
+    public function track(
+        string $eventType,
+        string $eventName,
+        ?int $userId = null,
+        ?int $productId = null,
+        ?int $categoryId = null,
+        ?int $storeId = null,
+        ?array $metadata = null,
+    ): ?AnalyticsEvent {
+        // Check if tracking is enabled
+        if (!config('coprra.analytics.track_user_behavior', true)) {
+            return null;
+        }
 
-                try {
-                    return AnalyticsEvent::create([
-                        'event_type' => $eventType,
-                        'event_name' => $eventName,
-                        'user_id' => $userId,
-                        'product_id' => $productId,
-                        'category_id' => $categoryId,
-                        'store_id' => $storeId,
-                        'metadata' => $metadata,
-                        'ip_address' => request()->ip(),
-                        'user_agent' => request()->userAgent(),
-                        'session_id' => session()->getId(),
-                    ]);
-                } catch (\Exception $e) {
-                    Log::error('Failed to track analytics event', [
-                        'event_type' => $eventType,
-                        'error' => $e->getMessage(),
-                    ]);
+        try {
+            return AnalyticsEvent::create([
+                'event_type' => $eventType,
+                'event_name' => $eventName,
+                'user_id' => $userId,
+                'product_id' => $productId,
+                'category_id' => $categoryId,
+                'store_id' => $storeId,
+                'metadata' => $metadata,
+                'ip_address' => request()->ip(),
+                'user_agent' => request()->userAgent(),
+                'session_id' => session()->getId(),
+            ]);
+        } catch (\Exception $e) {
+            Log::error('Failed to track analytics event', [
+                'event_type' => $eventType,
+                'error' => $e->getMessage(),
+            ]);
 
-                    return null;
-                }
-            }
+            return null;
+        }
+    }
 
-            /**
-             * Track price comparison event.
-             */
-            public function trackPriceComparison(int $productId, ?int $userId = null, array $metadata = []): ?AnalyticsEvent
-            {
-                return $this->track(
-                    AnalyticsEvent::TYPE_PRICE_COMPARISON,
-                    'Price Comparison Viewed',
-                    $userId,
-                    $productId,
-                    null,
-                    null,
-                    $metadata
-                );
-            }
+    /**
+     * Track price comparison event.
+     */
+    public function trackPriceComparison(int $productId, ?int $userId = null, array $metadata = []): ?AnalyticsEvent
+    {
+        return $this->track(
+            AnalyticsEvent::TYPE_PRICE_COMPARISON,
+            'Price Comparison Viewed',
+            $userId,
+            $productId,
+            null,
+            null,
+            $metadata
+        );
+    }
 
-            /**
-             * Get most viewed products.
-             */
-            public function getMostViewedProducts(int $limit = 10, int $days = 30): array
-            {
-                return AnalyticsEvent::ofType(AnalyticsEvent::TYPE_PRODUCT_VIEW)
-                    ->recent($days)
-                    ->select('product_id', DB::raw('COUNT(*) as view_count'))
-                    ->groupBy('product_id')
-                    ->orderByDesc('view_count')
-                    ->limit($limit)
-                    ->with('product')
-                    ->get()
-                    ->toArray();
-            }
+    /**
+     * Get most viewed products.
+     */
+    public function getMostViewedProducts(int $limit = 10, int $days = 30): array
+    {
+        return AnalyticsEvent::ofType(AnalyticsEvent::TYPE_PRODUCT_VIEW)
+            ->recent($days)
+            ->select('product_id', DB::raw('COUNT(*) as view_count'))
+            ->groupBy('product_id')
+            ->orderByDesc('view_count')
+            ->limit($limit)
+            ->with('product')
+            ->get()
+            ->toArray();
+    }
 
-            /**
-             * Get most searched queries.
-             */
-            public function getMostSearchedQueries(int $limit = 10, int $days = 30): array
-            {
-                return AnalyticsEvent::ofType(AnalyticsEvent::TYPE_SEARCH)
-                    ->recent($days)
-                    ->get()
-                    ->pluck('metadata.query')
-                    ->filter()
-                    ->countBy()
-                    ->sortDesc()
-                    ->take($limit)
-                    ->toArray();
-            }
+    /**
+     * Get most searched queries.
+     */
+    public function getMostSearchedQueries(int $limit = 10, int $days = 30): array
+    {
+        return AnalyticsEvent::ofType(AnalyticsEvent::TYPE_SEARCH)
+            ->recent($days)
+            ->get()
+            ->pluck('metadata.query')
+            ->filter()
+            ->countBy()
+            ->sortDesc()
+            ->take($limit)
+            ->toArray();
+    }
 
-            /**
-             * Get most popular stores.
-             */
-            public function getMostPopularStores(int $limit = 10, int $days = 30): array
-            {
-                return AnalyticsEvent::ofType(AnalyticsEvent::TYPE_STORE_CLICK)
-                    ->recent($days)
-                    ->select('store_id', DB::raw('COUNT(*) as click_count'))
-                    ->groupBy('store_id')
-                    ->orderByDesc('click_count')
-                    ->limit($limit)
-                    ->with('store')
-                    ->get()
-                    ->toArray();
-            }
+    /**
+     * Get most popular stores.
+     */
+    public function getMostPopularStores(int $limit = 10, int $days = 30): array
+    {
+        return AnalyticsEvent::ofType(AnalyticsEvent::TYPE_STORE_CLICK)
+            ->recent($days)
+            ->select('store_id', DB::raw('COUNT(*) as click_count'))
+            ->groupBy('store_id')
+            ->orderByDesc('click_count')
+            ->limit($limit)
+            ->with('store')
+            ->get()
+            ->toArray();
+    }
 
-            /**
-             * Get price comparison statistics.
-             */
-            public function getPriceComparisonStats(int $days = 30): array
-            {
-                $events = AnalyticsEvent::ofType(AnalyticsEvent::TYPE_PRICE_COMPARISON)
-                    ->recent($days)
-                    ->get();
+    /**
+     * Get price comparison statistics.
+     */
+    public function getPriceComparisonStats(int $days = 30): array
+    {
+        $events = AnalyticsEvent::ofType(AnalyticsEvent::TYPE_PRICE_COMPARISON)
+            ->recent($days)
+            ->get();
 
-                return [
-                    'total_comparisons' => $events->count(),
-                    'unique_products' => $events->pluck('product_id')->unique()->count(),
-                    'unique_users' => $events->pluck('user_id')->filter()->unique()->count(),
-                    'average_per_day' => round($events->count() / max($days, 1), 2),
-                ];
-            }
+        return [
+            'total_comparisons' => $events->count(),
+            'unique_products' => $events->pluck('product_id')->unique()->count(),
+            'unique_users' => $events->pluck('user_id')->filter()->unique()->count(),
+            'average_per_day' => round($events->count() / max($days, 1), 2),
+        ];
+    }
 
-            /**
-             * Get daily event counts.
-             */
-            public function getDailyEventCounts(string $eventType, int $days = 30): array
-            {
-                $startDate = now()->subDays($days)->startOfDay();
+    /**
+     * Get daily event counts.
+     */
+    public function getDailyEventCounts(string $eventType, int $days = 30): array
+    {
+        $startDate = now()->subDays($days)->startOfDay();
 
-                return AnalyticsEvent::ofType($eventType)
-                    ->where('created_at', '>=', $startDate)
-                    ->select(DB::raw('DATE(created_at) as date'), DB::raw('COUNT(*) as count'))
-                    ->groupBy('date')
-                    ->orderBy('date')
-                    ->get()
-                    ->pluck('count', 'date')
-                    ->toArray();
-            }
+        return AnalyticsEvent::ofType($eventType)
+            ->where('created_at', '>=', $startDate)
+            ->select(DB::raw('DATE(created_at) as date'), DB::raw('COUNT(*) as count'))
+            ->groupBy('date')
+            ->orderBy('date')
+            ->get()
+            ->pluck('count', 'date')
+            ->toArray();
+    }
 
-            /**
-             * Clean old analytics data.
-             */
-            public function cleanOldData(int $daysToKeep = 90): int
-            {
-                $cutoffDate = now()->subDays($daysToKeep);
+    /**
+     * Clean old analytics data.
+     */
+    public function cleanOldData(int $daysToKeep = 90): int
+    {
+        $cutoffDate = now()->subDays($daysToKeep);
 
-                $count = AnalyticsEvent::where('created_at', '<', $cutoffDate)->delete();
+        $count = AnalyticsEvent::where('created_at', '<', $cutoffDate)->delete();
 
-                Log::info('Cleaned old analytics data', [
-                    'days_to_keep' => $daysToKeep,
-                    'records_deleted' => $count,
-                ]);
+        Log::info('Cleaned old analytics data', [
+            'days_to_keep' => $daysToKeep,
+            'records_deleted' => $count,
+        ]);
 
-                return $count;
-            }
-        }
+        return $count;
+    }
+}

      ----------- end diff -----------

 173) app/Services/AuditService.php
      ---------- begin diff ----------
--- /var/www/html/app/Services/AuditService.php
+++ /var/www/html/app/Services/AuditService.php
@@ -14,9 +14,9 @@
     /**
      * Log an audit event.
      *
-     * @param  array<string, mixed>|null  $oldValues
-     * @param  array<string, mixed>|null  $newValues
-     * @param  array<string, mixed>|null  $metadata
+     * @param array<string, mixed>|null $oldValues
+     * @param array<string, mixed>|null $newValues
+     * @param array<string, mixed>|null $metadata
      */
     public function log(
         string $event,
@@ -24,7 +24,7 @@
         ?array $oldValues = null,
         ?array $newValues = null,
         ?array $metadata = null,
-        ?Request $request = null
+        ?Request $request = null,
     ): void {
         $user = Auth::user();
         $request ??= request();
@@ -47,7 +47,7 @@
     /**
      * Log model creation.
      *
-     * @param  array<string, mixed>|null  $metadata
+     * @param array<string, mixed>|null $metadata
      */
     public function logCreated(Model $model, ?array $metadata = null): void
     {
@@ -57,8 +57,8 @@
     /**
      * Log model update.
      *
-     * @param  array<string, mixed>  $oldValues
-     * @param  array<string, mixed>|null  $metadata
+     * @param array<string, mixed>      $oldValues
+     * @param array<string, mixed>|null $metadata
      */
     public function logUpdated(Model $model, array $oldValues, ?array $metadata = null): void
     {
@@ -68,7 +68,7 @@
     /**
      * Log model deletion.
      *
-     * @param  array<string, mixed>|null  $metadata
+     * @param array<string, mixed>|null $metadata
      */
     public function logDeleted(Model $model, ?array $metadata = null): void
     {
@@ -78,12 +78,12 @@
     /**
      * Log sensitive operations.
      *
-     * @param  array<string, mixed>|null  $metadata
+     * @param array<string, mixed>|null $metadata
      */
     public function logSensitiveOperation(
         string $operation,
         Model $model,
-        ?array $metadata = null
+        ?array $metadata = null,
     ): void {
         $this->log($operation, $model, null, null, $metadata);
     }

      ----------- end diff -----------

 174) app/Services/BackupService.php
      ---------- begin diff ----------
--- /var/www/html/app/Services/BackupService.php
+++ /var/www/html/app/Services/BackupService.php
@@ -5,11 +5,8 @@
 namespace App\Services;
 
 use Carbon\Carbon;
-use Exception;
 use Illuminate\Support\Facades\Log;
 use Illuminate\Support\Facades\Process;
-use RecursiveDirectoryIterator;
-use RecursiveIteratorIterator;
 
 final class BackupService
 {
@@ -42,7 +39,7 @@
 
             // Create backup directory
             $backupDir = $this->backupPath.'/'.$backupName;
-            if (! is_dir($backupDir)) {
+            if (!is_dir($backupDir)) {
                 mkdir($backupDir, 0755, true);
             }
 
@@ -72,7 +69,7 @@
             ]);
 
             return $results;
-        } catch (Exception $e) {
+        } catch (\Exception $e) {
             Log::error('Full backup failed', [
                 'backup_name' => $backupName,
                 'error' => $e->getMessage(),
@@ -98,7 +95,7 @@
             Log::info('Starting database backup', ['backup_name' => $backupName]);
 
             $backupDir = $this->backupPath.'/'.$backupName;
-            if (! is_dir($backupDir)) {
+            if (!is_dir($backupDir)) {
                 mkdir($backupDir, 0755, true);
             }
 
@@ -113,7 +110,7 @@
             ]);
 
             return $result;
-        } catch (Exception $e) {
+        } catch (\Exception $e) {
             Log::error('Database backup failed', [
                 'backup_name' => $backupName,
                 'error' => $e->getMessage(),
@@ -138,7 +135,7 @@
             Log::info('Starting files backup', ['backup_name' => $backupName]);
 
             $backupDir = $this->backupPath.'/'.$backupName;
-            if (! is_dir($backupDir)) {
+            if (!is_dir($backupDir)) {
                 mkdir($backupDir, 0755, true);
             }
 
@@ -153,7 +150,7 @@
             ]);
 
             return $result;
-        } catch (Exception $e) {
+        } catch (\Exception $e) {
             Log::error('Files backup failed', [
                 'backup_name' => $backupName,
                 'error' => $e->getMessage(),
@@ -176,8 +173,8 @@
 
             $backupPath = $this->backupPath.'/'.$backupName;
 
-            if (! is_dir($backupPath)) {
-                throw new Exception("Backup not found: {$backupName}");
+            if (!is_dir($backupPath)) {
+                throw new \Exception("Backup not found: {$backupName}");
             }
 
             $results = [
@@ -221,7 +218,7 @@
             ]);
 
             return $results;
-        } catch (Exception $e) {
+        } catch (\Exception $e) {
             Log::error('Restore failed', [
                 'backup_name' => $backupName,
                 'error' => $e->getMessage(),
@@ -241,7 +238,7 @@
     {
         $backups = [];
 
-        if (! is_dir($this->backupPath)) {
+        if (!is_dir($this->backupPath)) {
             return $backups;
         }
 
@@ -248,10 +245,10 @@
         $directories = scandir($this->backupPath);
 
         foreach ($directories as $directory) {
-            if ($directory === '.') {
+            if ('.' === $directory) {
                 continue;
             }
-            if ($directory === '..') {
+            if ('..' === $directory) {
                 continue;
             }
             $backupPath = $this->backupPath.'/'.$directory;
@@ -290,8 +287,8 @@
         try {
             $backupPath = $this->backupPath.'/'.$backupName;
 
-            if (! is_dir($backupPath)) {
-                throw new Exception("Backup not found: {$backupName}");
+            if (!is_dir($backupPath)) {
+                throw new \Exception("Backup not found: {$backupName}");
             }
 
             $this->deleteDirectory($backupPath);
@@ -299,7 +296,7 @@
             Log::info('Backup deleted', ['backup_name' => $backupName]);
 
             return true;
-        } catch (Exception $e) {
+        } catch (\Exception $e) {
             Log::error('Failed to delete backup', [
                 'backup_name' => $backupName,
                 'error' => $e->getMessage(),
@@ -326,7 +323,7 @@
             if ($createdAt->lt($cutoffDate)) {
                 $backupName = $backup['name'] ?? '';
                 if (is_string($backupName) && $this->deleteBackup($backupName)) {
-                    $deletedCount++;
+                    ++$deletedCount;
                 }
             }
         }
@@ -370,8 +367,8 @@
 
         $result = Process::run($command);
 
-        if (! $result->successful()) {
-            throw new Exception('Database backup failed: '.$result->errorOutput());
+        if (!$result->successful()) {
+            throw new \Exception('Database backup failed: '.$result->errorOutput());
         }
 
         return [
@@ -454,7 +451,8 @@
      * Create backup manifest.
      */
     /**
-     * @param  array<string, mixed>  $results
+     * @param array<string, mixed> $results
+     *
      * @return array<string, mixed>
      */
     private function createBackupManifest(string $backupDir, array $results): array
@@ -490,8 +488,8 @@
 
         $result = Process::run($command);
 
-        if (! $result->successful()) {
-            throw new Exception('Backup compression failed: '.$result->errorOutput());
+        if (!$result->successful()) {
+            throw new \Exception('Backup compression failed: '.$result->errorOutput());
         }
 
         // Remove uncompressed directory
@@ -514,18 +512,18 @@
     {
         $manifestPath = $backupPath.'/manifest.json';
 
-        if (! file_exists($manifestPath)) {
+        if (!file_exists($manifestPath)) {
             return [];
         }
 
         $content = file_get_contents($manifestPath);
-        if ($content === false) {
+        if (false === $content) {
             return [];
         }
 
         $decoded = json_decode($content, true);
 
-        /** @var array<string, mixed> */
+        /* @var array<string, mixed> */
         return is_array($decoded) ? $decoded : [];
     }
 
@@ -533,7 +531,8 @@
      * Restore database.
      */
     /**
-     * @param  array<mixed, mixed>  $dbInfo
+     * @param array<mixed, mixed> $dbInfo
+     *
      * @return array<string, mixed>
      */
     private function restoreDatabase(string $backupPath, array $dbInfo): array
@@ -542,8 +541,8 @@
         $filename = $dbInfo['filename'] ?? 'database.sql';
         $sqlFile = $backupPath.'/'.(is_string($filename) ? $filename : 'database.sql');
 
-        if (! file_exists($sqlFile)) {
-            throw new Exception('Database backup file not found');
+        if (!file_exists($sqlFile)) {
+            throw new \Exception('Database backup file not found');
         }
 
         $dbConfigArray = is_array($dbConfig) ? $dbConfig : [];
@@ -565,8 +564,8 @@
 
         $result = Process::run($command);
 
-        if (! $result->successful()) {
-            throw new Exception('Database restore failed: '.$result->errorOutput());
+        if (!$result->successful()) {
+            throw new \Exception('Database restore failed: '.$result->errorOutput());
         }
 
         return [
@@ -578,7 +577,8 @@
      * Restore files.
      */
     /**
-     * @param  array<mixed, mixed>  $filesInfo
+     * @param array<mixed, mixed> $filesInfo
+     *
      * @return array<string, mixed>
      */
     private function restoreFiles(string $backupPath, array $filesInfo): array
@@ -585,8 +585,8 @@
     {
         $filesDir = $backupPath.'/files';
 
-        if (! is_dir($filesDir)) {
-            throw new Exception('Files backup directory not found');
+        if (!is_dir($filesDir)) {
+            throw new \Exception('Files backup directory not found');
         }
 
         $restoredDirs = [];
@@ -616,7 +616,8 @@
      * Restore configuration.
      */
     /**
-     * @param  array<mixed, mixed>  $configInfo
+     * @param array<mixed, mixed> $configInfo
+     *
      * @return array<string, mixed>
      */
     private function restoreConfiguration(string $backupPath, array $configInfo): array
@@ -623,8 +624,8 @@
     {
         $configDir = $backupPath.'/config';
 
-        if (! is_dir($configDir)) {
-            throw new Exception('Configuration backup directory not found');
+        if (!is_dir($configDir)) {
+            throw new \Exception('Configuration backup directory not found');
         }
 
         $restoredFiles = [];
@@ -684,13 +685,13 @@
      */
     private function copyDirectory(string $source, string $dest): void
     {
-        if (! is_dir($dest)) {
+        if (!is_dir($dest)) {
             mkdir($dest, 0755, true);
         }
 
-        $iterator = new RecursiveIteratorIterator(
-            new RecursiveDirectoryIterator($source, RecursiveDirectoryIterator::SKIP_DOTS),
-            RecursiveIteratorIterator::SELF_FIRST
+        $iterator = new \RecursiveIteratorIterator(
+            new \RecursiveDirectoryIterator($source, \RecursiveDirectoryIterator::SKIP_DOTS),
+            \RecursiveIteratorIterator::SELF_FIRST
         );
 
         foreach ($iterator as $item) {
@@ -711,13 +712,13 @@
      */
     private function deleteDirectory(string $dir): void
     {
-        if (! is_dir($dir)) {
+        if (!is_dir($dir)) {
             return;
         }
 
-        $iterator = new RecursiveIteratorIterator(
-            new RecursiveDirectoryIterator($dir, RecursiveDirectoryIterator::SKIP_DOTS),
-            RecursiveIteratorIterator::CHILD_FIRST
+        $iterator = new \RecursiveIteratorIterator(
+            new \RecursiveDirectoryIterator($dir, \RecursiveDirectoryIterator::SKIP_DOTS),
+            \RecursiveIteratorIterator::CHILD_FIRST
         );
 
         foreach ($iterator as $item) {
@@ -740,12 +741,12 @@
     {
         $size = 0;
 
-        if (! is_dir($dir)) {
+        if (!is_dir($dir)) {
             return $size;
         }
 
-        $iterator = new RecursiveIteratorIterator(
-            new RecursiveDirectoryIterator($dir, RecursiveDirectoryIterator::SKIP_DOTS)
+        $iterator = new \RecursiveIteratorIterator(
+            new \RecursiveDirectoryIterator($dir, \RecursiveDirectoryIterator::SKIP_DOTS)
         );
 
         foreach ($iterator as $file) {

      ----------- end diff -----------

 175) app/Services/BehaviorAnalysisService.php
      ---------- begin diff ----------
--- /var/www/html/app/Services/BehaviorAnalysisService.php
+++ /var/www/html/app/Services/BehaviorAnalysisService.php
@@ -14,7 +14,7 @@
 final class BehaviorAnalysisService
 {
     /**
-     * @param  array<string, mixed>  $data
+     * @param array<string, mixed> $data
      */
     public function trackUserBehavior(User $user, string $action, array $data = []): void
     {
@@ -36,7 +36,7 @@
     {
         $cacheKey = "user_analytics_{$user->id}";
 
-        /** @var array<string, mixed> */
+        /* @var array<string, mixed> */
         return Cache::remember($cacheKey, 1800, function () use ($user): array {
             return [
                 'purchase_history' => $this->getPurchaseHistory($user),
@@ -56,7 +56,7 @@
     {
         $cacheKey = 'site_analytics';
 
-        /** @var array<string, mixed> */
+        /* @var array<string, mixed> */
         return Cache::remember($cacheKey, 3600, function (): array {
             return [
                 'total_users' => User::count(),
@@ -76,7 +76,7 @@
      */
     private function getPurchaseHistory(User $user): array
     {
-        /** @var array<int, array<string, mixed>> */
+        /* @var array<int, array<string, mixed>> */
         return Order::where('user_id', $user->id)
             ->with(['items.product'])
             ->orderBy('created_at', 'desc')
@@ -83,7 +83,7 @@
             ->limit(10)
             ->get()
             ->map(static function (Order $order): array {
-                /** @var array<string, mixed> */
+                /* @var array<string, mixed> */
                 return [
                     'order_number' => $order->order_number,
                     'total_amount' => $order->total_amount,
@@ -233,7 +233,7 @@
         $firstPurchaseValue = Order::where('user_id', $user->id)->min('created_at');
         $firstPurchase = is_string($firstPurchaseValue) ? $firstPurchaseValue : null;
 
-        if (! $firstPurchase) {
+        if (!$firstPurchase) {
             return 0;
         }
 
@@ -277,7 +277,7 @@
             },
         ]);
 
-        /** @var array<int, array<string, mixed>> */
+        /* @var array<int, array<string, mixed>> */
         return $query->orderBy('purchase_count', 'desc')
             ->limit(10)
             ->get()
@@ -318,9 +318,9 @@
             ->where('action', 'product_view')
             ->where('created_at', '>=', now()->subDays(30));
 
-        /** @var array<int, mixed> */
+        /* @var array<int, mixed> */
         return $query->join('products', static function ($join): void {
-            /** @var \Illuminate\Database\Query\JoinClause $join */
+            /* @var \Illuminate\Database\Query\JoinClause $join */
             $join->whereRaw("JSON_EXTRACT(user_behaviors.data, '$.product_id') = products.id");
         })
             ->select('products.category_id')
@@ -337,7 +337,7 @@
      */
     private function getPeakActivityHours(User $user): array
     {
-        /** @var array<int, mixed> */
+        /* @var array<int, mixed> */
         return DB::table('user_behaviors')
             ->where('user_id', $user->id)
             ->where('created_at', '>=', now()->subDays(30))

      ----------- end diff -----------

 176) app/Services/CacheService.php
      ---------- begin diff ----------
--- /var/www/html/app/Services/CacheService.php
+++ /var/www/html/app/Services/CacheService.php
@@ -9,7 +9,7 @@
 use Illuminate\Support\Facades\Redis;
 
 /**
- * Enhanced Cache Service
+ * Enhanced Cache Service.
  *
  * This service provides advanced caching functionality with support for:
  * - Cache tagging for efficient cache invalidation
@@ -23,19 +23,18 @@
  */
 final class CacheService
 {
-
-
     /**
-     * Enhanced remember method with tagging support
+     * Enhanced remember method with tagging support.
      *
      * Remembers data in cache with optional tagging for efficient invalidation.
      * Automatically detects cache driver capabilities and uses appropriate methods.
      * Includes error handling with fallback to direct execution.
      *
-     * @param  string  $key  Cache key (will be prefixed automatically)
-     * @param  int  $ttl  Time to live in seconds
-     * @param  callable  $callback  Function to generate data if cache miss
-     * @param  array<int, string>  $tags  Optional cache tags for grouped invalidation
+     * @param string             $key      Cache key (will be prefixed automatically)
+     * @param int                $ttl      Time to live in seconds
+     * @param callable           $callback Function to generate data if cache miss
+     * @param array<int, string> $tags     Optional cache tags for grouped invalidation
+     *
      * @return mixed Cached or generated data
      */
     public function remember(string $key, int $ttl, callable $callback, array $tags = []): mixed
@@ -44,7 +43,7 @@
 
         try {
             // Use cache tags if supported and tags are provided
-            if (! empty($tags) && $this->supportsTags()) {
+            if (!empty($tags) && $this->supportsTags()) {
                 return Cache::tags($tags)->remember($prefixedKey, $ttl, static function () use ($callback, $key, $tags) {
                     Log::debug('Cache miss - data generated', ['key' => $key, 'tags' => $tags, 'execution_time' => microtime(true)]);
 
@@ -77,7 +76,7 @@
     }
 
     /**
-     * @param  array<int, string>  $tags
+     * @param array<int, string> $tags
      */
     public function forgetByTags(array $tags): bool
     {
@@ -84,7 +83,7 @@
         try {
             $cache = Cache::getFacadeRoot();
 
-            if (! is_object($cache)) {
+            if (!is_object($cache)) {
                 return false;
             }
 
@@ -91,7 +90,7 @@
             if (method_exists($cache, 'getStore')) {
                 $store = $cache->getStore();
 
-                if (! is_object($store)) {
+                if (!is_object($store)) {
                     return false;
                 }
 
@@ -113,7 +112,7 @@
     }
 
     /**
-     * Check if the current cache driver supports tags
+     * Check if the current cache driver supports tags.
      */
     private function supportsTags(): bool
     {
@@ -124,7 +123,7 @@
     }
 
     /**
-     * Warm up popular products cache
+     * Warm up popular products cache.
      */
     private function warmUpPopularProducts(): void
     {
@@ -148,7 +147,7 @@
     }
 
     /**
-     * Warm up site analytics cache
+     * Warm up site analytics cache.
      */
     private function warmUpSiteAnalytics(): void
     {
@@ -173,7 +172,7 @@
     }
 
     /**
-     * Warm up categories cache
+     * Warm up categories cache.
      */
     private function warmUpCategories(): void
     {

      ----------- end diff -----------

 177) app/Services/CDNService.php
      ---------- begin diff ----------
--- /var/www/html/app/Services/CDNService.php
+++ /var/www/html/app/Services/CDNService.php
@@ -4,7 +4,6 @@
 
 namespace App\Services;
 
-use Exception;
 use Illuminate\Support\Facades\Http;
 use Illuminate\Support\Facades\Log;
 use Illuminate\Support\Facades\Storage;
@@ -53,7 +52,7 @@
             ]);
 
             return $result;
-        } catch (Exception $e) {
+        } catch (\Exception $e) {
             Log::error('Failed to upload file to CDN', [
                 'local_path' => $localPath,
                 'remote_path' => $remotePath,
@@ -69,7 +68,8 @@
      * Upload multiple files to CDN.
      */
     /**
-     * @param  array<string, string>  $files
+     * @param array<string, string> $files
+     *
      * @return array<string, array<string, mixed>>
      */
     public function uploadMultipleFiles(array $files): array
@@ -79,7 +79,7 @@
         foreach ($files as $localPath => $remotePath) {
             try {
                 $results[$localPath] = $this->uploadFile($localPath, $remotePath);
-            } catch (Exception $e) {
+            } catch (\Exception $e) {
                 $results[$localPath] = [
                     'error' => $e->getMessage(),
                     'success' => false,
@@ -104,7 +104,7 @@
             ]);
 
             return $result;
-        } catch (Exception $e) {
+        } catch (\Exception $e) {
             Log::error('Failed to delete file from CDN', [
                 'remote_path' => $remotePath,
                 'provider' => $this->provider,
@@ -119,7 +119,7 @@
      * Purge CDN cache.
      */
     /**
-     * @param  list<string>  $urls
+     * @param list<string> $urls
      */
     public function purgeCache(array $urls = []): bool
     {
@@ -132,7 +132,7 @@
             ]);
 
             return $result;
-        } catch (Exception $e) {
+        } catch (\Exception $e) {
             Log::error('Failed to purge CDN cache', [
                 'urls' => $urls,
                 'provider' => $this->provider,
@@ -163,7 +163,7 @@
             $response = Http::head($url);
 
             return $response->successful();
-        } catch (Exception $e) {
+        } catch (\Exception $e) {
             Log::error('Failed to check file existence on CDN', [
                 'remote_path' => $remotePath,
                 'error' => $e->getMessage(),
@@ -185,8 +185,8 @@
             $url = $this->getUrl($remotePath);
             $response = Http::head($url);
 
-            if (! $response->successful()) {
-                throw new Exception('File not found on CDN');
+            if (!$response->successful()) {
+                throw new \Exception('File not found on CDN');
             }
 
             return [
@@ -197,7 +197,7 @@
                 'etag' => $response->header('ETag'),
                 'cache_control' => $response->header('Cache-Control'),
             ];
-        } catch (Exception $e) {
+        } catch (\Exception $e) {
             Log::error('Failed to get file metadata from CDN', [
                 'remote_path' => $remotePath,
                 'error' => $e->getMessage(),
@@ -222,7 +222,7 @@
                 'google_cloud' => $this->getGoogleCloudStatistics(),
                 default => [],
             };
-        } catch (Exception $e) {
+        } catch (\Exception $e) {
             Log::error('Failed to get CDN statistics', [
                 'provider' => $this->provider,
                 'error' => $e->getMessage(),
@@ -250,7 +250,7 @@
             }
 
             return false;
-        } catch (Exception $e) {
+        } catch (\Exception $e) {
             Log::error('CDN connection test failed', [
                 'provider' => $this->provider,
                 'error' => $e->getMessage(),
@@ -272,7 +272,7 @@
             'cloudflare' => $this->uploadToCloudflare($content, $path, $mimeType),
             'aws_s3' => $this->uploadToS3($path),
             'google_cloud' => $this->uploadToGoogleCloud($path),
-            default => throw new Exception("Unsupported CDN provider: {$this->provider}"),
+            default => throw new \Exception("Unsupported CDN provider: {$this->provider}"),
         };
     }
 
@@ -294,12 +294,12 @@
             'Content-Type' => $mimeType,
         ])->put('https://api.cloudflare.com/client/v4/accounts/'.$accountId."/images/v1/{$path}", ['content' => $content]);
 
-        if (! $response->successful()) {
-            throw new Exception('Cloudflare upload failed: '.$response->body());
+        if (!$response->successful()) {
+            throw new \Exception('Cloudflare upload failed: '.$response->body());
         }
 
         $data = $response->json() ?? [];
-        if (! is_array($data)) {
+        if (!is_array($data)) {
             $data = [];
         }
 
@@ -308,7 +308,7 @@
         $id = $result['id'] ?? null;
 
         return [
-            'url' => $variants !== [] && isset($variants[0]) && is_string($variants[0]) ? $variants[0] : $this->getUrl($path),
+            'url' => [] !== $variants && isset($variants[0]) && is_string($variants[0]) ? $variants[0] : $this->getUrl($path),
             'id' => $id,
             'provider' => 'cloudflare',
         ];
@@ -370,7 +370,7 @@
             'cloudflare' => $this->deleteFromCloudflare($path),
             'aws_s3' => $this->deleteFromS3(),
             'google_cloud' => $this->deleteFromGoogleCloud(),
-            default => throw new Exception("Unsupported CDN provider: {$this->provider}"),
+            default => throw new \Exception("Unsupported CDN provider: {$this->provider}"),
         };
     }
 
@@ -411,7 +411,7 @@
      * Purge CDN cache based on provider.
      */
     /**
-     * @param  list<string>  $urls
+     * @param list<string> $urls
      */
     private function purgeCDNCache(array $urls): bool
     {
@@ -419,7 +419,7 @@
             'cloudflare' => $this->purgeCloudflareCache($urls),
             'aws_s3' => $this->purgeS3Cache(),
             'google_cloud' => $this->purgeGoogleCloudCache(),
-            default => throw new Exception("Unsupported CDN provider: {$this->provider}"),
+            default => throw new \Exception("Unsupported CDN provider: {$this->provider}"),
         };
     }
 
@@ -427,7 +427,7 @@
      * Purge Cloudflare cache.
      */
     /**
-     * @param  list<string>  $urls
+     * @param list<string> $urls
      */
     private function purgeCloudflareCache(array $urls): bool
     {
@@ -438,7 +438,7 @@
             'Authorization' => 'Bearer '.$apiToken,
             'Content-Type' => 'application/json',
         ])->post('https://api.cloudflare.com/client/v4/zones/'.$zoneId.'/purge_cache', [
-            'purge_everything' => $urls === [],
+            'purge_everything' => [] === $urls,
             'files' => $urls,
         ]);
 
@@ -473,13 +473,13 @@
             'Authorization' => 'Bearer '.$apiToken,
         ])->get('https://api.cloudflare.com/client/v4/zones/'.$zoneId.'/analytics/dashboard');
 
-        if (! $response->successful()) {
-            throw new Exception('Failed to get Cloudflare statistics');
+        if (!$response->successful()) {
+            throw new \Exception('Failed to get Cloudflare statistics');
         }
 
         $result = $response->json();
 
-        /** @var array<string, mixed> */
+        /* @var array<string, mixed> */
         return is_array($result) ? $result : [];
     }
 

      ----------- end diff -----------

 178) app/Services/ExchangeRateService.php
      ---------- begin diff ----------
--- /var/www/html/app/Services/ExchangeRateService.php
+++ /var/www/html/app/Services/ExchangeRateService.php
@@ -40,7 +40,7 @@
         $cacheKey = "exchange_rate_{$fromCurrency}_{$toCurrency}";
         $cachedRate = Cache::get($cacheKey);
 
-        if ($cachedRate !== null) {
+        if (null !== $cachedRate) {
             return (float) $cachedRate;
         }
 
@@ -47,7 +47,7 @@
         // Try to get from database
         $rate = ExchangeRate::getRate($fromCurrency, $toCurrency);
 
-        if ($rate !== null) {
+        if (null !== $rate) {
             // Cache the rate
             Cache::put($cacheKey, $rate, self::CACHE_DURATION);
 
@@ -60,7 +60,7 @@
         // Try again from database
         $rate = ExchangeRate::getRate($fromCurrency, $toCurrency);
 
-        if ($rate !== null) {
+        if (null !== $rate) {
             Cache::put($cacheKey, $rate, self::CACHE_DURATION);
 
             return $rate;
@@ -98,7 +98,7 @@
 
             $response = Http::timeout(10)->get($apiUrl);
 
-            if (! $response->successful()) {
+            if (!$response->successful()) {
                 Log::warning('Failed to fetch exchange rates from API', [
                     'status' => $response->status(),
                     'body' => $response->body(),
@@ -109,7 +109,7 @@
 
             $data = $response->json();
 
-            if (! isset($data['rates']) || ! is_array($data['rates'])) {
+            if (!isset($data['rates']) || !is_array($data['rates'])) {
                 Log::warning('Invalid exchange rate API response format');
 
                 return 0;
@@ -124,7 +124,7 @@
                     continue;
                 }
 
-                if (! isset($rates[$currency])) {
+                if (!isset($rates[$currency])) {
                     continue;
                 }
 
@@ -203,7 +203,7 @@
         $rates = config('coprra.exchange_rates', []);
 
         foreach ($rates as $currency => $rate) {
-            if ($currency === self::BASE_CURRENCY) {
+            if (self::BASE_CURRENCY === $currency) {
                 continue;
             }
 
@@ -240,4 +240,3 @@
         return $count;
     }
 }
-

      ----------- end diff -----------

 179) app/Services/ExternalStoreService.php
      ---------- begin diff ----------
--- /var/www/html/app/Services/ExternalStoreService.php
+++ /var/www/html/app/Services/ExternalStoreService.php
@@ -27,7 +27,8 @@
     }
 
     /**
-     * @param  array<string, mixed>  $filters
+     * @param array<string, mixed> $filters
+     *
      * @return array<int, array<string, mixed>>
      */
     public function searchProducts(string $query, array $filters = []): array
@@ -59,7 +60,7 @@
         $result = Cache::remember($cacheKey, 3600, function () use ($storeName, $productId) {
             $config = $this->storeConfigs[$storeName] ?? null;
 
-            if (! is_array($config)) {
+            if (!is_array($config)) {
                 return null;
             }
 
@@ -67,7 +68,7 @@
                 $apiKey = $config['api_key'] ?? '';
                 $apiUrl = $config['api_url'] ?? '';
 
-                if (! is_string($apiKey) || ! is_string($apiUrl)) {
+                if (!is_string($apiKey) || !is_string($apiUrl)) {
                     return null;
                 }
 
@@ -79,7 +80,7 @@
                 if ($response->successful()) {
                     $data = $response->json();
                     if (is_array($data)) {
-                        /** @var array<string, mixed> $data */
+                        /* @var array<string, mixed> $data */
                         return $this->normalizeProductData($data, $storeName);
                     }
 
@@ -97,7 +98,7 @@
             }
         });
 
-        /** @var array<string, mixed>|null */
+        /* @var array<string, mixed>|null */
         return is_array($result) ? $result : null;
     }
 
@@ -105,7 +106,7 @@
     {
         $config = $this->storeConfigs[$storeName] ?? null;
 
-        if (! is_array($config)) {
+        if (!is_array($config)) {
             return 0;
         }
 
@@ -112,7 +113,7 @@
         $apiKey = $config['api_key'] ?? '';
         $apiUrl = $config['api_url'] ?? '';
 
-        if (! is_string($apiKey) || ! is_string($apiUrl)) {
+        if (!is_string($apiKey) || !is_string($apiUrl)) {
             return 0;
         }
 
@@ -133,7 +134,7 @@
                 if ($response->successful()) {
                     $data = $response->json();
 
-                    if (! is_array($data)) {
+                    if (!is_array($data)) {
                         $hasMore = false;
 
                         continue;
@@ -144,12 +145,12 @@
                     if (is_array($products)) {
                         foreach ($products as $productData) {
                             $this->syncProduct($productData, $storeName);
-                            $syncedCount++;
+                            ++$syncedCount;
                         }
                     }
 
                     $hasMore = ($data['has_more'] ?? false) === true;
-                    $page++;
+                    ++$page;
                 } else {
                     $hasMore = false;
                 }
@@ -177,7 +178,7 @@
                 $apiKey = $config['api_key'] ?? '';
                 $apiUrl = $config['api_url'] ?? '';
 
-                if (! is_string($apiKey) || ! is_string($apiUrl)) {
+                if (!is_string($apiKey) || !is_string($apiUrl)) {
                     $status[$storeName] = [
                         'status' => 'error',
                         'error' => 'Invalid configuration',
@@ -209,7 +210,8 @@
     }
 
     /**
-     * @param  array<string, mixed>  $filters
+     * @param array<string, mixed> $filters
+     *
      * @return array<int, array<string, mixed>>
      */
     private function searchInStore(string $storeName, string $query, array $filters): array
@@ -219,7 +221,7 @@
         $apiKey = $config['api_key'] ?? '';
         $apiUrl = $config['api_url'] ?? '';
 
-        if (! is_string($apiKey) || ! is_string($apiUrl)) {
+        if (!is_string($apiKey) || !is_string($apiUrl)) {
             return [];
         }
 
@@ -232,19 +234,19 @@
             'filters' => $filters,
         ]);
 
-        if (! $response->successful()) {
+        if (!$response->successful()) {
             throw new \Exception('API request failed: '.$response->body());
         }
 
         $data = $response->json();
 
-        if (! is_array($data)) {
+        if (!is_array($data)) {
             return [];
         }
 
         $products = $data['products'] ?? [];
 
-        if (! is_array($products)) {
+        if (!is_array($products)) {
             return [];
         }
 
@@ -254,13 +256,13 @@
     }
 
     /**
+     * @psalm-param array<string, mixed> $productData
+     *
      * @return array<string, mixed>
-     *
-     * @psalm-param array<string, mixed> $productData
      */
     private function normalizeProductData(array $productData, string $storeName): array
     {
-        if (! is_array($productData)) {
+        if (!is_array($productData)) {
             return [];
         }
 
@@ -283,8 +285,9 @@
     }
 
     /**
-     * @param  array<int, array<string, mixed>>  $results
-     * @param  array<string, mixed>  $filters
+     * @param array<int, array<string, mixed>> $results
+     * @param array<string, mixed>             $filters
+     *
      * @return array<int, array<string, mixed>>
      */
     private function sortAndFilterResults(array $results, array $filters): array
@@ -291,7 +294,7 @@
     {
         // Sort by price if specified
         $sortBy = $filters['sort_by'] ?? null;
-        if (is_string($sortBy) && $sortBy === 'price') {
+        if (is_string($sortBy) && 'price' === $sortBy) {
             usort($results, static function (array $a, array $b): int {
                 $priceA = $a['price'] ?? 0;
                 $priceB = $b['price'] ?? 0;
@@ -323,7 +326,7 @@
     }
 
     /**
-     * @param  array<string, mixed>  $productData
+     * @param array<string, mixed> $productData
      */
     private function syncProduct(array $productData, string $storeName): void
     {

      ----------- end diff -----------

 180) app/Services/FactoryConfigurationService.php
      ---------- begin diff ----------
--- /var/www/html/app/Services/FactoryConfigurationService.php
+++ /var/www/html/app/Services/FactoryConfigurationService.php
@@ -8,7 +8,9 @@
 
 final class FactoryConfigurationService
 {
-    public function __construct(private readonly string $factoryClass = Factory::class) {}
+    public function __construct(private readonly string $factoryClass = Factory::class)
+    {
+    }
 
     public function configureNaming(): void
     {

      ----------- end diff -----------

 181) app/Services/FileCleanupService.php
      ---------- begin diff ----------
--- /var/www/html/app/Services/FileCleanupService.php
+++ /var/www/html/app/Services/FileCleanupService.php
@@ -5,10 +5,7 @@
 namespace App\Services;
 
 use Carbon\Carbon;
-use Exception;
 use Illuminate\Support\Facades\Log;
-use RecursiveDirectoryIterator;
-use RecursiveIteratorIterator;
 
 final class FileCleanupService
 {
@@ -65,7 +62,7 @@
             }
 
             Log::info('Temp files cleanup completed', $results);
-        } catch (Exception $e) {
+        } catch (\Exception $e) {
             $results['errors'][] = $e->getMessage();
             Log::error('Temp files cleanup failed', [
                 'error' => $e->getMessage(),
@@ -97,7 +94,7 @@
 
             if (is_dir($logDirectory)) {
                 $files = glob($logDirectory.'/*.log');
-                if ($files === false) {
+                if (false === $files) {
                     $files = [];
                 }
 
@@ -105,7 +102,7 @@
                     if (filemtime($file) < $cutoffDate->timestamp) {
                         $size = filesize($file);
                         if (unlink($file)) {
-                            $results['log_files']++;
+                            ++$results['log_files'];
                             $results['deleted_size'] += $size;
                         }
                     }
@@ -113,7 +110,7 @@
             }
 
             Log::info('Log files cleanup completed', $results);
-        } catch (Exception $e) {
+        } catch (\Exception $e) {
             $results['errors'][] = $e->getMessage();
             Log::error('Log files cleanup failed', [
                 'error' => $e->getMessage(),
@@ -159,7 +156,7 @@
             \Artisan::call('config:clear');
 
             Log::info('Cache files cleanup completed', $results);
-        } catch (Exception $e) {
+        } catch (\Exception $e) {
             $results['errors'][] = $e->getMessage();
             Log::error('Cache files cleanup failed', [
                 'error' => $e->getMessage(),
@@ -196,7 +193,7 @@
             }
 
             Log::info('Backup files cleanup completed', $results);
-        } catch (Exception $e) {
+        } catch (\Exception $e) {
             $results['errors'][] = $e->getMessage();
             Log::error('Backup files cleanup failed', [
                 'error' => $e->getMessage(),
@@ -235,7 +232,7 @@
             }
 
             Log::info('Uploaded files cleanup completed', $results);
-        } catch (Exception $e) {
+        } catch (\Exception $e) {
             $results['errors'][] = $e->getMessage();
             Log::error('Uploaded files cleanup failed', [
                 'error' => $e->getMessage(),
@@ -350,13 +347,13 @@
         $sizeDeleted = 0;
         $cutoffDate = Carbon::now()->subDays($retentionDays);
 
-        if (! is_dir($directory)) {
+        if (!is_dir($directory)) {
             return ['files_deleted' => 0, 'size_deleted' => 0];
         }
 
-        $iterator = new RecursiveIteratorIterator(
-            new RecursiveDirectoryIterator($directory, RecursiveDirectoryIterator::SKIP_DOTS),
-            RecursiveIteratorIterator::CHILD_FIRST
+        $iterator = new \RecursiveIteratorIterator(
+            new \RecursiveDirectoryIterator($directory, \RecursiveDirectoryIterator::SKIP_DOTS),
+            \RecursiveIteratorIterator::CHILD_FIRST
         );
 
         foreach ($iterator as $file) {
@@ -363,7 +360,7 @@
             if ($file instanceof \SplFileInfo && $file->isFile() && $file->getMTime() < $cutoffDate->timestamp) {
                 $size = $file->getSize();
                 if (unlink($file->getPathname())) {
-                    $filesDeleted++;
+                    ++$filesDeleted;
                     $sizeDeleted += $size;
                 }
             }
@@ -382,12 +379,12 @@
     {
         $size = 0;
 
-        if (! is_dir($directory)) {
+        if (!is_dir($directory)) {
             return $size;
         }
 
-        $iterator = new RecursiveIteratorIterator(
-            new RecursiveDirectoryIterator($directory, RecursiveDirectoryIterator::SKIP_DOTS)
+        $iterator = new \RecursiveIteratorIterator(
+            new \RecursiveDirectoryIterator($directory, \RecursiveDirectoryIterator::SKIP_DOTS)
         );
 
         foreach ($iterator as $file) {
@@ -409,7 +406,7 @@
         if (file_exists($lastCleanupFile)) {
             $content = file_get_contents($lastCleanupFile);
 
-            return $content !== false ? $content : null;
+            return false !== $content ? $content : null;
         }
 
         return null;
@@ -422,7 +419,7 @@
     {
         $lastCleanup = $this->getLastCleanupTime();
 
-        if ($lastCleanup !== null) {
+        if (null !== $lastCleanup) {
             try {
                 $lastCleanupDate = Carbon::parse($lastCleanup);
 

      ----------- end diff -----------

 182) app/Services/FinancialTransactionService.php
      ---------- begin diff ----------
--- /var/www/html/app/Services/FinancialTransactionService.php
+++ /var/www/html/app/Services/FinancialTransactionService.php
@@ -6,13 +6,14 @@
 
 use App\Models\PriceOffer;
 use App\Models\Product;
-use Exception;
 use Illuminate\Support\Facades\DB;
 use Illuminate\Support\Facades\Log;
 
 final class FinancialTransactionService
 {
-    public function __construct(private readonly AuditService $auditService) {}
+    public function __construct(private readonly AuditService $auditService)
+    {
+    }
 
     /**
      * Update product price with transaction safety.
@@ -25,11 +26,11 @@
 
                 // Validate price
                 if ($newPrice < 0) {
-                    throw new Exception('Price cannot be negative');
+                    throw new \Exception('Price cannot be negative');
                 }
 
                 if ($newPrice > 1000000) {
-                    throw new Exception('Price exceeds maximum allowed value');
+                    throw new \Exception('Price exceeds maximum allowed value');
                 }
 
                 // Update product price
@@ -55,7 +56,7 @@
                 ]);
 
                 return true;
-            } catch (Exception $e) {
+            } catch (\Exception $e) {
                 Log::error('Failed to update product price', [
                     'product_id' => $product->id,
                     'new_price' => $newPrice,
@@ -71,10 +72,10 @@
     /**
      * Create price offer with transaction safety.
      *
-     * @param  array<string, mixed>  $offerData
+     * @param array<string, mixed> $offerData
      */
     /**
-     * @param  array<string, mixed>  $offerData
+     * @param array<string, mixed> $offerData
      */
     public function createPriceOffer(array $offerData): PriceOffer
     {
@@ -104,7 +105,7 @@
                 ]);
 
                 return $offer;
-            } catch (Exception $e) {
+            } catch (\Exception $e) {
                 Log::error('Failed to create price offer', [
                     'offer_data' => $offerData,
                     'error' => $e->getMessage(),
@@ -119,7 +120,7 @@
     /**
      * Update price offer with transaction safety.
      *
-     * @param  array<string, mixed>  $updateData
+     * @param array<string, mixed> $updateData
      */
     public function updatePriceOffer(PriceOffer $offer, array $updateData): bool
     {
@@ -137,7 +138,7 @@
                 $offer->update($updateData);
 
                 // Log the transaction
-                /** @var array<string, mixed> $oldData */
+                /* @var array<string, mixed> $oldData */
                 $this->auditService->logUpdated($offer, $oldData, [
                     'changes' => $offer->getChanges(),
                 ]);
@@ -151,7 +152,7 @@
                 ]);
 
                 return true;
-            } catch (Exception $e) {
+            } catch (\Exception $e) {
                 Log::error('Failed to update price offer', [
                     'offer_id' => $offer->id,
                     'update_data' => $updateData,
@@ -194,7 +195,7 @@
                 ]);
 
                 return true;
-            } catch (Exception $e) {
+            } catch (\Exception $e) {
                 Log::error('Failed to delete price offer', [
                     'offer_id' => $offer->id,
                     'error' => $e->getMessage(),
@@ -209,12 +210,12 @@
     /**
      * Validate offer data.
      *
-     * @param  array<string, mixed>  $data
+     * @param array<string, mixed> $data
      */
     private function validateOfferData(array $data): void
     {
-        if (! isset($data['product_id']) || ! isset($data['store_id']) || ! isset($data['price'])) {
-            throw new Exception('Missing required fields: product_id, store_id, price');
+        if (!isset($data['product_id']) || !isset($data['store_id']) || !isset($data['price'])) {
+            throw new \Exception('Missing required fields: product_id, store_id, price');
         }
 
         $price = is_numeric($data['price']) ? (float) $data['price'] : 0.0;
@@ -221,8 +222,8 @@
         $this->validatePrice($price);
 
         // Check if product exists
-        if (! Product::find($data['product_id'])) {
-            throw new Exception('Product not found');
+        if (!Product::find($data['product_id'])) {
+            throw new \Exception('Product not found');
         }
     }
 
@@ -232,11 +233,11 @@
     private function validatePrice(float $price): void
     {
         if ($price < 0) {
-            throw new Exception('Price cannot be negative');
+            throw new \Exception('Price cannot be negative');
         }
 
         if ($price > 1000000) {
-            throw new Exception('Price exceeds maximum allowed value');
+            throw new \Exception('Price exceeds maximum allowed value');
         }
     }
 
@@ -263,7 +264,7 @@
             ->orderBy('price')
             ->first();
 
-        if ($lowestOffer && $offer->product instanceof \App\Models\Product && $lowestOffer->price !== $offer->product->price) {
+        if ($lowestOffer && $offer->product instanceof Product && $lowestOffer->price !== $offer->product->price) {
             $this->updateProductPrice($offer->product, (float) $lowestOffer->price, 'Updated from lowest price offer');
         }
     }

      ----------- end diff -----------

 183) app/Services/ImageOptimizationService.php
      ---------- begin diff ----------
--- /var/www/html/app/Services/ImageOptimizationService.php
+++ /var/www/html/app/Services/ImageOptimizationService.php
@@ -11,7 +11,8 @@
 final class ImageOptimizationService
 {
     /**
-     * @param  array<string, array{0: int, 1: int}>  $sizes
+     * @param array<string, array{0: int, 1: int}> $sizes
+     *
      * @return array<string, array<string, mixed>>
      */
     public function optimizeImage(string $path, array $sizes = []): array
@@ -31,7 +32,7 @@
             $image = Image::make($originalPath);
 
             foreach ($sizes as $sizeName => $dimensions) {
-                if (! is_array($dimensions) || count($dimensions) < 2) {
+                if (!is_array($dimensions) || count($dimensions) < 2) {
                     continue;
                 }
 
@@ -60,7 +61,7 @@
                     'url' => Storage::url($webpPath),
                     'width' => $resizedImage->width(),
                     'height' => $resizedImage->height(),
-                    'size' => $fileSize !== false ? $fileSize : 0,
+                    'size' => false !== $fileSize ? $fileSize : 0,
                 ];
             }
 
@@ -86,13 +87,13 @@
                 $urlStr = is_string($url) ? $url : '';
                 $widthStr = is_numeric($width) ? (string) $width : '';
 
-                return $urlStr . ' ' . $widthStr . 'w';
+                return $urlStr.' '.$widthStr.'w';
             })
             ->implode(', ');
     }
 
     /**
-     * @param  array<string, mixed>  $attributes
+     * @param array<string, mixed> $attributes
      */
     public function lazyLoadImage(string $originalPath, string $alt = '', array $attributes = []): string
     {
@@ -114,16 +115,16 @@
 
         $attributesString = collect($attributes)
             ->map(static function (mixed $value, mixed $key): string {
-                if (! is_string($key)) {
+                if (!is_string($key)) {
                     return '';
                 }
                 $valueStr = (string) $value;
 
-                return $key . '="' . htmlspecialchars($valueStr) . '"';
+                return $key.'="'.htmlspecialchars($valueStr).'"';
             })
             ->implode(' ');
 
-        return '<img ' . $attributesString . ' src="' . $placeholder . '">';
+        return '<img '.$attributesString.' src="'.$placeholder.'">';
     }
 
     public function compressImage(string $path, int $quality = 85): bool
@@ -151,7 +152,7 @@
         $filename = $pathInfo['filename'] ?? '';
         $extension = $pathInfo['extension'] ?? 'jpg';
 
-        return $dirname . '/' . $filename . '_' . $size . '.' . $extension;
+        return $dirname.'/'.$filename.'_'.$size.'.'.$extension;
     }
 
     private function generatePlaceholder(string $originalPath): string

      ----------- end diff -----------

 184) app/Services/LoginAttemptService.php
      ---------- begin diff ----------
--- /var/www/html/app/Services/LoginAttemptService.php
+++ /var/www/html/app/Services/LoginAttemptService.php
@@ -4,10 +4,7 @@
 
 namespace App\Services;
 
-use Carbon\Carbon;
-use Illuminate\Http\Request;
 use Illuminate\Support\Facades\Cache;
-use Illuminate\Support\Facades\Log;
 
 final class LoginAttemptService
 {
@@ -66,7 +63,7 @@
         $key = self::IP_PREFIX.hash('sha256', $ip);
         $attempts = Cache::get($key, []);
 
-        if (! is_array($attempts)) {
+        if (!is_array($attempts)) {
             $attempts = [];
         }
 
@@ -89,7 +86,7 @@
         $key = self::CACHE_PREFIX.hash('sha256', $email);
         $attempts = Cache::get($key, []);
 
-        if (! is_array($attempts)) {
+        if (!is_array($attempts)) {
             $attempts = [];
         }
 

      ----------- end diff -----------

 185) app/Services/NotificationService.php
      ---------- begin diff ----------
--- /var/www/html/app/Services/NotificationService.php
+++ /var/www/html/app/Services/NotificationService.php
@@ -16,7 +16,9 @@
 
 final class NotificationService
 {
-    public function __construct(private readonly AuditService $auditService) {}
+    public function __construct(private readonly AuditService $auditService)
+    {
+    }
 
     /**
      * Send price drop notification.
@@ -33,7 +35,7 @@
             foreach ($priceAlerts as $alert) {
                 $user = $alert->user;
 
-                if ($user instanceof \App\Models\User && $user->email) {
+                if ($user instanceof User && $user->email) {
                     // Send email notification
                     $user->notify(new PriceDropNotification($product, $oldPrice, $newPrice, $alert->target_price));
 
@@ -122,12 +124,12 @@
     /**
      * Send system notification to users.
      *
-     * @param  array<int>  $userIds
+     * @param array<int> $userIds
      */
     public function sendSystemNotification(string $title, string $message, array $userIds = []): void
     {
         try {
-            $users = $userIds === [] ? User::all() : User::whereIn('id', $userIds)->get();
+            $users = [] === $userIds ? User::all() : User::whereIn('id', $userIds)->get();
 
             foreach ($users as $user) {
                 $user->notify(new SystemNotification($title, $message));
@@ -175,7 +177,7 @@
         try {
             $user = $alert->user;
 
-            if ($user instanceof \App\Models\User && $user->email) {
+            if ($user instanceof User && $user->email) {
                 // $user->notify(new SystemNotification(
                 //     'Price Alert Created',
                 //     "We'll notify you when the price of {$alert->product?->name} drops to {$alert->target_price} or below."
@@ -184,7 +186,7 @@
 
             Log::info('Price alert confirmation sent', [
                 'alert_id' => $alert->id,
-                'user_id' => $user instanceof \App\Models\User ? $user->id : null,
+                'user_id' => $user instanceof User ? $user->id : null,
             ]);
         } catch (\Exception $e) {
             Log::error('Failed to send price alert confirmation', [
@@ -213,7 +215,7 @@
             // Get price changes for the day
             foreach ($alerts as $alert) {
                 $product = $alert->product;
-                $todayOffers = $product instanceof \App\Models\Product ? $product->priceOffers()
+                $todayOffers = $product instanceof Product ? $product->priceOffers()
                     ->whereDate('created_at', today())
                     ->orderBy('price')
                     ->first() : null;
@@ -243,7 +245,7 @@
         try {
             $notification = $user->notifications()->find($notificationId);
 
-            if ($notification && ! $notification->read_at) {
+            if ($notification && !$notification->read_at) {
                 $notification->markAsRead();
 
                 Log::info('Notification marked as read', [

      ----------- end diff -----------

 186) app/Services/OptimizedQueryService.php
      ---------- begin diff ----------
--- /var/www/html/app/Services/OptimizedQueryService.php
+++ /var/www/html/app/Services/OptimizedQueryService.php
@@ -11,7 +11,7 @@
 use Illuminate\Support\Facades\DB;
 
 /**
- * Optimized Query Service
+ * Optimized Query Service.
  *
  * This service provides optimized database queries to improve application performance.
  * It implements various optimization techniques including:
@@ -23,14 +23,15 @@
 final class OptimizedQueryService
 {
     /**
-     * Get products with optimized eager loading and caching
+     * Get products with optimized eager loading and caching.
      *
      * This method retrieves products with their related data using optimized queries.
      * It prevents N+1 queries by eager loading relationships and only selects
      * necessary fields to reduce memory usage.
      *
-     * @param  array<string, mixed>  $filters  Optional filters: category_id, brand_id, price_min, price_max, search
-     * @param  int  $perPage  Number of products per page (default: 20)
+     * @param array<string, mixed> $filters Optional filters: category_id, brand_id, price_min, price_max, search
+     * @param int                  $perPage Number of products per page (default: 20)
+     *
      * @return LengthAwarePaginator<int, Product> Paginated collection of products with relationships
      */
     public function getProductsWithDetails(array $filters = [], int $perPage = 20): LengthAwarePaginator
@@ -68,23 +69,23 @@
         }
 
         // Apply filters with optimized conditions
-        if (! empty($filters['category_id']) && method_exists($query, 'where')) {
+        if (!empty($filters['category_id']) && method_exists($query, 'where')) {
             $query->where('category_id', $filters['category_id']);
         }
 
-        if (! empty($filters['brand_id']) && method_exists($query, 'where')) {
+        if (!empty($filters['brand_id']) && method_exists($query, 'where')) {
             $query->where('brand_id', $filters['brand_id']);
         }
 
-        if (! empty($filters['price_min']) && method_exists($query, 'where')) {
+        if (!empty($filters['price_min']) && method_exists($query, 'where')) {
             $query->where('price', '>=', $filters['price_min']);
         }
 
-        if (! empty($filters['price_max']) && method_exists($query, 'where')) {
+        if (!empty($filters['price_max']) && method_exists($query, 'where')) {
             $query->where('price', '<=', $filters['price_max']);
         }
 
-        if (! empty($filters['search']) && method_exists($query, 'where')) {
+        if (!empty($filters['search']) && method_exists($query, 'where')) {
             $searchTerm = is_string($filters['search']) ? $filters['search'] : '';
             $query->where('name', 'LIKE', '%'.$searchTerm.'%');
         }
@@ -98,12 +99,13 @@
     }
 
     /**
-     * Get product details with all related data optimized
+     * Get product details with all related data optimized.
      *
      * Retrieves complete product information including reviews, offers, and related data.
      * Uses selective eager loading and limits reviews to prevent performance issues.
      *
-     * @param  int  $productId  The product ID to retrieve
+     * @param int $productId The product ID to retrieve
+     *
      * @return Product|null The product with all related data or null if not found
      */
     public function getProductDetails(int $productId): ?Product
@@ -141,7 +143,7 @@
     }
 
     /**
-     * Get user orders with optimized loading
+     * Get user orders with optimized loading.
      *
      * @return Collection<int, Order>
      */
@@ -167,15 +169,15 @@
             ])
             ->where('user_id', $userId);
 
-        if (! empty($filters['status'])) {
+        if (!empty($filters['status'])) {
             $query->where('status', $filters['status']);
         }
 
-        if (! empty($filters['date_from'])) {
+        if (!empty($filters['date_from'])) {
             $query->where('created_at', '>=', $filters['date_from']);
         }
 
-        if (! empty($filters['date_to'])) {
+        if (!empty($filters['date_to'])) {
             $query->where('created_at', '<=', $filters['date_to']);
         }
 
@@ -183,7 +185,7 @@
     }
 
     /**
-     * Get dashboard analytics with optimized queries
+     * Get dashboard analytics with optimized queries.
      *
      * Retrieves key performance metrics using raw SQL for better performance.
      * This avoids multiple separate queries and provides real-time analytics data.
@@ -203,7 +205,7 @@
 
         $analytics = $analyticsResult[0] ?? null;
 
-        if (! is_object($analytics)) {
+        if (!is_object($analytics)) {
             return [
                 'total_users' => 0,
                 'total_products' => 0,
@@ -221,13 +223,14 @@
     }
 
     /**
-     * Get popular products with optimized aggregation
+     * Get popular products with optimized aggregation.
      *
      * Retrieves products sorted by review count and average rating.
      * Uses a single query with JOIN to combine product and review data,
      * avoiding multiple separate queries for better performance.
      *
-     * @param  int  $limit  Maximum number of products to return (default: 10)
+     * @param int $limit Maximum number of products to return (default: 10)
+     *
      * @return Collection<int, Product> Collection of popular products with rating data
      */
     public function getPopularProducts(int $limit = 10): Collection
@@ -258,7 +261,7 @@
     }
 
     /**
-     * Bulk update product statuses with optimized query
+     * Bulk update product statuses with optimized query.
      */
     public function bulkUpdateProductStatuses(array $productIds, bool $isActive): int
     {
@@ -270,7 +273,7 @@
     }
 
     /**
-     * Get products by category with pagination and caching
+     * Get products by category with pagination and caching.
      *
      * @return LengthAwarePaginator<int, Product>
      */
@@ -292,7 +295,7 @@
     }
 
     /**
-     * Search products with optimized full-text search
+     * Search products with optimized full-text search.
      */
     public function searchProducts(string $query, int $perPage = 20): LengthAwarePaginator
     {

      ----------- end diff -----------

 187) app/Services/OrderService.php
      ---------- begin diff ----------
--- /var/www/html/app/Services/OrderService.php
+++ /var/www/html/app/Services/OrderService.php
@@ -16,12 +16,12 @@
 final class OrderService
 {
     /**
-     * @param  array<int, array<string, mixed>>  $cartItems
-     * @param  array<string, mixed>  $addresses
+     * @param array<int, array<string, mixed>> $cartItems
+     * @param array<string, mixed>             $addresses
      */
     /**
-     * @param  array<int, array<string, mixed>>  $cartItems
-     * @param  array<string, mixed>  $addresses
+     * @param array<int, array<string, mixed>> $cartItems
+     * @param array<string, mixed>             $addresses
      */
     public function createOrder(User $user, array $cartItems, array $addresses): Order
     {
@@ -44,13 +44,13 @@
 
             foreach ($cartItems as $item) {
                 $productId = $item['product_id'] ?? null;
-                if (! is_numeric($productId)) {
+                if (!is_numeric($productId)) {
                     continue;
                 }
 
                 $product = Product::findOrFail((int) $productId);
                 $quantity = $item['quantity'] ?? 1;
-                if (! is_numeric($quantity)) {
+                if (!is_numeric($quantity)) {
                     $quantity = 1;
                 }
 
@@ -81,15 +81,15 @@
         $oldStatus = $order->status;
 
         // Check if transition is allowed
-        if (! $oldStatus->canTransitionTo($newStatus)) {
+        if (!$oldStatus->canTransitionTo($newStatus)) {
             return false;
         }
 
         $updateData = ['status' => $newStatus];
 
-        if ($newStatus === OrderStatus::SHIPPED) {
+        if (OrderStatus::SHIPPED === $newStatus) {
             $updateData['shipped_at'] = now();
-        } elseif ($newStatus === OrderStatus::DELIVERED) {
+        } elseif (OrderStatus::DELIVERED === $newStatus) {
             $updateData['delivered_at'] = now();
         }
 
@@ -105,13 +105,13 @@
 
     public function cancelOrder(Order $order, ?string $reason = null): bool
     {
-        if (! in_array($order->status, ['pending', 'processing'])) {
+        if (!in_array($order->status, ['pending', 'processing'])) {
             return false;
         }
 
         $order->update([
             'status' => 'cancelled',
-            'notes' => $order->notes . "\nCancelled: " . ($reason ?? 'No reason provided'),
+            'notes' => $order->notes."\nCancelled: ".($reason ?? 'No reason provided'),
         ]);
 
         // Restore product stock
@@ -124,7 +124,7 @@
     }
 
     /**
-     * @return \Illuminate\Database\Eloquent\Collection<int, \App\Models\Order>
+     * @return \Illuminate\Database\Eloquent\Collection<int, Order>
      */
     public function getOrderHistory(User $user, int $limit = 10): \Illuminate\Database\Eloquent\Collection
     {
@@ -138,7 +138,7 @@
     private function generateOrderNumber(): string
     {
         do {
-            $orderNumber = 'ORD-' . date('Y') . '-' . strtoupper(Str::random(8));
+            $orderNumber = 'ORD-'.date('Y').'-'.strtoupper(Str::random(8));
         } while (Order::where('order_number', $orderNumber)->exists());
 
         return $orderNumber;
@@ -145,7 +145,7 @@
     }
 
     /**
-     * @param  array<int, array{product_id: int, quantity: int}>  $cartItems
+     * @param array<int, array{product_id: int, quantity: int}> $cartItems
      */
     private function calculateSubtotal(array $cartItems): float
     {
@@ -157,7 +157,7 @@
     }
 
     /**
-     * @param  array<int, array{product_id: int, quantity: int}>  $cartItems
+     * @param array<int, array{product_id: int, quantity: int}> $cartItems
      */
     private function calculateTax(array $cartItems): float
     {
@@ -167,7 +167,7 @@
     }
 
     /**
-     * @param  array<int, array{product_id: int, quantity: int}>  $cartItems
+     * @param array<int, array{product_id: int, quantity: int}> $cartItems
      */
     private function calculateShipping(array $cartItems): float
     {

      ----------- end diff -----------

 188) app/Services/PasswordHistoryService.php
      ---------- begin diff ----------
--- /var/www/html/app/Services/PasswordHistoryService.php
+++ /var/www/html/app/Services/PasswordHistoryService.php
@@ -4,7 +4,6 @@
 
 namespace App\Services;
 
-use Exception;
 use Illuminate\Support\Facades\Hash;
 use Illuminate\Support\Facades\Log;
 
@@ -30,7 +29,7 @@
             }
 
             return false;
-        } catch (Exception $e) {
+        } catch (\Exception $e) {
             Log::error('Password history check failed: '.$e->getMessage());
 
             return false;
@@ -57,7 +56,7 @@
             cache()->put("password_history_{$userId}", $history, 86400 * 30); // 30 يوم
 
             Log::info("Password saved to history for user {$userId}");
-        } catch (Exception $e) {
+        } catch (\Exception $e) {
             Log::error('Failed to save password to history: '.$e->getMessage());
         }
     }

      ----------- end diff -----------

 189) app/Services/PasswordPolicyService.php
      ---------- begin diff ----------
--- /var/www/html/app/Services/PasswordPolicyService.php
+++ /var/www/html/app/Services/PasswordPolicyService.php
@@ -4,9 +4,6 @@
 
 namespace App\Services;
 
-use Exception;
-use Illuminate\Support\Facades\Log;
-
 final class PasswordPolicyService
 {
     /**
@@ -40,22 +37,22 @@
         }
 
         // Check for uppercase letters
-        if (($this->config['require_uppercase'] ?? false) && ! preg_match('/[A-Z]/', $password)) {
+        if (($this->config['require_uppercase'] ?? false) && !preg_match('/[A-Z]/', $password)) {
             $errors[] = 'Password must contain at least one uppercase letter';
         }
 
         // Check for lowercase letters
-        if (($this->config['require_lowercase'] ?? false) && ! preg_match('/[a-z]/', $password)) {
+        if (($this->config['require_lowercase'] ?? false) && !preg_match('/[a-z]/', $password)) {
             $errors[] = 'Password must contain at least one lowercase letter';
         }
 
         // Check for numbers
-        if (($this->config['require_numbers'] ?? false) && ! preg_match('/\d/', $password)) {
+        if (($this->config['require_numbers'] ?? false) && !preg_match('/\d/', $password)) {
             $errors[] = 'Password must contain at least one number';
         }
 
         // Check for symbols
-        if (($this->config['require_symbols'] ?? false) && ! preg_match('/[^A-Za-z0-9]/', $password)) {
+        if (($this->config['require_symbols'] ?? false) && !preg_match('/[^A-Za-z0-9]/', $password)) {
             $errors[] = 'Password must contain at least one special character';
         }
 
@@ -64,7 +61,7 @@
         if (is_array($forbiddenPasswords)) {
             $lowercasePassword = strtolower($password);
             foreach ($forbiddenPasswords as $forbidden) {
-                if (is_string($forbidden) && stripos($lowercasePassword, strtolower($forbidden)) !== false) {
+                if (is_string($forbidden) && false !== stripos($lowercasePassword, strtolower($forbidden))) {
                     $errors[] = 'Password is too common and not allowed';
                     break;
                 }
@@ -81,7 +78,7 @@
         $errors = array_merge($errors, $patternErrors);
 
         return [
-            'valid' => $errors === [],
+            'valid' => [] === $errors,
             'errors' => $errors,
             'strength' => $this->calculatePasswordStrength($password),
         ];
@@ -122,7 +119,7 @@
         ];
 
         foreach ($keyboardPatterns as $pattern) {
-            if (stripos($password, $pattern) !== false) {
+            if (false !== stripos($password, $pattern)) {
                 $errors[] = 'Password contains keyboard patterns';
                 break;
             }
@@ -137,7 +134,7 @@
 
         foreach ($commonSubstitutions as $substitutions) {
             foreach ($substitutions as $substitution) {
-                if (stripos($password, $substitution) !== false) {
+                if (false !== stripos($password, $substitution)) {
                     $errors[] = 'Password contains common character substitutions';
                     break 2;
                 }
@@ -157,33 +154,33 @@
 
         // Length score
         if ($length >= 8) {
-            $score += 1;
+            ++$score;
         }
         if ($length >= 12) {
-            $score += 1;
+            ++$score;
         }
         if ($length >= 16) {
-            $score += 1;
+            ++$score;
         }
 
         // Character variety score
         if (preg_match('/[a-z]/', $password)) {
-            $score += 1;
+            ++$score;
         }
         if (preg_match('/[A-Z]/', $password)) {
-            $score += 1;
+            ++$score;
         }
         if (preg_match('/d/', $password)) {
-            $score += 1;
+            ++$score;
         }
         if (preg_match('/[^A-Za-z0-9]/', $password)) {
-            $score += 1;
+            ++$score;
         }
 
         // Complexity score
         $uniqueChars = count(array_unique(str_split($password)));
         if ($uniqueChars / $length > 0.7) {
-            $score += 1;
+            ++$score;
         }
 
         // Determine strength level

      ----------- end diff -----------

 190) app/Services/PasswordResetService.php
      ---------- begin diff ----------
--- /var/www/html/app/Services/PasswordResetService.php
+++ /var/www/html/app/Services/PasswordResetService.php
@@ -27,7 +27,7 @@
     {
         $user = User::where('email', $email)->first();
 
-        if (! $user) {
+        if (!$user) {
             Log::warning('Password reset requested for non-existent email', [
                 'email' => $email,
                 'ip' => $ip,
@@ -85,7 +85,7 @@
     public function resetPassword(string $email, string $token, string $newPassword, ?string $ip = null): bool
     {
         // Validate token
-        if (! $this->validateResetToken($email, $token)) {
+        if (!$this->validateResetToken($email, $token)) {
             Log::warning('Invalid password reset token', [
                 'email' => $email,
                 'token' => $token,
@@ -97,7 +97,7 @@
 
         $user = User::where('email', $email)->first();
 
-        if (! $user) {
+        if (!$user) {
             return false;
         }
 
@@ -138,7 +138,7 @@
         $key = self::CACHE_PREFIX.hash('sha256', $email);
         $data = Cache::get($key);
 
-        if (! $data || ! is_array($data)) {
+        if (!$data || !is_array($data)) {
             return null;
         }
 
@@ -209,7 +209,7 @@
         $key = self::CACHE_PREFIX.hash('sha256', $email);
         $data = Cache::get($key);
 
-        if (! $data || ! is_array($data)) {
+        if (!$data || !is_array($data)) {
             return false;
         }
 

      ----------- end diff -----------

 191) app/Services/PaymentService.php
      ---------- begin diff ----------
--- /var/www/html/app/Services/PaymentService.php
+++ /var/www/html/app/Services/PaymentService.php
@@ -18,7 +18,7 @@
     private PayPal $paypal;
 
     /**
-     * @param  array<string, mixed>  $paymentData
+     * @param array<string, mixed> $paymentData
      */
     public function processPayment(Order $order, string $paymentMethodId, array $paymentData): Payment
     {
@@ -51,7 +51,7 @@
                 'processed_at' => now(),
             ]);
 
-            if ($result['status'] === 'completed') {
+            if ('completed' === $result['status']) {
                 $order->update(['status' => 'processing']);
             }
         } catch (\Exception $e) {
@@ -74,7 +74,7 @@
         $refundAmount = $amount ?? $payment->amount;
 
         try {
-            if (! $payment->paymentMethod) {
+            if (!$payment->paymentMethod) {
                 throw new \Exception('Payment method not found for this payment.');
             }
 
@@ -107,7 +107,8 @@
     }
 
     /**
-     * @param  array<string, mixed>  $data
+     * @param array<string, mixed> $data
+     *
      * @return array<string, mixed>
      */
     private function processStripePayment(Payment $payment, array $data): array
@@ -122,7 +123,7 @@
         ]);
 
         return [
-            'status' => $intent->status === 'succeeded' ? 'completed' : 'failed',
+            'status' => 'succeeded' === $intent->status ? 'completed' : 'failed',
             'response' => $intent->toArray(),
         ];
     }
@@ -147,7 +148,7 @@
         $responseStatus = is_array($response) ? ($response['status'] ?? '') : '';
 
         return [
-            'status' => $responseStatus === 'COMPLETED' ? 'completed' : 'failed',
+            'status' => 'COMPLETED' === $responseStatus ? 'completed' : 'failed',
             'response' => is_array($response) ? $response : [],
         ];
     }
@@ -154,6 +155,6 @@
 
     private function generateTransactionId(): string
     {
-        return 'TXN_' . time() . '_' . strtoupper(substr(md5(uniqid()), 0, 8));
+        return 'TXN_'.time().'_'.strtoupper(substr(md5(uniqid()), 0, 8));
     }
 }

      ----------- end diff -----------

 192) app/Services/PerformanceAnalysisService.php
      ---------- begin diff ----------
--- /var/www/html/app/Services/PerformanceAnalysisService.php
+++ /var/www/html/app/Services/PerformanceAnalysisService.php
@@ -36,11 +36,11 @@
     /**
      * Check cache configuration.
      *
-     * @param  array<string>  $issues
+     * @param array<string> $issues
      */
     private function checkCacheConfiguration(array &$issues): int
     {
-        if (config('cache.default') !== 'file') {
+        if ('file' !== config('cache.default')) {
             return 25;
         }
 
@@ -52,17 +52,17 @@
     /**
      * Check database indexes.
      *
-     * @param  array<string>  $issues
+     * @param array<string> $issues
      */
     private function checkDatabaseIndexes(array &$issues): int
     {
         $migrationFiles = glob(database_path('migrations/*.php'));
-        if ($migrationFiles === false) {
+        if (false === $migrationFiles) {
             $migrationFiles = [];
         }
         foreach ($migrationFiles as $file) {
             $content = file_get_contents($file);
-            if ($content !== false && (str_contains($content, '->index(') || str_contains($content, '->unique('))) {
+            if (false !== $content && (str_contains($content, '->index(') || str_contains($content, '->unique('))) {
                 return 25;
             }
         }
@@ -75,7 +75,7 @@
     /**
      * Check asset compilation.
      *
-     * @param  array<string>  $issues
+     * @param array<string> $issues
      */
     private function checkAssetCompilation(array &$issues): int
     {
@@ -91,11 +91,11 @@
     /**
      * Check queue configuration.
      *
-     * @param  array<string>  $issues
+     * @param array<string> $issues
      */
     private function checkQueueConfiguration(array &$issues): int
     {
-        if (config('queue.default') !== 'sync') {
+        if ('sync' !== config('queue.default')) {
             return 25;
         }
 

      ----------- end diff -----------

 193) app/Services/PerformanceMonitoringService.php
      ---------- begin diff ----------
--- /var/www/html/app/Services/PerformanceMonitoringService.php
+++ /var/www/html/app/Services/PerformanceMonitoringService.php
@@ -43,7 +43,7 @@
      */
     public function endOperation(string $operation): array
     {
-        if (! isset($this->metrics[$operation])) {
+        if (!isset($this->metrics[$operation])) {
             return [];
         }
 
@@ -53,7 +53,7 @@
         $operationData = $this->metrics[$operation];
 
         // Ensure operationData has the expected structure
-        if (! is_array($operationData) || ! isset($operationData['start_time'], $operationData['start_memory'], $operationData['queries'])) {
+        if (!is_array($operationData) || !isset($operationData['start_time'], $operationData['start_memory'], $operationData['queries'])) {
             return [];
         }
 
@@ -212,7 +212,7 @@
     /**
      * Check performance thresholds.
      *
-     * @param  array<string, mixed>  $metrics
+     * @param array<string, mixed> $metrics
      */
     private function checkThresholds(array $metrics): void
     {
@@ -220,8 +220,8 @@
 
         // Check execution time
         if (
-            is_array($config) && isset($config['execution_time_threshold']) && is_numeric($config['execution_time_threshold']) &&
-            is_numeric($metrics['execution_time']) && $metrics['execution_time'] > (float) $config['execution_time_threshold']
+            is_array($config) && isset($config['execution_time_threshold']) && is_numeric($config['execution_time_threshold'])
+            && is_numeric($metrics['execution_time']) && $metrics['execution_time'] > (float) $config['execution_time_threshold']
         ) {
             Log::warning('Slow operation detected', [
                 'operation' => $metrics['operation'] ?? 'unknown',
@@ -232,8 +232,8 @@
 
         // Check memory usage
         if (
-            is_array($config) && isset($config['memory_threshold']) && is_numeric($config['memory_threshold']) &&
-            is_numeric($metrics['memory_usage']) && $metrics['memory_usage'] > ((float) $config['memory_threshold'] * 1024 * 1024)
+            is_array($config) && isset($config['memory_threshold']) && is_numeric($config['memory_threshold'])
+            && is_numeric($metrics['memory_usage']) && $metrics['memory_usage'] > ((float) $config['memory_threshold'] * 1024 * 1024)
         ) {
             Log::warning('High memory usage detected', [
                 'operation' => $metrics['operation'] ?? 'unknown',
@@ -244,8 +244,8 @@
 
         // Check query count
         if (
-            is_array($config) && isset($config['query_count_threshold']) && is_numeric($config['query_count_threshold']) &&
-            is_numeric($metrics['queries_count']) && $metrics['queries_count'] > (int) $config['query_count_threshold']
+            is_array($config) && isset($config['query_count_threshold']) && is_numeric($config['query_count_threshold'])
+            && is_numeric($metrics['queries_count']) && $metrics['queries_count'] > (int) $config['query_count_threshold']
         ) {
             Log::warning('High query count detected', [
                 'operation' => $metrics['operation'] ?? 'unknown',

      ----------- end diff -----------

 194) app/Services/PointsService.php
      ---------- begin diff ----------
--- /var/www/html/app/Services/PointsService.php
+++ /var/www/html/app/Services/PointsService.php
@@ -66,7 +66,7 @@
         $points = (int) ($order->total_amount * 0.01); // 1 point per dollar
 
         $user = $order->user;
-        if (! $user) {
+        if (!$user) {
             return;
         }
 
@@ -136,7 +136,7 @@
 
     private function calculateExpirationDate(string $type): ?\DateTime
     {
-        if ($type === 'earned') {
+        if ('earned' === $type) {
             return now()->addYear(); // Points expire after 1 year
         }
 

      ----------- end diff -----------

 195) app/Services/PriceSearchService.php
      ---------- begin diff ----------
--- /var/www/html/app/Services/PriceSearchService.php
+++ /var/www/html/app/Services/PriceSearchService.php
@@ -4,11 +4,11 @@
 
 namespace App\Services;
 
-use App\Models\Product;
 use Illuminate\Contracts\Validation\Factory as ValidationFactory;
-use Illuminate\Http\Request;
 
 final class PriceSearchService
 {
-    public function __construct(private readonly ValidationFactory $validationFactory) {}
+    public function __construct(private readonly ValidationFactory $validationFactory)
+    {
+    }
 }

      ----------- end diff -----------

 196) app/Services/ProcessService.php
      ---------- begin diff ----------
--- /var/www/html/app/Services/ProcessService.php
+++ /var/www/html/app/Services/ProcessService.php
@@ -34,7 +34,7 @@
     /**
      * Run a process command.
      *
-     * @param  array<string>|string  $command
+     * @param array<string>|string $command
      */
     public function run(string|array $command): ProcessResult
     {
@@ -52,9 +52,9 @@
         if ($isGitCommand) {
             // For git commands, check if the stderr contains success messages
             $errorOutput = $result->errorOutput();
-            $isSuccessMessage = str_contains($errorOutput, 'Switched to a new branch') ||
-                str_contains($errorOutput, 'Branch created') ||
-                str_contains($errorOutput, 'successfully');
+            $isSuccessMessage = str_contains($errorOutput, 'Switched to a new branch')
+                || str_contains($errorOutput, 'Branch created')
+                || str_contains($errorOutput, 'successfully');
 
             if ($isSuccessMessage) {
                 // Treat stderr as output for successful git commands, and force success
@@ -81,7 +81,7 @@
     /**
      * Validate data.
      *
-     * @param  array<string, mixed>  $data
+     * @param array<string, mixed> $data
      */
     public function validate(array $data): bool
     {
@@ -91,11 +91,11 @@
             $this->errors['name'] = 'Name is required';
         }
 
-        if (isset($data['email']) && ! filter_var($data['email'], FILTER_VALIDATE_EMAIL)) {
+        if (isset($data['email']) && !filter_var($data['email'], FILTER_VALIDATE_EMAIL)) {
             $this->errors['email'] = 'Email is invalid';
         }
 
-        return $this->errors === [];
+        return [] === $this->errors;
     }
 
     /**
@@ -111,7 +111,8 @@
     /**
      * Clean data.
      *
-     * @param  array<string, mixed>  $data
+     * @param array<string, mixed> $data
+     *
      * @return array<string, mixed>
      */
     public function clean(array $data): array
@@ -122,7 +123,7 @@
             if (is_string($value)) {
                 $cleaned[$key] = trim($value);
 
-                if ($key === 'email') {
+                if ('email' === $key) {
                     $cleaned[$key] = strtolower($cleaned[$key]);
                 }
             } else {
@@ -136,7 +137,8 @@
     /**
      * Transform data.
      *
-     * @param  array<string, mixed>  $data
+     * @param array<string, mixed> $data
+     *
      * @return array<string, mixed>
      */
     public function transform(array $data): array

      ----------- end diff -----------

 197) app/Services/ProductService.php
      ---------- begin diff ----------
--- /var/www/html/app/Services/ProductService.php
+++ /var/www/html/app/Services/ProductService.php
@@ -8,14 +8,14 @@
 use App\Repositories\ProductRepository;
 use Illuminate\Database\Eloquent\Collection;
 use Illuminate\Pagination\LengthAwarePaginator;
-use Illuminate\Support\Facades\Log;
 
 final class ProductService
 {
     public function __construct(
         private readonly ProductRepository $repository,
-        private readonly CacheService $cache
-    ) {}
+        private readonly CacheService $cache,
+    ) {
+    }
 
     /**
      * Get paginated active products.
@@ -27,16 +27,16 @@
         $page = request()->get('page', 1);
         $pageNumber = is_numeric($page) ? (int) $page : 1;
 
-        /** @var \Illuminate\Pagination\LengthAwarePaginator<int, Product>|null $result */
+        /** @var LengthAwarePaginator<int, Product>|null $result */
         $result = $this->cache->remember(
             'products.page.'.$pageNumber,
             3600,
-            fn (): \Illuminate\Pagination\LengthAwarePaginator => $this->repository->getPaginatedActive($perPage),
+            fn (): LengthAwarePaginator => $this->repository->getPaginatedActive($perPage),
             ['products']
         );
 
         // Return empty paginator if result is null
-        if ($result === null) {
+        if (null === $result) {
             return new LengthAwarePaginator(
                 collect([]),
                 0,
@@ -63,7 +63,7 @@
             ['products']
         );
 
-        return $result instanceof \App\Models\Product ? $result : null;
+        return $result instanceof Product ? $result : null;
     }
 
     /**
@@ -76,17 +76,18 @@
         $result = $this->cache->remember(
             'product.related.'.$product->id,
             3600,
-            fn (): \Illuminate\Database\Eloquent\Collection => $this->repository->getRelated($product, $limit),
+            fn (): Collection => $this->repository->getRelated($product, $limit),
             ['products']
         );
 
-        return $result instanceof \Illuminate\Database\Eloquent\Collection ? $result : new Collection;
+        return $result instanceof Collection ? $result : new Collection();
     }
 
     /**
      * Search products.
      *
-     * @param  array<string, mixed>  $filters
+     * @param array<string, mixed> $filters
+     *
      * @return LengthAwarePaginator<int, Product>
      */
     public function searchProducts(string $query, array $filters = [], int $perPage = 15): LengthAwarePaginator

      ----------- end diff -----------

 198) app/Services/QualityAnalysisService.php
      ---------- begin diff ----------
--- /var/www/html/app/Services/QualityAnalysisService.php
+++ /var/www/html/app/Services/QualityAnalysisService.php
@@ -36,11 +36,11 @@
     /**
      * Run PHPMD analysis.
      *
-     * @param  array<string>  $issues
+     * @param array<string> $issues
      */
     private function runPhpmdAnalysis(array &$issues): int
     {
-        if (! $this->commandExists('vendor/bin/phpmd')) {
+        if (!$this->commandExists('vendor/bin/phpmd')) {
             return 0;
         }
 
@@ -50,7 +50,7 @@
         $output = $process->getOutput();
         $errorCount = substr_count(trim($output), "\n");
 
-        if ($errorCount === 0) {
+        if (0 === $errorCount) {
             return 50;
         }
 
@@ -62,11 +62,11 @@
     /**
      * Run PHPCPD analysis.
      *
-     * @param  array<string>  $issues
+     * @param array<string> $issues
      */
     private function runPhpcpdAnalysis(array &$issues): int
     {
-        if (! $this->commandExists('vendor/bin/phpcpd')) {
+        if (!$this->commandExists('vendor/bin/phpcpd')) {
             return 0;
         }
 

      ----------- end diff -----------

 199) app/Services/RecommendationService.php
      ---------- begin diff ----------
--- /var/www/html/app/Services/RecommendationService.php
+++ /var/www/html/app/Services/RecommendationService.php
@@ -19,7 +19,7 @@
     {
         $cacheKey = "recommendations_user_{$user->id}";
 
-        /** @var array<int, mixed> */
+        /* @var array<int, mixed> */
         return Cache::remember($cacheKey, 3600, function () use ($user, $limit): array {
             $recommendations = collect();
 
@@ -41,7 +41,7 @@
             return $recommendations
                 ->unique('id')
                 ->reject(static function (mixed $product) use ($purchasedProductIds): bool {
-                    if (! is_object($product) || ! property_exists($product, 'id')) {
+                    if (!is_object($product) || !property_exists($product, 'id')) {
                         return true;
                     }
 
@@ -54,7 +54,7 @@
     }
 
     /**
-     * @return array<int, \App\Models\Product>
+     * @return array<int, Product>
      */
     public function getSimilarProducts(Product $product, int $limit = 5): array
     {
@@ -140,7 +140,7 @@
         $query = Product::query();
 
         // Filter by preferred categories
-        if (! empty($userPreferences['categories'])) {
+        if (!empty($userPreferences['categories'])) {
             $categories = $userPreferences['categories'];
             if (is_array($categories)) {
                 $query->whereIn('category_id', $categories);
@@ -150,13 +150,13 @@
         // Filter by price range
         if (isset($userPreferences['price_range'])) {
             $priceRange = $userPreferences['price_range'];
-            if (is_array($priceRange) && count($priceRange) === 2) {
+            if (is_array($priceRange) && 2 === count($priceRange)) {
                 $query->whereBetween('price', $priceRange);
             }
         }
 
         // Filter by preferred brands
-        if (! empty($userPreferences['brands'])) {
+        if (!empty($userPreferences['brands'])) {
             $brands = $userPreferences['brands'];
             if (is_array($brands)) {
                 $query->whereIn('brand_id', $brands);

      ----------- end diff -----------

 200) app/Services/ReportService.php
      ---------- begin diff ----------
--- /var/www/html/app/Services/ReportService.php
+++ /var/www/html/app/Services/ReportService.php
@@ -125,19 +125,20 @@
     }
 
     /**
-     * @param  array<float>  $prices
      * @return array<float>
      */
     /**
-     * @param  \Illuminate\Database\Eloquent\Collection<int, PriceOffer>  $offers
+     * @param \Illuminate\Database\Eloquent\Collection<int, PriceOffer> $offers
+     *
      * @return array<string, mixed>
      */
     /**
-     * @param  \Illuminate\Database\Eloquent\Collection<int, \App\Models\PriceOffer>  $offers
+     * @param \Illuminate\Database\Eloquent\Collection<int, PriceOffer> $offers
+     *
      * @return array<string, mixed>
      */
     private function calculatePriceStatistics(
-        \Illuminate\Database\Eloquent\Collection $offers
+        \Illuminate\Database\Eloquent\Collection $offers,
     ): array {
         /** @var array<float> $prices */
         $prices = $offers->pluck('price')->map(static function ($price): float {
@@ -155,7 +156,7 @@
 
         /** @var array<float> $priceChanges */
         $priceChanges = [];
-        for ($i = 1; $i < count($prices); $i++) {
+        for ($i = 1; $i < count($prices); ++$i) {
             $priceChanges[] = (float) $prices[$i] - (float) $prices[$i - 1];
         }
 
@@ -451,7 +452,7 @@
     {
         $priceChanges = DB::table('audit_logs')
             ->where('event', 'updated')
-            ->where('auditable_type', \App\Models\Product::class)
+            ->where('auditable_type', Product::class)
             ->whereBetween('created_at', [$startDate, $endDate])
             ->whereJsonContains('metadata->reason', 'Updated from lowest price offer')
             ->count();
@@ -477,8 +478,8 @@
             ->take(10)
             ->get();
 
-        /** @var array<int, array<string, mixed>> */
-        return $products->map(fn(mixed $product): array => $this->formatTopProduct($product))->toArray();
+        /* @var array<int, array<string, mixed>> */
+        return $products->map(fn (mixed $product): array => $this->formatTopProduct($product))->toArray();
     }
 
     /**
@@ -489,7 +490,7 @@
      */
     private function formatTopProduct(mixed $product): array
     {
-        if (! is_object($product)) {
+        if (!is_object($product)) {
             return [];
         }
 
@@ -510,7 +511,7 @@
      */
     private function getTopStores(Carbon $startDate, Carbon $endDate): array
     {
-        /** @var array<int, array<string, mixed>> */
+        /* @var array<int, array<string, mixed>> */
         return DB::table('price_offers')
             ->join('stores', 'price_offers.store_id', '=', 'stores.id')
             ->whereBetween('price_offers.created_at', [$startDate, $endDate])
@@ -536,7 +537,7 @@
             ->orderBy('date')
             ->get();
 
-        /** @var array<int, array<string, mixed>> */
+        /* @var array<int, array<string, mixed>> */
         return $trends->map(static function (mixed $trend): array {
             $avgPrice = property_exists($trend, 'average_price') && is_numeric($trend->average_price) ? (float) $trend->average_price : 0.0;
 
@@ -562,8 +563,8 @@
             ->take(10)
             ->get();
 
-        /** @var array<int, array<string, mixed>> */
-        return $users->map(fn(mixed $user): array => $this->formatMostActiveUser($user))->toArray();
+        /* @var array<int, array<string, mixed>> */
+        return $users->map(fn (mixed $user): array => $this->formatMostActiveUser($user))->toArray();
     }
 
     /**
@@ -571,7 +572,7 @@
      */
     private function formatMostActiveUser(mixed $user): array
     {
-        if (! is_object($user)) {
+        if (!is_object($user)) {
             return [];
         }
 
@@ -592,11 +593,11 @@
      */
     private function getMostViewedProducts(Carbon $startDate, Carbon $endDate): array
     {
-        /** @var array<int, array<string, mixed>> */
+        /* @var array<int, array<string, mixed>> */
         return DB::table('audit_logs')
             ->join('products', 'audit_logs.auditable_id', '=', 'products.id')
             ->where('audit_logs.event', 'viewed')
-            ->where('audit_logs.auditable_type', \App\Models\Product::class)
+            ->where('audit_logs.auditable_type', Product::class)
             ->whereBetween('audit_logs.created_at', [$startDate, $endDate])
             ->select('products.id', 'products.name', DB::raw('COUNT(*) as view_count'))
             ->groupBy('products.id', 'products.name')
@@ -616,7 +617,7 @@
     /**
      * Calculate price trend.
      *
-     * @param  array<float>  $prices
+     * @param array<float> $prices
      */
     private function calculatePriceTrend(array $prices): string
     {
@@ -644,7 +645,7 @@
      */
     private function calculateGrowthRate(int $previous, int $current): float
     {
-        if ($previous === 0) {
+        if (0 === $previous) {
             return $current > 0 ? 100 : 0;
         }
 

      ----------- end diff -----------

 201) app/Services/RouteConfigurationService.php
      ---------- begin diff ----------
--- /var/www/html/app/Services/RouteConfigurationService.php
+++ /var/www/html/app/Services/RouteConfigurationService.php
@@ -11,7 +11,9 @@
 
 final class RouteConfigurationService
 {
-    public function __construct(private readonly RateLimiter $rateLimiter, private readonly Router $router) {}
+    public function __construct(private readonly RateLimiter $rateLimiter, private readonly Router $router)
+    {
+    }
 
     public function configureRateLimiting(): void
     {

      ----------- end diff -----------

 202) app/Services/SecurityAnalysisService.php
      ---------- begin diff ----------
--- /var/www/html/app/Services/SecurityAnalysisService.php
+++ /var/www/html/app/Services/SecurityAnalysisService.php
@@ -39,7 +39,7 @@
     /**
      * Check for outdated dependencies.
      *
-     * @param  array<int|string, mixed>  $issues
+     * @param array<int|string, mixed> $issues
      */
     private function checkDependencies(array &$issues): int
     {
@@ -46,7 +46,7 @@
         $process = new Process(['composer', 'outdated', '--direct']);
         $process->run();
 
-        if (! $process->isSuccessful()) {
+        if (!$process->isSuccessful()) {
             return 0;
         }
 
@@ -63,7 +63,7 @@
     /**
      * Check if .env.example file exists.
      *
-     * @param  array<int|string, mixed>  $issues
+     * @param array<int|string, mixed> $issues
      */
     private function checkEnvironmentFile(array &$issues): int
     {
@@ -79,11 +79,11 @@
     /**
      * Check if debug mode is disabled.
      *
-     * @param  array<int|string, mixed>  $issues
+     * @param array<int|string, mixed> $issues
      */
     private function checkDebugMode(array &$issues): int
     {
-        if (config('app.debug') === false) {
+        if (false === config('app.debug')) {
             return 20;
         }
 
@@ -95,7 +95,7 @@
     /**
      * Check if HTTPS is configured.
      *
-     * @param  array<int|string, mixed>  $issues
+     * @param array<int|string, mixed> $issues
      */
     private function checkHttpsConfiguration(array &$issues): int
     {
@@ -112,7 +112,7 @@
     /**
      * Check if SecurityHeadersMiddleware is registered.
      *
-     * @param  array<int|string, mixed>  $issues
+     * @param array<int|string, mixed> $issues
      */
     private function checkSecurityMiddleware(array &$issues): int
     {
@@ -132,13 +132,13 @@
     {
         try {
             // Check if class exists first
-            if (! class_exists($middlewareClass)) {
+            if (!class_exists($middlewareClass)) {
                 return false;
             }
 
             // For Laravel 10+, we need to check the kernel file directly
             $kernelFile = app_path('Http/Kernel.php');
-            if (! file_exists($kernelFile)) {
+            if (!file_exists($kernelFile)) {
                 return false;
             }
 
@@ -145,13 +145,13 @@
             $kernelContent = file_get_contents($kernelFile);
             $shortClassName = class_basename($middlewareClass);
 
-            if ($kernelContent === false) {
+            if (false === $kernelContent) {
                 return false;
             }
 
             // Check if middleware is registered in any of the arrays
-            return str_contains($kernelContent, $middlewareClass) ||
-                str_contains($kernelContent, $shortClassName);
+            return str_contains($kernelContent, $middlewareClass)
+                || str_contains($kernelContent, $shortClassName);
         } catch (\Exception) {
             return false;
         }

      ----------- end diff -----------

 203) app/Services/SEOService.php
      ---------- begin diff ----------
--- /var/www/html/app/Services/SEOService.php
+++ /var/www/html/app/Services/SEOService.php
@@ -55,7 +55,7 @@
      */
     protected function generateCategoryMeta(Category $category): array
     {
-        $title = $this->generateTitle($category->name . ' - Products');
+        $title = $this->generateTitle($category->name.' - Products');
         $description = $this->generateDescription(
             $category->description ?? "Browse {$category->name} products and compare prices"
         );
@@ -79,7 +79,7 @@
      */
     protected function generateStoreMeta(Store $store): array
     {
-        $title = $this->generateTitle($store->name . ' - Store');
+        $title = $this->generateTitle($store->name.' - Store');
         $description = $this->generateDescription(
             $store->description ?? "Shop at {$store->name} and compare prices"
         );
@@ -107,7 +107,7 @@
         $description = 'Compare prices across multiple stores and find the best deals';
 
         return [
-            'title' => $appName . ' - Price Comparison Platform',
+            'title' => $appName.' - Price Comparison Platform',
             'description' => $description,
             'keywords' => 'price comparison, shopping, deals, best prices, online shopping',
             'og_title' => $appName,
@@ -133,7 +133,7 @@
             $title = Str::limit($title, $maxLength - strlen($appName) - 6, '');
         }
 
-        return $title . ' | ' . $appName;
+        return $title.' | '.$appName;
     }
 
     /**
@@ -260,4 +260,3 @@
         return $data;
     }
 }
-

      ----------- end diff -----------

 204) app/Services/StorageManagementService.php
      ---------- begin diff ----------
--- /var/www/html/app/Services/StorageManagementService.php
+++ /var/www/html/app/Services/StorageManagementService.php
@@ -5,10 +5,7 @@
 namespace App\Services;
 
 use Carbon\Carbon;
-use Exception;
 use Illuminate\Support\Facades\Log;
-use RecursiveDirectoryIterator;
-use RecursiveIteratorIterator;
 
 final class StorageManagementService
 {
@@ -104,7 +101,7 @@
     {
         $usage = $this->monitorStorageUsage();
 
-        if (! ($usage['needs_cleanup'] ?? false) || ! ($this->config['auto_cleanup'] ?? false)) {
+        if (!($usage['needs_cleanup'] ?? false) || !($this->config['auto_cleanup'] ?? false)) {
             return [
                 'cleanup_performed' => false,
                 'reason' => 'No cleanup needed or auto cleanup disabled',
@@ -129,7 +126,7 @@
      */
     public function compressOldFiles(): array
     {
-        if (! ($this->config['compression_enabled'] ?? false)) {
+        if (!($this->config['compression_enabled'] ?? false)) {
             return ['compression_disabled' => true];
         }
 
@@ -151,7 +148,7 @@
             }
 
             Log::info('File compression completed', $results);
-        } catch (Exception $e) {
+        } catch (\Exception $e) {
             $results['errors'][] = $e->getMessage();
             Log::error('File compression failed', ['error' => $e->getMessage()]);
         }
@@ -166,7 +163,7 @@
      */
     public function archiveOldFiles(): array
     {
-        if (! ($this->config['archival_enabled'] ?? false)) {
+        if (!($this->config['archival_enabled'] ?? false)) {
             return ['archival_disabled' => true];
         }
 
@@ -193,7 +190,7 @@
             }
 
             Log::info('File archival completed', $results);
-        } catch (Exception $e) {
+        } catch (\Exception $e) {
             $results['errors'][] = $e->getMessage();
             Log::error('File archival failed', ['error' => $e->getMessage()]);
         }
@@ -231,13 +228,13 @@
         }
 
         // Generate recommendations based on usage
-        if ($usage['status'] === 'critical') {
+        if ('critical' === $usage['status']) {
             $recommendations[] = [
                 'type' => 'critical',
                 'message' => 'Storage usage is critical. Immediate cleanup required.',
                 'action' => 'Run complete cleanup immediately',
             ];
-        } elseif ($usage['status'] === 'warning') {
+        } elseif ('warning' === $usage['status']) {
             $recommendations[] = [
                 'type' => 'warning',
                 'message' => 'Storage usage is high. Consider cleanup.',
@@ -267,7 +264,7 @@
     /**
      * Update storage limits configuration.
      *
-     * @param  array<string, mixed>  $limits
+     * @param array<string, mixed> $limits
      */
     public function updateStorageLimits(array $limits): bool
     {
@@ -276,13 +273,13 @@
 
             // Update config file
             $configPath = config_path('storage_management.php');
-            $configContent = "<?php\n\nreturn " . var_export($this->config, true) . ";\n";
+            $configContent = "<?php\n\nreturn ".var_export($this->config, true).";\n";
             file_put_contents($configPath, $configContent);
 
             Log::info('Storage limits updated', $limits);
 
             return true;
-        } catch (Exception $e) {
+        } catch (\Exception $e) {
             Log::error('Failed to update storage limits', [
                 'error' => $e->getMessage(),
                 'limits' => $limits,
@@ -316,7 +313,7 @@
 
     private function processDirectoryStats(mixed $data, int &$totalFiles, ?int &$oldestFile, ?int &$newestFile): void
     {
-        if (! is_array($data) || ! isset($data['path']) || ! is_string($data['path'])) {
+        if (!is_array($data) || !isset($data['path']) || !is_string($data['path'])) {
             return;
         }
 
@@ -330,7 +327,7 @@
     {
         foreach ($files as $file) {
             $fileTime = filemtime($file);
-            if ($fileTime === false) {
+            if (false === $fileTime) {
                 continue;
             }
 
@@ -344,11 +341,11 @@
      */
     private function updateMinMaxFileTime(int $fileTime, ?int &$oldestFile, ?int &$newestFile): void
     {
-        if ($oldestFile === null || $fileTime < $oldestFile) {
+        if (null === $oldestFile || $fileTime < $oldestFile) {
             $oldestFile = $fileTime;
         }
 
-        if ($newestFile === null || $fileTime > $newestFile) {
+        if (null === $newestFile || $fileTime > $newestFile) {
             $newestFile = $fileTime;
         }
     }
@@ -404,19 +401,20 @@
     }
 
     /**
-     * @param  array<string, mixed>  $result
+     * @param array<string, mixed> $result
      */
     private function logStorageUsage(string $status, array $result): void
     {
-        if ($status === 'warning') {
+        if ('warning' === $status) {
             Log::warning('Storage usage warning', $result);
-        } elseif ($status === 'critical') {
+        } elseif ('critical' === $status) {
             Log::error('Storage usage critical', $result);
         }
     }
 
     /**
-     * @param  list<string>  $priority
+     * @param list<string> $priority
+     *
      * @return array<string, mixed>
      */
     private function performCleanup(array $priority): array
@@ -424,7 +422,7 @@
         $cleanupResults = [];
 
         foreach ($priority as $type) {
-            $cleanupMethod = 'cleanup' . ucfirst($type) . 'Files';
+            $cleanupMethod = 'cleanup'.ucfirst($type).'Files';
             if (method_exists($this->cleanupService, $cleanupMethod)) {
                 $cleanupResults[$type] = $this->cleanupService->{$cleanupMethod}();
             }
@@ -431,7 +429,7 @@
 
             // Check if usage is now acceptable
             $newUsage = $this->monitorStorageUsage();
-            if ($newUsage['status'] === 'healthy') {
+            if ('healthy' === $newUsage['status']) {
                 break;
             }
         }
@@ -442,16 +440,16 @@
     private function compressFile(string $file): int
     {
         $originalSize = filesize($file);
-        if ($originalSize === false) {
+        if (false === $originalSize) {
             return 0;
         }
 
-        $compressedFile = $file . '.gz';
+        $compressedFile = $file.'.gz';
         $fileContent = file_get_contents($file);
 
-        if ($fileContent !== false && file_put_contents($compressedFile, gzencode($fileContent))) {
+        if (false !== $fileContent && file_put_contents($compressedFile, gzencode($fileContent))) {
             $compressedSize = filesize($compressedFile);
-            if ($compressedSize !== false) {
+            if (false !== $compressedSize) {
                 unlink($file); // Remove original file
 
                 return $originalSize - $compressedSize;
@@ -471,15 +469,15 @@
         $filesCompressed = 0;
         $spaceSaved = 0;
 
-        $files = glob($directory . '/*');
-        if ($files === false) {
+        $files = glob($directory.'/*');
+        if (false === $files) {
             return ['files_compressed' => 0, 'space_saved_mb' => 0];
         }
 
         foreach ($files as $file) {
-            if (is_file($file) && ! str_ends_with($file, '.gz')) {
+            if (is_file($file) && !str_ends_with($file, '.gz')) {
                 $spaceSaved += $this->compressFile($file);
-                $filesCompressed++;
+                ++$filesCompressed;
             }
         }
 
@@ -496,18 +494,18 @@
      */
     private function createArchive(string $directory, string $name): array
     {
-        $archiveName = $name . '_' . Carbon::now()->format('Y-m-d') . '.tar.gz';
-        $archivePath = storage_path('archives/' . $archiveName);
+        $archiveName = $name.'_'.Carbon::now()->format('Y-m-d').'.tar.gz';
+        $archivePath = storage_path('archives/'.$archiveName);
 
         // Create archives directory if it doesn't exist
-        if (! is_dir(dirname($archivePath))) {
+        if (!is_dir(dirname($archivePath))) {
             mkdir(dirname($archivePath), 0755, true);
         }
 
-        $command = "tar -czf {$archivePath} -C " . dirname($directory) . ' ' . basename($directory);
+        $command = "tar -czf {$archivePath} -C ".dirname($directory).' '.basename($directory);
         exec($command, $output, $returnCode);
 
-        if ($returnCode === 0) {
+        if (0 === $returnCode) {
             $originalSize = $this->getDirectorySize($directory);
             $archiveSize = filesize($archivePath);
             $spaceSaved = $originalSize - $archiveSize;
@@ -515,7 +513,7 @@
             // Remove original directory
             $this->removeDirectory($directory);
 
-            $files = glob($directory . '/*');
+            $files = glob($directory.'/*');
 
             return [
                 'files_archived' => $files ? count($files) : 0,
@@ -541,8 +539,8 @@
         $files = [];
 
         if (is_dir($directory)) {
-            $iterator = new RecursiveIteratorIterator(
-                new RecursiveDirectoryIterator($directory, RecursiveDirectoryIterator::SKIP_DOTS)
+            $iterator = new \RecursiveIteratorIterator(
+                new \RecursiveDirectoryIterator($directory, \RecursiveDirectoryIterator::SKIP_DOTS)
             );
 
             foreach ($iterator as $file) {
@@ -560,13 +558,13 @@
      */
     private function removeDirectory(string $directory): void
     {
-        if (! is_dir($directory)) {
+        if (!is_dir($directory)) {
             return;
         }
 
-        $iterator = new RecursiveIteratorIterator(
-            new RecursiveDirectoryIterator($directory, RecursiveDirectoryIterator::SKIP_DOTS),
-            RecursiveIteratorIterator::CHILD_FIRST
+        $iterator = new \RecursiveIteratorIterator(
+            new \RecursiveDirectoryIterator($directory, \RecursiveDirectoryIterator::SKIP_DOTS),
+            \RecursiveIteratorIterator::CHILD_FIRST
         );
 
         foreach ($iterator as $file) {
@@ -589,12 +587,12 @@
     {
         $size = 0;
 
-        if (! is_dir($directory)) {
+        if (!is_dir($directory)) {
             return $size;
         }
 
-        $iterator = new RecursiveIteratorIterator(
-            new RecursiveDirectoryIterator($directory, RecursiveDirectoryIterator::SKIP_DOTS)
+        $iterator = new \RecursiveIteratorIterator(
+            new \RecursiveDirectoryIterator($directory, \RecursiveDirectoryIterator::SKIP_DOTS)
         );
 
         foreach ($iterator as $file) {

      ----------- end diff -----------

 205) app/Services/StoreAdapters/AbstractStoreAdapter.php
      ---------- begin diff ----------
--- /var/www/html/app/Services/StoreAdapters/AbstractStoreAdapter.php
+++ /var/www/html/app/Services/StoreAdapters/AbstractStoreAdapter.php
@@ -25,7 +25,7 @@
     {
         $this->lastError = null;
 
-        for ($attempt = 1; $attempt <= $this->retries; $attempt++) {
+        for ($attempt = 1; $attempt <= $this->retries; ++$attempt) {
             try {
                 $response = Http::timeout($this->timeout)
                     ->retry($this->retries, 100)
@@ -36,7 +36,7 @@
                 }
 
                 $this->lastError = "HTTP {$response->status()}: {$response->body()}";
-                
+
                 Log::warning('Store adapter request failed', [
                     'store' => $this->getStoreName(),
                     'url' => $url,
@@ -43,10 +43,9 @@
                     'status' => $response->status(),
                     'attempt' => $attempt,
                 ]);
-
             } catch (\Exception $e) {
                 $this->lastError = $e->getMessage();
-                
+
                 Log::error('Store adapter request exception', [
                     'store' => $this->getStoreName(),
                     'url' => $url,
@@ -80,6 +79,7 @@
     protected function getCachedProduct(string $identifier): ?array
     {
         $key = $this->getCacheKey($identifier);
+
         return Cache::get($key);
     }
 
@@ -112,9 +112,6 @@
         ];
     }
 
-    /**
-     * {@inheritdoc}
-     */
     #[\Override]
     public function getLastError(): ?string
     {
@@ -121,9 +118,6 @@
         return $this->lastError;
     }
 
-    /**
-     * {@inheritdoc}
-     */
     #[\Override]
     public function getRateLimits(): array
     {
@@ -134,4 +128,3 @@
         ];
     }
 }
-

      ----------- end diff -----------

 206) app/Services/StoreAdapters/AmazonAdapter.php
      ---------- begin diff ----------
--- /var/www/html/app/Services/StoreAdapters/AmazonAdapter.php
+++ /var/www/html/app/Services/StoreAdapters/AmazonAdapter.php
@@ -6,7 +6,7 @@
 
 /**
  * Amazon store adapter.
- * 
+ *
  * Note: This is a basic implementation. Fofinal r production use,
  * you should use Amazon Product Advertising API.
  */
@@ -25,9 +25,6 @@
         $this->region = config('services.amazon.region', 'us-east-1');
     }
 
-    /**
-     * {@inheritdoc}
-     */
     #[\Override]
     public function getStoreName(): string
     {
@@ -34,9 +31,6 @@
         return 'Amazon';
     }
 
-    /**
-     * {@inheritdoc}
-     */
     #[\Override]
     public function getStoreIdentifier(): string
     {
@@ -43,9 +37,6 @@
         return 'amazon';
     }
 
-    /**
-     * {@inheritdoc}
-     */
     #[\Override]
     public function isAvailable(): bool
     {
@@ -52,14 +43,12 @@
         return !empty($this->apiKey) && !empty($this->apiSecret);
     }
 
-    /**
-     * {@inheritdoc}
-     */
     #[\Override]
     public function fetchProduct(string $productIdentifier): ?array
     {
         if (!$this->isAvailable()) {
             $this->lastError = 'Amazon API credentials not configured';
+
             return null;
         }
 
@@ -76,6 +65,7 @@
         if ($productData) {
             $normalized = $this->normalizeAmazonData($productData);
             $this->cacheProduct($productIdentifier, $normalized, 3600);
+
             return $normalized;
         }
 
@@ -89,9 +79,9 @@
     {
         // TODO: Implement actual Amazon Product Advertising API call
         // This requires signing requests with AWS Signature Version 4
-        
+
         $this->lastError = 'Amazon API integration not yet implemented. Please configure Amazon Product Advertising API.';
-        
+
         return null;
     }
 
@@ -119,9 +109,6 @@
         ]);
     }
 
-    /**
-     * {@inheritdoc}
-     */
     #[\Override]
     public function searchProducts(string $query, array $options = []): array
     {
@@ -133,23 +120,18 @@
         return [];
     }
 
-    /**
-     * {@inheritdoc}
-     */
     #[\Override]
     public function validateIdentifier(string $identifier): bool
     {
         // Amazon ASIN is 10 characters (alphanumeric)
-        return preg_match('/^[A-Z0-9]{10}$/', $identifier) === 1;
+        return 1 === preg_match('/^[A-Z0-9]{10}$/', $identifier);
     }
 
-    /**
-     * {@inheritdoc}
-     */
     #[\Override]
     public function getProductUrl(string $identifier): string
     {
         $domain = $this->getAmazonDomain();
+
         return "https://www.{$domain}/dp/{$identifier}";
     }
 
@@ -167,9 +149,6 @@
         };
     }
 
-    /**
-     * {@inheritdoc}
-     */
     #[\Override]
     public function getRateLimits(): array
     {
@@ -180,4 +159,3 @@
         ];
     }
 }
-

      ----------- end diff -----------

 207) app/Services/SuspiciousActivityService.php
      ---------- begin diff ----------
--- /var/www/html/app/Services/SuspiciousActivityService.php
+++ /var/www/html/app/Services/SuspiciousActivityService.php
@@ -4,7 +4,6 @@
 
 namespace App\Services;
 
-use Exception;
 use Illuminate\Support\Facades\Cache;
 use Illuminate\Support\Facades\Log;
 use Illuminate\Support\Facades\Mail;
@@ -70,17 +69,17 @@
     /**
      * Monitor user activity.
      *
-     * @param  array<string, mixed>  $data
+     * @param array<string, mixed> $data
      */
     public function monitorActivity(string $event, array $data): void
     {
         try {
-            if (! ($this->config['enabled'] ?? false)) {
+            if (!($this->config['enabled'] ?? false)) {
                 return;
             }
 
             $this->processActivity($event, $data);
-        } catch (Exception $e) {
+        } catch (\Exception $e) {
             Log::error('Suspicious activity monitoring failed', [
                 'event' => $event,
                 'data' => $data,
@@ -104,7 +103,7 @@
     /**
      * Process activity to check for suspicious events.
      *
-     * @param  array<string, mixed>  $data
+     * @param array<string, mixed> $data
      */
     private function processActivity(string $event, array $data): void
     {
@@ -118,15 +117,15 @@
     /**
      * Validate input data.
      *
-     * @param  array<string, mixed>  $data
+     * @param array<string, mixed> $data
      */
     private function isValidInput(array $data): bool
     {
-        if (! isset($data['user_id']) || ! is_numeric($data['user_id'])) {
+        if (!isset($data['user_id']) || !is_numeric($data['user_id'])) {
             return false;
         }
 
-        if (! isset($data['ip_address']) || ! is_string($data['ip_address'])) {
+        if (!isset($data['ip_address']) || !is_string($data['ip_address'])) {
             return false;
         }
 
@@ -136,12 +135,13 @@
     /**
      * Get suspicious activities based on event and data.
      *
-     * @param  array<string, mixed>  $data
+     * @param array<string, mixed> $data
+     *
      * @return list<array<string, mixed>>
      */
     private function getSuspiciousActivities(string $event, array $data): array
     {
-        if (! $this->isValidInput($data)) {
+        if (!$this->isValidInput($data)) {
             return [];
         }
 
@@ -172,7 +172,7 @@
     {
         $rule = $this->getMonitoringRule('multiple_failed_logins');
 
-        if (! ($rule['enabled'] ?? false)) {
+        if (!($rule['enabled'] ?? false)) {
             return [];
         }
 
@@ -191,14 +191,12 @@
 
     /**
      * Increment the failed login count for a user.
-     *
-     * @return bool|int
      */
     private function incrementFailedLoginCount(string $key, int $timeWindow): int|bool
     {
         $failedCount = Cache::increment($key);
 
-        if ($failedCount === 1) {
+        if (1 === $failedCount) {
             Cache::put($key, 1, $timeWindow * 60);
         }
 
@@ -208,7 +206,8 @@
     /**
      * Create a multiple failed logins activity.
      *
-     * @param  array<string, mixed>  $rule
+     * @param array<string, mixed> $rule
+     *
      * @return list<array<string, mixed>>
      */
     private function createMultipleFailedLoginsActivity(int $userId, string $ipAddress, int $failedCount, array $rule): array
@@ -237,7 +236,8 @@
     /**
      * Check for unusual login location.
      *
-     * @param  array<string, mixed>  $location
+     * @param array<string, mixed> $location
+     *
      * @return list<array<string, mixed>>
      */
     private function checkUnusualLoginLocation(int $userId, array $location, string $ipAddress): array
@@ -244,12 +244,12 @@
     {
         $rule = $this->getMonitoringRule('unusual_login_location');
 
-        if (! ($rule['enabled'] ?? false)) {
+        if (!($rule['enabled'] ?? false)) {
             return [];
         }
 
         $previousLocations = $this->getUserPreviousLocations();
-        if ($previousLocations === [] || ! $this->isLocationUnusual($location, $previousLocations)) {
+        if ([] === $previousLocations || !$this->isLocationUnusual($location, $previousLocations)) {
             return [];
         }
 
@@ -265,7 +265,7 @@
     {
         $rule = $this->getMonitoringRule('rapid_api_requests');
 
-        if (! ($rule['enabled'] ?? false)) {
+        if (!($rule['enabled'] ?? false)) {
             return [];
         }
 
@@ -275,7 +275,7 @@
 
         $requestCount = Cache::increment($key);
 
-        if ($requestCount === 1) {
+        if (1 === $requestCount) {
             Cache::put($key, 1, $timeWindow * 60);
         }
 
@@ -289,7 +289,8 @@
     /**
      * Check for unusual data access.
      *
-     * @param  array<string, mixed>  $data
+     * @param array<string, mixed> $data
+     *
      * @return list<array<string, mixed>>
      */
     private function checkUnusualDataAccess(int $userId, array $data): array
@@ -296,7 +297,7 @@
     {
         $rule = $this->getMonitoringRule('unusual_data_access');
 
-        if (! ($rule['enabled'] ?? false)) {
+        if (!($rule['enabled'] ?? false)) {
             return [];
         }
 
@@ -306,7 +307,7 @@
 
         $accessCount = Cache::increment($key);
 
-        if ($accessCount === 1) {
+        if (1 === $accessCount) {
             Cache::put($key, 1, $timeWindow * 60);
         }
 
@@ -320,9 +321,10 @@
     /**
      * Create an unusual login location activity.
      *
-     * @param  array<string, mixed>  $location
-     * @param  array<string, mixed>  $previousLocations
-     * @param  array<string, mixed>  $rule
+     * @param array<string, mixed> $location
+     * @param array<string, mixed> $previousLocations
+     * @param array<string, mixed> $rule
+     *
      * @return list<array<string, mixed>>
      */
     private function createUnusualLoginLocationActivity(int $userId, string $ipAddress, array $location, array $previousLocations, array $rule): array
@@ -345,7 +347,8 @@
     /**
      * Create a rapid API requests activity.
      *
-     * @param  array<string, mixed>  $rule
+     * @param array<string, mixed> $rule
+     *
      * @return list<array<string, mixed>>
      */
     private function createRapidApiRequestsActivity(int $userId, string $ipAddress, int $requestCount, array $rule): array
@@ -368,8 +371,9 @@
     /**
      * Create an unusual data access activity.
      *
-     * @param  array<string, mixed>  $data
-     * @param  array<string, mixed>  $rule
+     * @param array<string, mixed> $data
+     * @param array<string, mixed> $rule
+     *
      * @return list<array<string, mixed>>
      */
     private function createUnusualDataAccessActivity(int $userId, int $accessCount, array $data, array $rule): array
@@ -392,7 +396,8 @@
     /**
      * Check for account sharing.
      *
-     * @param  array<string, mixed>  $data
+     * @param array<string, mixed> $data
+     *
      * @return list<array<string, mixed>>
      */
     private function checkAdminActions(int $userId, array $data): array
@@ -399,7 +404,7 @@
     {
         $rule = $this->getMonitoringRule('admin_actions');
 
-        if (! ($rule['enabled'] ?? false)) {
+        if (!($rule['enabled'] ?? false)) {
             return [];
         }
 
@@ -422,7 +427,7 @@
     /**
      * Process suspicious activity.
      *
-     * @param  array<string, mixed>  $activity
+     * @param array<string, mixed> $activity
      */
     private function processSuspiciousActivity(array $activity): void
     {
@@ -438,7 +443,7 @@
 
             // Take automatic actions if needed
             $this->takeAutomaticActions($activity);
-        } catch (Exception $e) {
+        } catch (\Exception $e) {
             Log::error('Failed to process suspicious activity', [
                 'activity' => $activity,
                 'error' => $e->getMessage(),
@@ -449,7 +454,7 @@
     /**
      * Store suspicious activity.
      *
-     * @param  array<string, mixed>  $activity
+     * @param array<string, mixed> $activity
      */
     private function storeSuspiciousActivity(array $activity): void
     {
@@ -461,7 +466,7 @@
     /**
      * Send notifications.
      *
-     * @param  array<string, mixed>  $activity
+     * @param array<string, mixed> $activity
      */
     private function sendNotifications(array $activity): void
     {
@@ -483,7 +488,7 @@
     /**
      * Send email notification.
      *
-     * @param  array<string, mixed>  $activity
+     * @param array<string, mixed> $activity
      */
     private function sendEmailNotification(array $activity): void
     {
@@ -490,9 +495,9 @@
         try {
             $adminEmails = config('app.admin_emails', []);
 
-            if ($adminEmails !== []) {
+            if ([] !== $adminEmails) {
                 $activityType = is_string($activity['type'] ?? null) ? $activity['type'] : 'unknown';
-                $subject = 'Suspicious Activity Alert - ' . $activityType;
+                $subject = 'Suspicious Activity Alert - '.$activityType;
                 $message = $this->formatActivityMessage($activity);
 
                 Mail::raw($message, static function ($mail) use ($adminEmails, $subject): void {
@@ -499,7 +504,7 @@
                     $mail->to($adminEmails)->subject($subject);
                 });
             }
-        } catch (Exception $e) {
+        } catch (\Exception $e) {
             Log::error('Failed to send email notification', [
                 'activity' => $activity,
                 'error' => $e->getMessage(),
@@ -510,7 +515,7 @@
     /**
      * Send Slack notification.
      *
-     * @param  array<string, mixed>  $activity
+     * @param array<string, mixed> $activity
      */
     private function sendSlackNotification(array $activity): void
     {
@@ -522,7 +527,7 @@
     /**
      * Send webhook notification.
      *
-     * @param  array<string, mixed>  $activity
+     * @param array<string, mixed> $activity
      */
     private function sendWebhookNotification(array $activity): void
     {
@@ -534,7 +539,7 @@
     /**
      * Take automatic actions.
      *
-     * @param  array<string, mixed>  $activity
+     * @param array<string, mixed> $activity
      */
     private function takeAutomaticActions(array $activity): void
     {
@@ -541,12 +546,12 @@
         $severity = $activity['severity'] ?? 'medium';
         $type = $activity['type'] ?? 'unknown';
 
-        if ($severity !== 'high') {
+        if ('high' !== $severity) {
             return;
         }
 
         $userId = (int) ($activity['user_id'] ?? 0);
-        if ($userId === 0) {
+        if (0 === $userId) {
             return;
         }
 
@@ -568,7 +573,7 @@
                 'user_id' => $userId,
                 'timestamp' => now()->toISOString(),
             ]);
-        } catch (Exception $e) {
+        } catch (\Exception $e) {
             Log::error('Failed to lock user account', [
                 'user_id' => $userId,
                 'error' => $e->getMessage(),
@@ -587,7 +592,7 @@
                 'user_id' => $userId,
                 'timestamp' => now()->toISOString(),
             ]);
-        } catch (Exception $e) {
+        } catch (\Exception $e) {
             Log::error('Failed to suspend user account', [
                 'user_id' => $userId,
                 'error' => $e->getMessage(),
@@ -595,12 +600,10 @@
         }
     }
 
-
-
     /**
      * Format activity message.
      *
-     * @param  array<string, mixed>  $activity
+     * @param array<string, mixed> $activity
      */
     private function formatActivityMessage(array $activity): string
     {
@@ -654,8 +657,8 @@
     /**
      * Check if location is unusual.
      *
-     * @param  array<string, mixed>  $currentLocation
-     * @param  array<string, mixed>  $previousLocations
+     * @param array<string, mixed> $currentLocation
+     * @param array<string, mixed> $previousLocations
      */
     private function isLocationUnusual(array $currentLocation, array $previousLocations): bool
     {
@@ -669,8 +672,8 @@
     }
 
     /**
-     * @param  array<string, mixed>  $currentLocation
-     * @param  array<string, mixed>  $previousLocation
+     * @param array<string, mixed> $currentLocation
+     * @param array<string, mixed> $previousLocation
      */
     private function isWithinDistanceThreshold(array $currentLocation, array $previousLocation): bool
     {

      ----------- end diff -----------

 208) app/Services/TestAnalysisService.php
      ---------- begin diff ----------
--- /var/www/html/app/Services/TestAnalysisService.php
+++ /var/www/html/app/Services/TestAnalysisService.php
@@ -9,10 +9,12 @@
 
 final readonly class TestAnalysisService
 {
-    public function __construct(private bool $coverageEnabled = false) {}
+    public function __construct(private bool $coverageEnabled = false)
+    {
+    }
 
     /**
-     * @param  array<string>  $issues
+     * @param array<string> $issues
      */
     private function runAndAnalyzeTests(array &$issues): int
     {
@@ -43,7 +45,7 @@
     /**
      * Run test process.
      *
-     * @param  array<string>  $command
+     * @param array<string> $command
      */
     private function runTestProcess(array $command): Process
     {
@@ -57,7 +59,7 @@
     /**
      * Analyze test results.
      *
-     * @param  array<string>  $issues
+     * @param array<string> $issues
      */
     private function analyzeTestResults(Process $process, string $output, array &$issues): int
     {
@@ -73,11 +75,11 @@
     /**
      * Analyze coverage.
      *
-     * @param  array<string>  $issues
+     * @param array<string> $issues
      */
     private function analyzeCoverage(string $output, array &$issues): int
     {
-        if (! $this->coverageEnabled) {
+        if (!$this->coverageEnabled) {
             return 0;
         }
 
@@ -95,7 +97,7 @@
     /**
      * Handle test process exception.
      *
-     * @param  array<string>  $issues
+     * @param array<string> $issues
      */
     private function handleTestProcessException(ProcessFailedException $exception, array &$issues): void
     {

      ----------- end diff -----------

 209) app/Services/UserBanService.php
      ---------- begin diff ----------
--- /var/www/html/app/Services/UserBanService.php
+++ /var/www/html/app/Services/UserBanService.php
@@ -51,7 +51,7 @@
      */
     public function getBanInfo(User $user): ?array
     {
-        if (! $user->isBanned()) {
+        if (!$user->isBanned()) {
             return null;
         }
 
@@ -61,7 +61,7 @@
             'description' => $user->ban_description,
             'banned_at' => $user->banned_at ? Carbon::parse($user->banned_at)->toISOString() : null,
             'expires_at' => $user->ban_expires_at ? Carbon::parse($user->ban_expires_at)->toISOString() : null,
-            'is_permanent' => $user->ban_expires_at === null,
+            'is_permanent' => null === $user->ban_expires_at,
             'reason_text' => self::BAN_REASONS[$user->ban_reason] ?? 'غير محدد',
         ];
     }
@@ -118,6 +118,6 @@
 
     private function isValidBanReason(string $reason): bool
     {
-        return $reason !== '' && array_key_exists($reason, self::BAN_REASONS);
+        return '' !== $reason && array_key_exists($reason, self::BAN_REASONS);
     }
 }

      ----------- end diff -----------

 210) app/Services/WebhookService.php
      ---------- begin diff ----------
--- /var/www/html/app/Services/WebhookService.php
+++ /var/www/html/app/Services/WebhookService.php
@@ -10,8 +10,6 @@
 
 class WebhookService
 {
-
-
     /**
      * Handle incoming webhook.
      */
@@ -19,7 +17,7 @@
         string $storeIdentifier,
         string $eventType,
         array $payload,
-        ?string $signature = null
+        ?string $signature = null,
     ): Webhook {
         // Create webhook record
         $webhook = Webhook::create([
@@ -75,7 +73,6 @@
 
             $webhook->markAsCompleted();
             $webhook->addLog('completed', 'Webhook processed successfully');
-
         } catch (\Exception $e) {
             $webhook->markAsFailed($e->getMessage());
             $webhook->addLog('failed', 'Webhook processing failed', [
@@ -139,7 +136,7 @@
         $payload = $webhook->payload;
         $inStock = $payload['in_stock'] ?? null;
 
-        if ($inStock === null) {
+        if (null === $inStock) {
             throw new \Exception('Stock status not provided in payload');
         }
 
@@ -156,7 +153,7 @@
         // Invalidate cache
         $this->cacheService->invalidateProduct($product->id);
 
-        $webhook->addLog('stock_updated', "Stock status updated", [
+        $webhook->addLog('stock_updated', 'Stock status updated', [
             'in_stock' => $inStock,
             'quantity' => $payload['quantity'] ?? null,
         ]);
@@ -246,4 +243,3 @@
         return hash_equals($expectedSignature, $webhook->signature);
     }
 }
-

      ----------- end diff -----------

 211) app/View/Composers/AppComposer.php
      ---------- begin diff ----------
--- /var/www/html/app/View/Composers/AppComposer.php
+++ /var/www/html/app/View/Composers/AppComposer.php
@@ -7,12 +7,9 @@
 use App\Models\Brand;
 use App\Models\Category;
 use App\Models\Language;
-use Illuminate\View\View;
 
 final class AppComposer
 {
-
-
     /**
      * Get active languages.
      *
@@ -77,7 +74,8 @@
     }
 
     /**
-     * @param  class-string  $modelClass
+     * @param class-string $modelClass
+     *
      * @return list<array<string, mixed>>
      */
     private function getCachedData(string $key, string $modelClass, callable $mapper, string $orderBy = 'name', int $ttl = 1800): array

      ----------- end diff -----------


Found 211 of 246 files that can be fixed in 105.848 seconds, 28.00 MB memory used

Files that were not fixed due to errors reported during linting before fixing:
   1) /var/www/html/app/Http/Controllers/Api/ProductController.php
   2) /var/www/html/app/Http/Controllers/CartController.php
   3) /var/www/html/app/Http/Resources/OrderItemResource.php
   4) /var/www/html/app/Http/Resources/OrderResource.php
   5) /var/www/html/app/Http/Resources/ProductResource.php
   6) /var/www/html/app/Http/Resources/UserResource.php
   7) /var/www/html/app/Models/Reward.php
   8) /var/www/html/app/Services/StoreAdapterManager.php
   9) /var/www/html/app/Services/StoreAdapters/EbayAdapter.php
  10) /var/www/html/app/Services/StoreAdapters/NoonAdapter.php
  11) /var/www/html/app/_ide_helper_cart.php
