<?php

declare(strict_types=1);

return [
    'preset' => 'laravel',
    'exclude' => [
        'vendor',
        'storage',
        'node_modules',
        'tests',
        'database',
        'resources',
        'routes',
        'config',
        'bootstrap',
        'public',
        'docs',
        'build',
        'reports',
        'scripts',
        'dev-docker',
        'docker',
        '.git',
        '.github',
        '.vscode',
        '.devcontainer',
        '.husky',
        '.lighthouseci',
        '.marscode',
        '.qodo',
        '.sfdx',
        '.zencoder',
    ],
    'add' => [
        // Add custom insights here
    ],
    'remove' => [
        // Remove overly opinionated insights that conflict with Laravel standards
        NunoMaduro\PhpInsights\Domain\Insights\ForbiddenDefineFunctions::class,
        NunoMaduro\PhpInsights\Domain\Insights\ForbiddenNormalClasses::class,
        NunoMaduro\PhpInsights\Domain\Insights\ForbiddenTraitUsage::class,
        SlevomatCodingStandard\Sniffs\TypeHints\DisallowMixedTypeHintSniff::class,
        ObjectCalisthenics\Sniffs\NamingConventions\ElementNameMinimalLengthSniff::class,
        NunoMaduro\PhpInsights\Domain\Sniffs\ForbiddenSetterSniff::class,
        SlevomatCodingStandard\Sniffs\Classes\SuperfluousInterfaceNamingSniff::class,
        SlevomatCodingStandard\Sniffs\ControlStructures\DisallowShortTernaryOperatorSniff::class,
        SlevomatCodingStandard\Sniffs\Functions\DisallowEmptyFunctionSniff::class,
        PHP_CodeSniffer\Standards\Generic\Sniffs\Commenting\TodoSniff::class,
        ObjectCalisthenics\Sniffs\Files\FunctionLengthSniff::class,
        ObjectCalisthenics\Sniffs\Metrics\PropertyPerClassLimitSniff::class,
        ObjectCalisthenics\Sniffs\Metrics\MethodPerClassLimitSniff::class,
        ObjectCalisthenics\Sniffs\CodeAnalysis\OneObjectOperatorPerLineSniff::class,
        PHP_CodeSniffer\Standards\Generic\Sniffs\CodeAnalysis\UselessOverridingMethodSniff::class,
        SlevomatCodingStandard\Sniffs\TypeHints\ParameterTypeHintSniff::class,
        SlevomatCodingStandard\Sniffs\TypeHints\PropertyTypeHintSniff::class,
        SlevomatCodingStandard\Sniffs\TypeHints\ReturnTypeHintSniff::class,
        SlevomatCodingStandard\Sniffs\Functions\UnusedParameterSniff::class,
        SlevomatCodingStandard\Sniffs\Commenting\InlineDocCommentDeclarationSniff::class,
        PHP_CodeSniffer\Standards\Generic\Sniffs\Formatting\SpaceAfterNotSniff::class,
        NunoMaduro\PhpInsights\Domain\Sniffs\ForbiddenPublicPropertySniff::class,
        PHP_CodeSniffer\Standards\Generic\Sniffs\CodeAnalysis\EmptyStatementSniff::class,
        NunoMaduro\PhpInsights\Domain\Insights\CyclomaticComplexityIsHigh::class,
        ObjectCalisthenics\Sniffs\Metrics\MaxNestingLevelSniff::class,
        PHP_CodeSniffer\Standards\Generic\Sniffs\Files\LineLengthSniff::class,
        SlevomatCodingStandard\Sniffs\Classes\ClassConstantVisibilitySniff::class,
        PHP_CodeSniffer\Standards\Generic\Sniffs\Metrics\CyclomaticComplexitySniff::class,
        NunoMaduro\PhpInsights\Domain\Insights\Composer\ComposerLockMustBeFresh::class,
    ],
    'config' => [
        // Configuration for insights
        'PHP_CodeSniffer\Standards\Generic\Sniffs\Files\LineLengthSniff' => [
            'lineLimit' => 250,
            'absoluteLineLimit' => 300,
        ],
        NunoMaduro\PhpInsights\Domain\Insights\CyclomaticComplexityIsHigh::class => [
            'maxComplexity' => 15,
        ],
    ],
];
