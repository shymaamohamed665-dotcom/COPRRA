version: "3.8"

# Enhanced COPRRA Docker Compose Configuration
# Includes: health checks, dedicated volumes, environment separation, monitoring

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: coprra-app
    restart: unless-stopped
    working_dir: /var/www/html
    environment:
      APP_ENV: ${APP_ENV:-production}
      APP_DEBUG: ${APP_DEBUG:-false}
      APP_KEY: ${APP_KEY}
      DB_HOST: db
      DB_PORT: 3306
      DB_DATABASE: ${DB_DATABASE:-coprra}
      DB_USERNAME: ${DB_USERNAME:-coprra}
      DB_PASSWORD: ${DB_PASSWORD:-coprra}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      MAIL_HOST: mailpit
      MAIL_PORT: 1025
    volumes:
      # Use Docker volumes for writable directories instead of bind mounts
      - storage-data:/var/www/html/storage
      - cache-data:/var/www/html/bootstrap/cache
      # Mount logs separately for persistence
      - ./storage/logs:/var/www/html/storage/logs
      # Mount code as read-only in production (comment out for development)
      # - ./:/var/www/html:ro
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - coprra-network
    healthcheck:
      test: ["CMD", "php", "-r", "opcache_get_status() or exit(1);"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  nginx:
    image: nginx:alpine
    container_name: coprra-nginx
    restart: unless-stopped
    ports:
      - "${NGINX_PORT:-80}:80"
      - "${NGINX_SSL_PORT:-443}:443"
    volumes:
      - ./public:/var/www/html/public:ro
      - ./docker/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - nginx-cache:/var/cache/nginx
    depends_on:
      app:
        condition: service_healthy
    networks:
      - coprra-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

  db:
    image: mysql:8.0
    container_name: coprra-db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-root}
      MYSQL_DATABASE: ${DB_DATABASE:-coprra}
      MYSQL_USER: ${DB_USERNAME:-coprra}
      MYSQL_PASSWORD: ${DB_PASSWORD:-coprra}
    volumes:
      - mysql-data:/var/lib/mysql
      - ./docker/mysql-init:/docker-entrypoint-initdb.d:ro
    ports:
      - "127.0.0.1:${DB_PORT:-33061}:3306"
    networks:
      - coprra-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "$$MYSQL_USER", "-p$$MYSQL_PASSWORD"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci

  redis:
    image: redis:7-alpine
    container_name: coprra-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass "${REDIS_PASSWORD:-}"
    volumes:
      - redis-data:/data
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
    ports:
      - "127.0.0.1:${REDIS_PORT:-6379}:6379"
    networks:
      - coprra-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 10s

  mailpit:
    image: axllent/mailpit:latest
    container_name: coprra-mailpit
    restart: unless-stopped
    ports:
      - "127.0.0.1:${MAILPIT_SMTP_PORT:-1025}:1025"
      - "127.0.0.1:${MAILPIT_UI_PORT:-8025}:8025"
    networks:
      - coprra-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8025/api/v1/info"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

  # Database backup service
  db-backup:
    image: mysql:8.0
    container_name: coprra_db_backup
    restart: unless-stopped
    environment:
      MYSQL_HOST: db
      MYSQL_USER: ${DB_USERNAME:-coprra}
      MYSQL_PASSWORD: ${DB_PASSWORD:-coprra}
      MYSQL_DATABASE: ${DB_DATABASE:-coprra}
      BACKUP_SCHEDULE: "0 2 * * *" # 2 AM daily
    volumes:
      - ./backups:/backups
      - ./scripts/backup.sh:/backup.sh:ro
    depends_on:
      db:
        condition: service_healthy
    networks:
      - coprra-network
    command: |
      bash -c "
        while true; do
          sleep 3600
        done
      "

volumes:
  storage-data:
    driver: local
  cache-data:
    driver: local
  mysql-data:
    driver: local
  redis-data:
    driver: local
  nginx-cache:
    driver: local

networks:
  coprra-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
