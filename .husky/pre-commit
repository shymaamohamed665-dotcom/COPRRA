#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

echo "üöÄ Running pre-commit checks with lint-staged..."

# Debris Guard - auto-generated: block committing root debris files
DEBRIS_REGEX='^([^/]+\.txt|[^/]+\.log|[^/]+\.out|test_.*\.php|actionlint|.*_report\.txt)$'
STAGED=$(git diff --cached --name-only --diff-filter=ACM)
if echo "$STAGED" | grep -E "$DEBRIS_REGEX" > /dev/null; then
  echo "‚ùå Commit blocked: Debris files staged in repository root."
  echo "Please run scripts/cleanup.sh or remove the files, then retry."
  echo "Matched files:"
  echo "$STAGED" | grep -E "$DEBRIS_REGEX"
  exit 1
fi

# Check if vendor directory exists
if [ ! -d "vendor" ]; then
    echo "‚ö†Ô∏è  WARNING: vendor directory not found!"
    echo "üì¶ Installing dependencies with composer..."
    composer install --no-interaction --prefer-dist --optimize-autoloader
    if [ $? -ne 0 ]; then
        echo "‚ùå Failed to install composer dependencies. Please run 'composer install' manually."
        exit 1
    fi
fi

# Check if node_modules directory exists
if [ ! -d "node_modules" ]; then
    echo "‚ö†Ô∏è  WARNING: node_modules directory not found!"
    echo "üì¶ Installing NPM dependencies..."
    # Prefer clean, reproducible install when lockfile exists
    if [ -f "package-lock.json" ]; then
        npm ci --prefer-offline || npm install
    else
        npm install
    fi
    if [ $? -ne 0 ]; then
        echo "‚ùå Failed to install NPM dependencies. Please run 'npm install' manually."
        exit 1
    fi
fi

npx lint-staged
