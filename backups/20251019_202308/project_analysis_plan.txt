# Project Analysis Plan

## Task 2: Comprehensive List of Tests and Tools

This document lists all tests, measurement tools, linters, analyzers, security, and quality tools to be run for the comprehensive analysis of the 'coprra' project.

### Analysis Tools and Scripts from composer.json

1.  **Name:** PHPUnit (All Tests)
    *   **Path:** `vendor/bin/phpunit`
    *   **Execution Method:** `vendor/bin/phpunit`
    *   **Environment Requirements:** PHP, Composer dependencies installed.
    *   **Success/Failure Criteria:** Exit code 0 for success, non-zero for failure.

2.  **Name:** PHPStan (Static Analysis)
    *   **Path:** `vendor/bin/phpstan`
    *   **Execution Method:** `vendor/bin/phpstan analyse --memory-limit=2G`
    *   **Environment Requirements:** PHP, Composer dependencies installed.
    *   **Success/Failure Criteria:** Exit code 0 for success (no errors found), non-zero for failure.

3.  **Name:** PHPMD (Mess Detector)
    *   **Path:** `vendor/bin/phpmd`
    *   **Execution Method:** `vendor/bin/phpmd app text cleancode,codesize,controversial,design,naming,unusedcode`
    *   **Environment Requirements:** PHP, Composer dependencies installed.
    *   **Success/Failure Criteria:** Exit code 0 for success (no issues found), non-zero for failure.

4.  **Name:** Pint (Code Style Test)
    *   **Path:** `vendor/bin/pint`
    *   **Execution Method:** `vendor/bin/pint --test`
    *   **Environment Requirements:** PHP, Composer dependencies installed. `pint` must be installed.
    *   **Success/Failure Criteria:** Exit code 0 for success (no style issues), non-zero for failure.

5.  **Name:** PHPUnit (Code Coverage)
    *   **Path:** `vendor/bin/phpunit`
    *   **Execution Method:** `vendor/bin/phpunit --coverage-html coverage`
    *   **Environment Requirements:** PHP, Composer dependencies installed, Xdebug or PCOV for coverage.
    *   **Success/Failure Criteria:** Exit code 0 for success, non-zero for failure. Generates an HTML coverage report.

6.  **Name:** Composer Audit (Security Audit)
    *   **Path:** `composer`
    *   **Execution Method:** `composer audit`
    *   **Environment Requirements:** PHP, Composer.
    *   **Success/Failure Criteria:** Exit code 0 for success (no vulnerabilities), non-zero for failure.

7.  **Name:** Enlightn Security Checker
    *   **Path:** `vendor/bin/security-checker`
    *   **Execution Method:** `vendor/bin/security-checker security:check`
    *   **Environment Requirements:** PHP, Composer dependencies installed.
    *   **Success/Failure Criteria:** Exit code 0 for success (no vulnerabilities), non-zero for failure.

8.  **Name:** Psalm (Static Analysis)
    *   **Path:** `vendor/bin/psalm`
    *   **Execution Method:** `vendor/bin/psalm`
    *   **Environment Requirements:** PHP, Composer dependencies installed.
    *   **Success/Failure Criteria:** Exit code 0 for success (no errors found), non-zero for failure.

9.  **Name:** PHP Insights (Code Quality Analysis)
    *   **Path:** `vendor/bin/phpinsights`
    *   **Execution Method:** `vendor/bin/phpinsights analyse app`
    *   **Environment Requirements:** PHP, Composer dependencies installed.
    *   **Success/Failure Criteria:** Exit code 0 for success, non-zero for failure.

10. **Name:** PHPUnit (AI Test Suite)
    *   **Path:** `vendor/bin/phpunit`
    *   **Execution Method:** `vendor/bin/phpunit --testsuite AI`
    *   **Environment Requirements:** PHP, Composer dependencies installed.
    *   **Success/Failure Criteria:** Exit code 0 for success, non-zero for failure.

11. **Name:** PHPUnit (Security Test Suite)
    *   **Path:** `vendor/bin/phpunit`
    *   **Execution Method:** `vendor/bin/phpunit --testsuite Security`
    *   **Environment Requirements:** PHP, Composer dependencies installed.
    *   **Success/Failure Criteria:** Exit code 0 for success, non-zero for failure.

12. **Name:** PHPUnit (Performance Test Suite)
    *   **Path:** `vendor/bin/phpunit`
    *   **Execution Method:** `vendor/bin/phpunit --testsuite Performance`
    *   **Environment Requirements:** PHP, Composer dependencies installed.
    *   **Success/Failure Criteria:** Exit code 0 for success, non-zero for failure.

13. **Name:** PHPUnit (Integration Test Suite)
    *   **Path:** `vendor/bin/phpunit`
    *   **Execution Method:** `vendor/bin/phpunit --testsuite Integration`
    *   **Environment Requirements:** PHP, Composer dependencies installed.
    *   **Success/Failure Criteria:** Exit code 0 for success, non-zero for failure.

14. **Name:** Composer Unused (Unused Packages)
    *   **Path:** `vendor/bin/composer-unused`
    *   **Execution Method:** `vendor/bin/composer-unused`
    *   **Environment Requirements:** PHP, Composer dependencies installed.
    *   **Success/Failure Criteria:** Exit code 0 for success (no unused packages), non-zero if unused packages are found.

15. **Name:** PHPCopy/Paste Detector (Duplicate Code)
    *   **Path:** `vendor/bin/phpcpd`
    *   **Execution Method:** `vendor/bin/phpcpd app`
    *   **Environment Requirements:** PHP, Composer dependencies installed.
    *   **Success/Failure Criteria:** Exit code 0 for success (no duplicates), non-zero if duplicates are found.

### Individual Test Files
