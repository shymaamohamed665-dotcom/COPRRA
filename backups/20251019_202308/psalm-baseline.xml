<?xml version="1.0" encoding="UTF-8"?>
<files psalm-version="6.13.1@1e3b7f0a8ab32b23197b91107adc0a7ed8a05b51">
  <file src="app/Casts/OrderStatusCast.php">
    <ClassMustBeFinal>
      <code><![CDATA[OrderStatusCast]]></code>
    </ClassMustBeFinal>
    <MissingParamType>
      <code><![CDATA[$model]]></code>
      <code><![CDATA[$model]]></code>
      <code><![CDATA[$value]]></code>
      <code><![CDATA[$value]]></code>
    </MissingParamType>
    <MissingTemplateParam>
      <code><![CDATA[CastsAttributes]]></code>
    </MissingTemplateParam>
    <MixedAssignment>
      <code><![CDATA[$raw]]></code>
    </MixedAssignment>
    <UnusedClass>
      <code><![CDATA[OrderStatusCast]]></code>
    </UnusedClass>
  </file>
  <file src="app/Console/Commands/AgentProposeFixCommand.php">
    <UnusedClass>
      <code><![CDATA[AgentProposeFixCommand]]></code>
    </UnusedClass>
  </file>
  <file src="app/Console/Commands/AnalyzeDatabaseCommand.php">
    <InvalidArgument>
      <code><![CDATA[$tablesWithoutIndexes]]></code>
    </InvalidArgument>
    <MixedPropertyFetch>
      <code><![CDATA[$result[0]->Value]]></code>
    </MixedPropertyFetch>
    <MixedReturnTypeCoercion>
      <code><![CDATA[$this->database->select($query, [$this->getDatabaseName()])]]></code>
      <code><![CDATA[array<int, object|array>|null]]></code>
    </MixedReturnTypeCoercion>
    <PropertyNotSetInConstructor>
      <code><![CDATA[AnalyzeDatabaseCommand]]></code>
      <code><![CDATA[AnalyzeDatabaseCommand]]></code>
      <code><![CDATA[AnalyzeDatabaseCommand]]></code>
      <code><![CDATA[AnalyzeDatabaseCommand]]></code>
      <code><![CDATA[AnalyzeDatabaseCommand]]></code>
    </PropertyNotSetInConstructor>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[is_object($table)]]></code>
    </RedundantConditionGivenDocblockType>
    <UnusedClass>
      <code><![CDATA[AnalyzeDatabaseCommand]]></code>
    </UnusedClass>
  </file>
  <file src="app/Console/Commands/CacheManagement.php">
    <PropertyNotSetInConstructor>
      <code><![CDATA[CacheManagement]]></code>
      <code><![CDATA[CacheManagement]]></code>
      <code><![CDATA[CacheManagement]]></code>
      <code><![CDATA[CacheManagement]]></code>
      <code><![CDATA[CacheManagement]]></code>
    </PropertyNotSetInConstructor>
    <RedundantCondition>
      <code><![CDATA[is_int($result)]]></code>
    </RedundantCondition>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[$this->option('force')]]></code>
    </RiskyTruthyFalsyComparison>
    <TypeDoesNotContainType>
      <code><![CDATA[self::SUCCESS]]></code>
    </TypeDoesNotContainType>
    <UnusedClass>
      <code><![CDATA[CacheManagement]]></code>
    </UnusedClass>
  </file>
  <file src="app/Console/Commands/CleanAnalytics.php">
    <PropertyNotSetInConstructor>
      <code><![CDATA[CleanAnalytics]]></code>
      <code><![CDATA[CleanAnalytics]]></code>
      <code><![CDATA[CleanAnalytics]]></code>
      <code><![CDATA[CleanAnalytics]]></code>
      <code><![CDATA[CleanAnalytics]]></code>
    </PropertyNotSetInConstructor>
    <RiskyCast>
      <code><![CDATA[$this->option('days')]]></code>
    </RiskyCast>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[!$this->option('force')]]></code>
    </RiskyTruthyFalsyComparison>
    <UnusedClass>
      <code><![CDATA[CleanAnalytics]]></code>
    </UnusedClass>
  </file>
  <file src="app/Console/Commands/OptimizePerformance.php">
    <PropertyNotSetInConstructor>
      <code><![CDATA[$cacheOptimizer]]></code>
      <code><![CDATA[$databaseOptimizer]]></code>
      <code><![CDATA[$performanceReporter]]></code>
      <code><![CDATA[$systemOptimizer]]></code>
      <code><![CDATA[OptimizePerformance]]></code>
      <code><![CDATA[OptimizePerformance]]></code>
      <code><![CDATA[OptimizePerformance]]></code>
      <code><![CDATA[OptimizePerformance]]></code>
      <code><![CDATA[OptimizePerformance]]></code>
    </PropertyNotSetInConstructor>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[$this->option('analyze')]]></code>
      <code><![CDATA[$this->option('clear')]]></code>
    </RiskyTruthyFalsyComparison>
    <UnusedClass>
      <code><![CDATA[OptimizePerformance]]></code>
    </UnusedClass>
  </file>
  <file src="app/Console/Commands/ProcessPendingWebhooks.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$webhook]]></code>
    </ArgumentTypeCoercion>
    <MixedAssignment>
      <code><![CDATA[$query]]></code>
    </MixedAssignment>
    <MixedMethodCall>
      <code><![CDATA[get]]></code>
      <code><![CDATA[limit]]></code>
      <code><![CDATA[orWhere]]></code>
      <code><![CDATA[orderBy]]></code>
    </MixedMethodCall>
    <MixedReturnStatement>
      <code><![CDATA[$query->limit($limit)->get()]]></code>
    </MixedReturnStatement>
    <PropertyNotSetInConstructor>
      <code><![CDATA[ProcessPendingWebhooks]]></code>
      <code><![CDATA[ProcessPendingWebhooks]]></code>
      <code><![CDATA[ProcessPendingWebhooks]]></code>
      <code><![CDATA[ProcessPendingWebhooks]]></code>
      <code><![CDATA[ProcessPendingWebhooks]]></code>
    </PropertyNotSetInConstructor>
    <RiskyCast>
      <code><![CDATA[$this->option('limit')]]></code>
    </RiskyCast>
    <UndefinedMagicMethod>
      <code><![CDATA[Webhook::where('status', Webhook::STATUS_PENDING)]]></code>
    </UndefinedMagicMethod>
    <UndefinedMagicPropertyFetch>
      <code><![CDATA[$webhook->id]]></code>
    </UndefinedMagicPropertyFetch>
    <UnusedClass>
      <code><![CDATA[ProcessPendingWebhooks]]></code>
    </UnusedClass>
  </file>
  <file src="app/Console/Commands/SEOAudit.php">
    <InvalidStringClass>
      <code><![CDATA[$modelClass::all()]]></code>
    </InvalidStringClass>
    <MixedArgument>
      <code><![CDATA[$model]]></code>
      <code><![CDATA[$models->count()]]></code>
    </MixedArgument>
    <MixedArgumentTypeCoercion>
      <code><![CDATA[$result->getMetaData()]]></code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment>
      <code><![CDATA[$model]]></code>
      <code><![CDATA[$models]]></code>
    </MixedAssignment>
    <MixedMethodCall>
      <code><![CDATA[count]]></code>
    </MixedMethodCall>
    <PossiblyInvalidArgument>
      <code><![CDATA[$this->option('details')]]></code>
      <code><![CDATA[$this->option('model')]]></code>
    </PossiblyInvalidArgument>
    <PossiblyInvalidCast>
      <code><![CDATA[$this->option('model')]]></code>
    </PossiblyInvalidCast>
    <PropertyNotSetInConstructor>
      <code><![CDATA[$issueFixer]]></code>
      <code><![CDATA[$reporter]]></code>
      <code><![CDATA[$routeAuditor]]></code>
      <code><![CDATA[$seoAuditor]]></code>
      <code><![CDATA[$seoService]]></code>
      <code><![CDATA[SEOAudit]]></code>
      <code><![CDATA[SEOAudit]]></code>
      <code><![CDATA[SEOAudit]]></code>
      <code><![CDATA[SEOAudit]]></code>
      <code><![CDATA[SEOAudit]]></code>
    </PropertyNotSetInConstructor>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[$this->option('details')]]></code>
      <code><![CDATA[$this->option('details')]]></code>
      <code><![CDATA[$this->option('fix')]]></code>
    </RiskyTruthyFalsyComparison>
    <UnusedClass>
      <code><![CDATA[SEOAudit]]></code>
    </UnusedClass>
  </file>
  <file src="app/Console/Commands/StatsCommand.php">
    <InvalidArrayOffset>
      <code><![CDATA[$units[$i]]]></code>
    </InvalidArrayOffset>
    <InvalidOperand>
      <code><![CDATA[$size /= $bytesPerKb]]></code>
      <code><![CDATA[$totalRecords * 1024]]></code>
      <code><![CDATA[round($size, $precision)]]></code>
    </InvalidOperand>
    <InvalidTemplateParam>
      <code><![CDATA[$storeStats->map(/**
             * @return array<int|string>
             *
             * @psalm-return list{string, int}
             */
                static fn ($store): array => [$store->name, $store->price_offers_count]
            )]]></code>
      <code><![CDATA[$topBrands->map(/**
             * @return array<int|string>
             *
             * @psalm-return list{string, int}
             */
                static fn ($brand): array => [$brand->name, $brand->products_count]
            )]]></code>
      <code><![CDATA[$topCategories->map(/**
             * @return array<mixed|string>
             *
             * @psalm-return list{string, mixed}
             */
                static fn ($category): array => [$category->name, $category->products_count]
            )]]></code>
    </InvalidTemplateParam>
    <MixedAssignment>
      <code><![CDATA[$avgPriceValue]]></code>
      <code><![CDATA[$maxPriceValue]]></code>
      <code><![CDATA[$minPriceValue]]></code>
    </MixedAssignment>
    <MixedOperand>
      <code><![CDATA[$units[$i]]]></code>
    </MixedOperand>
    <PropertyNotSetInConstructor>
      <code><![CDATA[StatsCommand]]></code>
      <code><![CDATA[StatsCommand]]></code>
      <code><![CDATA[StatsCommand]]></code>
      <code><![CDATA[StatsCommand]]></code>
      <code><![CDATA[StatsCommand]]></code>
    </PropertyNotSetInConstructor>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[$this->option('detailed')]]></code>
    </RiskyTruthyFalsyComparison>
    <UndefinedMagicPropertyFetch>
      <code><![CDATA[$category->products_count]]></code>
    </UndefinedMagicPropertyFetch>
    <UnusedClass>
      <code><![CDATA[StatsCommand]]></code>
    </UnusedClass>
  </file>
  <file src="app/Console/Commands/UpdateExchangeRates.php">
    <ClassMustBeFinal>
      <code><![CDATA[UpdateExchangeRates]]></code>
    </ClassMustBeFinal>
    <PropertyNotSetInConstructor>
      <code><![CDATA[UpdateExchangeRates]]></code>
      <code><![CDATA[UpdateExchangeRates]]></code>
      <code><![CDATA[UpdateExchangeRates]]></code>
      <code><![CDATA[UpdateExchangeRates]]></code>
      <code><![CDATA[UpdateExchangeRates]]></code>
    </PropertyNotSetInConstructor>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[$this->option('seed')]]></code>
    </RiskyTruthyFalsyComparison>
    <UnusedClass>
      <code><![CDATA[UpdateExchangeRates]]></code>
    </UnusedClass>
  </file>
  <file src="app/Console/Commands/UpdatePricesCommand.php">
    <DocblockTypeContradiction>
      <code><![CDATA[(bool) $options['dryRun']]]></code>
    </DocblockTypeContradiction>
    <LessSpecificReturnStatement>
      <code><![CDATA[[
            'storeId' => $this->option('store'),
            'productId' => $this->option('product'),
            'dryRun' => (bool) $this->option('dry-run'),
        ]]]></code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType>
      <code><![CDATA[array{storeId: string|null, productId: string|null, dryRun: bool}]]></code>
    </MoreSpecificReturnType>
    <PropertyNotSetInConstructor>
      <code><![CDATA[$displayService]]></code>
      <code><![CDATA[$priceProcessor]]></code>
      <code><![CDATA[$queryBuilderService]]></code>
      <code><![CDATA[UpdatePricesCommand]]></code>
      <code><![CDATA[UpdatePricesCommand]]></code>
      <code><![CDATA[UpdatePricesCommand]]></code>
      <code><![CDATA[UpdatePricesCommand]]></code>
      <code><![CDATA[UpdatePricesCommand]]></code>
    </PropertyNotSetInConstructor>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[is_bool($options['dryRun'])]]></code>
    </RedundantConditionGivenDocblockType>
    <UnusedClass>
      <code><![CDATA[UpdatePricesCommand]]></code>
    </UnusedClass>
  </file>
  <file src="app/Console/Kernel.php">
    <ClassMustBeFinal>
      <code><![CDATA[Kernel]]></code>
    </ClassMustBeFinal>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[$this->app]]></code>
    </RedundantConditionGivenDocblockType>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[$this->app->environment('testing')]]></code>
    </RiskyTruthyFalsyComparison>
    <UnresolvableInclude>
      <code><![CDATA[require_once base_path('routes/console.php')]]></code>
    </UnresolvableInclude>
    <UnusedClass>
      <code><![CDATA[Kernel]]></code>
    </UnusedClass>
  </file>
  <file src="app/Contracts/FileSecurityService.php">
    <UnusedClass>
      <code><![CDATA[FileSecurityService]]></code>
    </UnusedClass>
  </file>
  <file src="app/Contracts/LoginAttemptService.php">
    <UnusedClass>
      <code><![CDATA[LoginAttemptService]]></code>
    </UnusedClass>
  </file>
  <file src="app/Contracts/PasswordResetService.php">
    <UnusedClass>
      <code><![CDATA[PasswordResetService]]></code>
    </UnusedClass>
  </file>
  <file src="app/Contracts/StoreAdapter.php">
    <UnusedClass>
      <code><![CDATA[StoreAdapter]]></code>
    </UnusedClass>
  </file>
  <file src="app/Contracts/UserBanService.php">
    <UnusedClass>
      <code><![CDATA[UserBanService]]></code>
    </UnusedClass>
  </file>
  <file src="app/DTO/AnalysisResult.php">
    <ClassMustBeFinal>
      <code><![CDATA[AnalysisResult]]></code>
    </ClassMustBeFinal>
    <UnusedClass>
      <code><![CDATA[AnalysisResult]]></code>
    </UnusedClass>
  </file>
  <file src="app/DataObjects/Ai/Stage.php">
    <PossiblyUnusedProperty>
      <code><![CDATA[$required]]></code>
    </PossiblyUnusedProperty>
  </file>
  <file src="app/DataObjects/Ai/StageResult.php">
    <PossiblyUnusedProperty>
      <code><![CDATA[$duration]]></code>
      <code><![CDATA[$errors]]></code>
      <code><![CDATA[$output]]></code>
      <code><![CDATA[$timestamp]]></code>
    </PossiblyUnusedProperty>
  </file>
  <file src="app/DataObjects/StorageBreakdown.php">
    <PossiblyUnusedProperty>
      <code><![CDATA[$path]]></code>
      <code><![CDATA[$sizeBytes]]></code>
      <code><![CDATA[$sizeMb]]></code>
    </PossiblyUnusedProperty>
  </file>
  <file src="app/DataObjects/StorageStatistics.php">
    <InvalidDocblockParamName>
      <code><![CDATA[$file_stats]]></code>
    </InvalidDocblockParamName>
    <PossiblyUnusedProperty>
      <code><![CDATA[$breakdown]]></code>
      <code><![CDATA[$config]]></code>
      <code><![CDATA[$fileStats]]></code>
      <code><![CDATA[$recommendations]]></code>
      <code><![CDATA[$usage]]></code>
    </PossiblyUnusedProperty>
  </file>
  <file src="app/Enums/NotificationStatus.php">
    <ImplementedReturnTypeMismatch>
      <code><![CDATA[list{0?: App\Enums\NotificationStatus::PENDING|App\Enums\NotificationStatus::SENT, 1?: App\Enums\NotificationStatus::FAILED, 2?: App\Enums\NotificationStatus::CANCELLED}]]></code>
    </ImplementedReturnTypeMismatch>
    <ParamNameMismatch>
      <code><![CDATA[$status]]></code>
    </ParamNameMismatch>
    <PossiblyUnusedMethod>
      <code><![CDATA[canTransitionTo]]></code>
      <code><![CDATA[hasPermission]]></code>
      <code><![CDATA[isAdmin]]></code>
    </PossiblyUnusedMethod>
    <UndefinedDocblockClass>
      <code><![CDATA[list{0?: App\Enums\NotificationStatus::PENDING|App\Enums\NotificationStatus::SENT, 1?: App\Enums\NotificationStatus::FAILED, 2?: App\Enums\NotificationStatus::CANCELLED}]]></code>
    </UndefinedDocblockClass>
  </file>
  <file src="app/Enums/OrderStatus.php">
    <ImplementedReturnTypeMismatch>
      <code><![CDATA[list{0?: App\Enums\OrderStatus::DELIVERED|App\Enums\OrderStatus::PROCESSING|App\Enums\OrderStatus::SHIPPED, 1?: App\Enums\OrderStatus::CANCELLED}]]></code>
    </ImplementedReturnTypeMismatch>
    <ParamNameMismatch>
      <code><![CDATA[$targetStatus]]></code>
    </ParamNameMismatch>
    <PossiblyUnusedMethod>
      <code><![CDATA[canTransitionTo]]></code>
      <code><![CDATA[hasPermission]]></code>
      <code><![CDATA[isAdmin]]></code>
      <code><![CDATA[options]]></code>
    </PossiblyUnusedMethod>
    <UndefinedDocblockClass>
      <code><![CDATA[list{0?: App\Enums\OrderStatus::DELIVERED|App\Enums\OrderStatus::PROCESSING|App\Enums\OrderStatus::SHIPPED, 1?: App\Enums\OrderStatus::CANCELLED}]]></code>
    </UndefinedDocblockClass>
  </file>
  <file src="app/Enums/UserRole.php">
    <ImplementedReturnTypeMismatch>
      <code><![CDATA[list{0: string, 1: string, 2?: 'manage_orders'|'manage_wishlist'|'view_analytics', 3?: 'manage_categories'|'write_reviews', 4?: 'manage_brands', 5?: 'view_analytics', 6?: 'manage_settings'}]]></code>
      <code><![CDATA[list{0?: App\Enums\UserRole::ADMIN|App\Enums\UserRole::MODERATOR|App\Enums\UserRole::USER}]]></code>
    </ImplementedReturnTypeMismatch>
    <ParamNameMismatch>
      <code><![CDATA[$targetRole]]></code>
    </ParamNameMismatch>
    <PossiblyUnusedMethod>
      <code><![CDATA[canTransitionTo]]></code>
      <code><![CDATA[hasPermission]]></code>
      <code><![CDATA[isAdmin]]></code>
      <code><![CDATA[isModerator]]></code>
      <code><![CDATA[options]]></code>
    </PossiblyUnusedMethod>
    <UndefinedDocblockClass>
      <code><![CDATA[list{0?: App\Enums\UserRole::ADMIN|App\Enums\UserRole::MODERATOR|App\Enums\UserRole::USER}]]></code>
    </UndefinedDocblockClass>
  </file>
  <file src="app/Exceptions/GlobalExceptionHandler.php">
    <ClassMustBeFinal>
      <code><![CDATA[GlobalExceptionHandler]]></code>
    </ClassMustBeFinal>
    <InvalidReturnStatement>
      <code><![CDATA[[
            ValidationException::class => fn ($exception): \Illuminate\Http\JsonResponse => $this->handleValidationException($exception),
            AuthenticationException::class => fn (): \Illuminate\Http\JsonResponse => $this->handleAuthenticationException(),
            AuthorizationException::class => fn (): \Illuminate\Http\JsonResponse => $this->handleAuthorizationException(),
            ModelNotFoundException::class => fn (): \Illuminate\Http\JsonResponse => $this->handleModelNotFoundException(),
            QueryException::class => fn ($exception): \Illuminate\Http\JsonResponse => $this->handleQueryException($exception),
            NotFoundHttpException::class => fn (): \Illuminate\Http\JsonResponse => $this->handleNotFoundHttpException(),
            MethodNotAllowedHttpException::class => fn ($exception): \Illuminate\Http\JsonResponse => $this->handleMethodNotAllowedHttpException($exception),
            HttpException::class => fn ($exception): \Illuminate\Http\JsonResponse => $this->handleHttpException($exception),
        ]]]></code>
      <code><![CDATA[[
            ValidationException::class => fn (ValidationException $exception) => redirect()->back()->withErrors($exception->errors())->withInput(),
            AuthenticationException::class => fn () => redirect()->guest(route('login')),
            AuthorizationException::class => fn () => response()->view('errors.403', [], 403),
            ModelNotFoundException::class => fn () => response()->view('errors.404', [], 404),
            NotFoundHttpException::class => fn () => response()->view('errors.404', [], 404),
        ]]]></code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code><![CDATA[array{'Illuminate\\Validation\\ValidationException'::class: \Closure(mixed):JsonResponse, 'Illuminate\\Auth\\AuthenticationException'::class: \Closure():JsonResponse, 'Illuminate\\Auth\\Access\\AuthorizationException'::class: \Closure():JsonResponse, 'Illuminate\\Database\\Eloquent\\ModelNotFoundException'::class: \Closure():JsonResponse, 'Illuminate\\Database\\QueryException'::class: \Closure(mixed):JsonResponse, 'Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException'::class: \Closure():JsonResponse, 'Symfony\\Component\\HttpKernel\\Exception\\MethodNotAllowedHttpException'::class: \Closure(mixed):JsonResponse, 'Symfony\\Component\\HttpKernel\\Exception\\HttpException'::class: \Closure(mixed):JsonResponse}]]></code>
      <code><![CDATA[array{'Illuminate\\Validation\\ValidationException'::class: \Closure(mixed):\Illuminate\Http\RedirectResponse, 'Illuminate\\Auth\\AuthenticationException'::class: \Closure():\Illuminate\Http\RedirectResponse, 'Illuminate\\Auth\\Access\\AuthorizationException'::class: \Closure():\Illuminate\Http\Response, 'Illuminate\\Database\\Eloquent\\ModelNotFoundException'::class: \Closure():\Illuminate\Http\Response, 'Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException'::class: \Closure():\Illuminate\Http\Response}]]></code>
    </InvalidReturnType>
    <MissingClosureParamType>
      <code><![CDATA[$exception]]></code>
      <code><![CDATA[$exception]]></code>
      <code><![CDATA[$exception]]></code>
      <code><![CDATA[$exception]]></code>
    </MissingClosureParamType>
    <MixedArgument>
      <code><![CDATA[$exception]]></code>
      <code><![CDATA[$exception]]></code>
      <code><![CDATA[$exception]]></code>
      <code><![CDATA[$exception]]></code>
    </MixedArgument>
    <MixedArgumentTypeCoercion>
      <code><![CDATA[['allowed_methods' => $exception->getHeaders()['Allow'] ?? []]]]></code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment>
      <code><![CDATA[$adminEmails]]></code>
    </MixedAssignment>
    <ParamNameMismatch>
      <code><![CDATA[$exception]]></code>
      <code><![CDATA[$exception]]></code>
    </ParamNameMismatch>
    <PossiblyNullOperand>
      <code><![CDATA[now()->toISOString()]]></code>
    </PossiblyNullOperand>
    <TooManyArguments>
      <code><![CDATA[$handler($exception)]]></code>
      <code><![CDATA[$handler($exception, $request)]]></code>
    </TooManyArguments>
    <UndefinedInterfaceMethod>
      <code><![CDATA[id]]></code>
    </UndefinedInterfaceMethod>
    <UnusedClass>
      <code><![CDATA[GlobalExceptionHandler]]></code>
    </UnusedClass>
  </file>
  <file src="app/Exceptions/Handler.php">
    <ClassMustBeFinal>
      <code><![CDATA[Handler]]></code>
    </ClassMustBeFinal>
    <DocblockTypeContradiction>
      <code><![CDATA['unknown']]></code>
    </DocblockTypeContradiction>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[request()->url()]]></code>
    </RedundantConditionGivenDocblockType>
    <UnusedClass>
      <code><![CDATA[Handler]]></code>
    </UnusedClass>
  </file>
  <file src="app/Exceptions/ProductUpdate.php">
    <ClassMustBeFinal>
      <code><![CDATA[ProductUpdate]]></code>
    </ClassMustBeFinal>
    <UnusedClass>
      <code><![CDATA[ProductUpdate]]></code>
    </UnusedClass>
  </file>
  <file src="app/Helpers/OrderHelper.php">
    <MixedAssignment>
      <code><![CDATA[$status]]></code>
      <code><![CDATA[$status]]></code>
    </MixedAssignment>
    <MixedMethodCall>
      <code><![CDATA[addDays]]></code>
    </MixedMethodCall>
    <MixedReturnStatement>
      <code><![CDATA[$order->shipped_at->addDays(3)]]></code>
    </MixedReturnStatement>
    <UndefinedMagicPropertyFetch>
      <code><![CDATA[$order->shipped_at]]></code>
      <code><![CDATA[$order->status_enum]]></code>
      <code><![CDATA[$order->status_enum]]></code>
      <code><![CDATA[$order->status_enum]]></code>
      <code><![CDATA[$order->status_enum]]></code>
    </UndefinedMagicPropertyFetch>
    <UnusedClass>
      <code><![CDATA[OrderHelper]]></code>
    </UnusedClass>
  </file>
  <file src="app/Helpers/PriceHelper.php">
    <InvalidOperand>
      <code><![CDATA[($comparePrice - $originalPrice) / $originalPrice * 100]]></code>
      <code><![CDATA[array_sum($allPrices) / count($allPrices)]]></code>
    </InvalidOperand>
    <MixedArgument>
      <code><![CDATA[$currencyCode]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code><![CDATA[$currencyCode]]></code>
      <code><![CDATA[$currencyCode]]></code>
    </MixedAssignment>
    <MixedMethodCall>
      <code><![CDATA[first]]></code>
      <code><![CDATA[first]]></code>
      <code><![CDATA[first]]></code>
    </MixedMethodCall>
    <RedundantCastGivenDocblockType>
      <code><![CDATA[(string) $currency->symbol]]></code>
    </RedundantCastGivenDocblockType>
    <UndefinedMagicMethod>
      <code><![CDATA[Currency::where('code', $currencyCode)]]></code>
      <code><![CDATA[Currency::where('code', $fromCurrency)]]></code>
      <code><![CDATA[Currency::where('code', $toCurrency)]]></code>
    </UndefinedMagicMethod>
    <UndefinedMagicPropertyFetch>
      <code><![CDATA[$from->exchange_rate]]></code>
      <code><![CDATA[$to->exchange_rate]]></code>
    </UndefinedMagicPropertyFetch>
    <UnusedClass>
      <code><![CDATA[PriceHelper]]></code>
    </UnusedClass>
  </file>
  <file src="app/Http/Controllers/Admin/AIControlPanelController.php">
    <ClassMustBeFinal>
      <code><![CDATA[AIControlPanelController]]></code>
    </ClassMustBeFinal>
  </file>
  <file src="app/Http/Controllers/Admin/DashboardController.php">
    <InvalidOperand>
      <code><![CDATA[$memoryUsage / $memoryLimitBytes * 100]]></code>
      <code><![CDATA[$used / $total * 100]]></code>
    </InvalidOperand>
    <LessSpecificReturnStatement>
      <code><![CDATA[[
            'users' => $this->getUserStatistics(),
            'products' => $this->getProductStatistics(),
            'orders' => $this->getOrderStatistics(),
            'revenue' => $this->getRevenueStatistics(),
            'security' => $this->getSecurityStatistics(),
            'system' => $this->getSystemStatistics(),
            'recent_activities' => $this->getRecentActivities(),
            'charts' => $this->getChartData(),
        ]]]></code>
      <code><![CDATA[view('admin.dashboard', ['statistics' => $statistics])]]></code>
    </LessSpecificReturnStatement>
    <MissingClosureParamType>
      <code><![CDATA[$query]]></code>
      <code><![CDATA[$query]]></code>
      <code><![CDATA[$query]]></code>
      <code><![CDATA[$query]]></code>
      <code><![CDATA[$query]]></code>
      <code><![CDATA[$query]]></code>
      <code><![CDATA[$query]]></code>
      <code><![CDATA[$query]]></code>
      <code><![CDATA[$query]]></code>
      <code><![CDATA[$query]]></code>
      <code><![CDATA[$query]]></code>
      <code><![CDATA[$query]]></code>
    </MissingClosureParamType>
    <MissingClosureReturnType>
      <code><![CDATA[fn ($query) => $query]]></code>
      <code><![CDATA[fn ($query) => $query]]></code>
      <code><![CDATA[fn ($query) => $query->where('is_active', true)]]></code>
      <code><![CDATA[fn ($query) => $query->where('is_active', true)]]></code>
      <code><![CDATA[fn ($query) => $query->where('is_featured', true)]]></code>
      <code><![CDATA[fn ($query) => $query->where('stock_quantity', '>', 0)->where('stock_quantity', '<=', 10)]]></code>
      <code><![CDATA[fn ($query) => $query->where('stock_quantity', 0)]]></code>
      <code><![CDATA[fn ($query) => $query->whereBetween('created_at', [now()->startOfWeek(), now()->endOfWeek()])]]></code>
      <code><![CDATA[fn ($query) => $query->whereDate('created_at', today())]]></code>
      <code><![CDATA[fn ($query) => $query->whereDate('created_at', today())]]></code>
      <code><![CDATA[fn ($query) => $query->whereMonth('created_at', now()->month)]]></code>
      <code><![CDATA[fn ($query) => $query->whereNotNull('email_verified_at')]]></code>
    </MissingClosureReturnType>
    <MixedAssignment>
      <code><![CDATA[$result]]></code>
      <code><![CDATA[$result]]></code>
      <code><![CDATA[$result]]></code>
    </MixedAssignment>
    <MixedMethodCall>
      <code><![CDATA[count]]></code>
      <code><![CDATA[count]]></code>
      <code><![CDATA[count]]></code>
      <code><![CDATA[where]]></code>
      <code><![CDATA[where]]></code>
      <code><![CDATA[where]]></code>
      <code><![CDATA[where]]></code>
      <code><![CDATA[where]]></code>
      <code><![CDATA[where]]></code>
      <code><![CDATA[whereBetween]]></code>
      <code><![CDATA[whereDate]]></code>
      <code><![CDATA[whereDate]]></code>
      <code><![CDATA[whereMonth]]></code>
      <code><![CDATA[whereNotNull]]></code>
    </MixedMethodCall>
    <MixedReturnStatement>
      <code><![CDATA[$condition($this->product)->count()]]></code>
      <code><![CDATA[$condition($this->user)->count()]]></code>
    </MixedReturnStatement>
    <MixedReturnTypeCoercion>
      <code><![CDATA[$data]]></code>
      <code><![CDATA[[
                'status' => $status ? 'working' : 'error',
                'driver' => is_string(config('cache.default')) ? config('cache.default') : 'unknown',
            ]]]></code>
      <code><![CDATA[[
                'status' => 'error',
                'driver' => is_string(config('cache.default')) ? config('cache.default') : 'unknown',
                'error' => $e->getMessage(),
            ]]]></code>
      <code><![CDATA[array<int, array<string, int|string>>]]></code>
      <code><![CDATA[array<string, string>]]></code>
    </MixedReturnTypeCoercion>
    <MoreSpecificReturnType>
      <code><![CDATA[View]]></code>
      <code><![CDATA[array{users: array<string, array<string, int>|int>, products: array<string, int>, orders: array<string, int>, revenue: array<string, int>, security: array<string, array<string, int|string>|int|string>, system: array<string, array<string, int|string>|int|string>, recent_activities: array<string, array<string, int|string>|int|string>, charts: array<string, array<int, array<string, int|string>>>}]]></code>
    </MoreSpecificReturnType>
    <UndefinedInterfaceMethod>
      <code><![CDATA[forget]]></code>
      <code><![CDATA[forget]]></code>
      <code><![CDATA[get]]></code>
      <code><![CDATA[get]]></code>
      <code><![CDATA[put]]></code>
      <code><![CDATA[put]]></code>
    </UndefinedInterfaceMethod>
    <UndefinedMagicMethod>
      <code><![CDATA[get]]></code>
      <code><![CDATA[whereDate]]></code>
    </UndefinedMagicMethod>
    <UnusedClass>
      <code><![CDATA[DashboardController]]></code>
    </UnusedClass>
  </file>
  <file src="app/Http/Controllers/AdminController.php">
    <ClassMustBeFinal>
      <code><![CDATA[AdminController]]></code>
    </ClassMustBeFinal>
    <MixedAssignment>
      <code><![CDATA[$recentProducts]]></code>
      <code><![CDATA[$recentUsers]]></code>
      <code><![CDATA[$user]]></code>
      <code><![CDATA[$user]]></code>
      <code><![CDATA[$users]]></code>
    </MixedAssignment>
    <MixedMethodCall>
      <code><![CDATA[get]]></code>
      <code><![CDATA[get]]></code>
      <code><![CDATA[paginate]]></code>
      <code><![CDATA[take]]></code>
      <code><![CDATA[take]]></code>
    </MixedMethodCall>
    <MixedPropertyFetch>
      <code><![CDATA[$user->is_admin]]></code>
      <code><![CDATA[$user->is_admin]]></code>
    </MixedPropertyFetch>
    <PossiblyUnusedMethod>
      <code><![CDATA[dashboard]]></code>
      <code><![CDATA[users]]></code>
    </PossiblyUnusedMethod>
    <UndefinedInterfaceMethod>
      <code><![CDATA[user]]></code>
      <code><![CDATA[user]]></code>
    </UndefinedInterfaceMethod>
    <UndefinedMagicMethod>
      <code><![CDATA[Product::count()]]></code>
      <code><![CDATA[Product::latest()]]></code>
      <code><![CDATA[User::count()]]></code>
      <code><![CDATA[User::latest()]]></code>
      <code><![CDATA[User::latest()]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/AnalyticsController.php">
    <ClassMustBeFinal>
      <code><![CDATA[AnalyticsController]]></code>
    </ClassMustBeFinal>
    <DocblockTypeContradiction>
      <code><![CDATA[! $user]]></code>
      <code><![CDATA[! $user]]></code>
      <code><![CDATA[$user]]></code>
      <code><![CDATA[$user]]></code>
      <code><![CDATA[[]]]></code>
      <code><![CDATA[is_array($validated)]]></code>
    </DocblockTypeContradiction>
    <InvalidArgument>
      <code><![CDATA[$data]]></code>
    </InvalidArgument>
    <MixedAssignment>
      <code><![CDATA[$actionValue]]></code>
    </MixedAssignment>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[is_array($dataValue)]]></code>
    </RedundantConditionGivenDocblockType>
    <UnusedClass>
      <code><![CDATA[AnalyticsController]]></code>
    </UnusedClass>
  </file>
  <file src="app/Http/Controllers/Api/AIController.php">
    <ClassMustBeFinal>
      <code><![CDATA[AIController]]></code>
    </ClassMustBeFinal>
    <MixedArgument>
      <code><![CDATA[$name]]></code>
      <code><![CDATA[$text]]></code>
      <code><![CDATA[$type]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code><![CDATA[$description]]></code>
      <code><![CDATA[$name]]></code>
      <code><![CDATA[$price]]></code>
      <code><![CDATA[$text]]></code>
      <code><![CDATA[$type]]></code>
    </MixedAssignment>
    <PossiblyUnusedMethod>
      <code><![CDATA[__construct]]></code>
      <code><![CDATA[analyze]]></code>
      <code><![CDATA[classifyProduct]]></code>
    </PossiblyUnusedMethod>
    <UnusedVariable>
      <code><![CDATA[$description]]></code>
      <code><![CDATA[$price]]></code>
    </UnusedVariable>
  </file>
  <file src="app/Http/Controllers/Api/Admin/BrandController.php">
    <ClassMustBeFinal>
      <code><![CDATA[BrandController]]></code>
    </ClassMustBeFinal>
    <DocblockTypeContradiction>
      <code><![CDATA[[]]]></code>
      <code><![CDATA[[]]]></code>
    </DocblockTypeContradiction>
    <PossiblyUnusedMethod>
      <code><![CDATA[destroy]]></code>
      <code><![CDATA[index]]></code>
      <code><![CDATA[show]]></code>
      <code><![CDATA[store]]></code>
      <code><![CDATA[update]]></code>
    </PossiblyUnusedMethod>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[is_array($validated)]]></code>
      <code><![CDATA[is_array($validated)]]></code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="app/Http/Controllers/Api/Admin/CategoryController.php">
    <ClassMustBeFinal>
      <code><![CDATA[CategoryController]]></code>
    </ClassMustBeFinal>
    <DocblockTypeContradiction>
      <code><![CDATA[[]]]></code>
      <code><![CDATA[[]]]></code>
    </DocblockTypeContradiction>
    <PossiblyUnusedMethod>
      <code><![CDATA[destroy]]></code>
      <code><![CDATA[index]]></code>
      <code><![CDATA[show]]></code>
      <code><![CDATA[store]]></code>
      <code><![CDATA[update]]></code>
    </PossiblyUnusedMethod>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[is_array($validated)]]></code>
      <code><![CDATA[is_array($validated)]]></code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="app/Http/Controllers/Api/AuthController.php">
    <ClassMustBeFinal>
      <code><![CDATA[AuthController]]></code>
    </ClassMustBeFinal>
    <MixedArgument>
      <code><![CDATA[$user->password]]></code>
      <code><![CDATA[$validated['email']]]></code>
    </MixedArgument>
    <MixedArrayAccess>
      <code><![CDATA[$validated['email']]]></code>
      <code><![CDATA[$validated['password']]]></code>
    </MixedArrayAccess>
    <MixedAssignment>
      <code><![CDATA[$token]]></code>
      <code><![CDATA[$token]]></code>
      <code><![CDATA[$user]]></code>
      <code><![CDATA[$validated]]></code>
    </MixedAssignment>
    <MixedMethodCall>
      <code><![CDATA[createToken]]></code>
    </MixedMethodCall>
    <MixedPropertyFetch>
      <code><![CDATA[$user->createToken('api-token')->plainTextToken]]></code>
    </MixedPropertyFetch>
    <PossiblyUnusedMethod>
      <code><![CDATA[login]]></code>
      <code><![CDATA[logout]]></code>
      <code><![CDATA[me]]></code>
      <code><![CDATA[register]]></code>
    </PossiblyUnusedMethod>
    <RedundantCondition>
      <code><![CDATA[$user->currentAccessToken()?->delete()]]></code>
    </RedundantCondition>
    <TypeDoesNotContainNull>
      <code><![CDATA[$user->currentAccessToken()]]></code>
    </TypeDoesNotContainNull>
    <UndefinedInterfaceMethod>
      <code><![CDATA[delete]]></code>
    </UndefinedInterfaceMethod>
    <UndefinedMagicMethod>
      <code><![CDATA[User::create([
            'name' => $name,
            'email' => $email,
            'password' => Hash::make($password),
        ])]]></code>
      <code><![CDATA[createToken]]></code>
      <code><![CDATA[first]]></code>
    </UndefinedMagicMethod>
    <UndefinedMagicPropertyFetch>
      <code><![CDATA[$user->password]]></code>
    </UndefinedMagicPropertyFetch>
  </file>
  <file src="app/Http/Controllers/Api/BaseApiController.php">
    <PossiblyInvalidCast>
      <code><![CDATA[$request->header('API-Version', '1.0')]]></code>
    </PossiblyInvalidCast>
    <PossiblyUnusedMethod>
      <code><![CDATA[forbiddenResponse]]></code>
      <code><![CDATA[getApiVersion]]></code>
      <code><![CDATA[getRateLimitInfo]]></code>
      <code><![CDATA[notFoundResponse]]></code>
      <code><![CDATA[serverErrorResponse]]></code>
      <code><![CDATA[unauthorizedResponse]]></code>
      <code><![CDATA[validationErrorResponse]]></code>
    </PossiblyUnusedMethod>
    <PossiblyUnusedProperty>
      <code><![CDATA[$maxPerPage]]></code>
      <code><![CDATA[$perPage]]></code>
    </PossiblyUnusedProperty>
  </file>
  <file src="app/Http/Controllers/Api/DocumentationController.php">
    <ClassMustBeFinal>
      <code><![CDATA[DocumentationController]]></code>
    </ClassMustBeFinal>
    <MixedAssignment>
      <code><![CDATA[$cacheValue]]></code>
    </MixedAssignment>
    <PossiblyUnusedMethod>
      <code><![CDATA[index]]></code>
    </PossiblyUnusedMethod>
  </file>
  <file src="app/Http/Controllers/Api/OrderController.php">
    <ClassMustBeFinal>
      <code><![CDATA[OrderController]]></code>
    </ClassMustBeFinal>
    <InvalidArgument>
      <code><![CDATA[new OrderResource($order)]]></code>
      <code><![CDATA[new OrderResource($order->load('items.product'))]]></code>
    </InvalidArgument>
    <InvalidOperand>
      <code><![CDATA[$price * $quantity]]></code>
      <code><![CDATA[$totalAmount += $subtotal]]></code>
    </InvalidOperand>
    <MixedArrayAccess>
      <code><![CDATA[$payload['meta']]]></code>
    </MixedArrayAccess>
    <MixedAssignment>
      <code><![CDATA[$order]]></code>
      <code><![CDATA[$orders]]></code>
      <code><![CDATA[$payload]]></code>
      <code><![CDATA[$product]]></code>
      <code><![CDATA[$query]]></code>
    </MixedAssignment>
    <MixedMethodCall>
      <code><![CDATA[create]]></code>
      <code><![CDATA[items]]></code>
      <code><![CDATA[load]]></code>
      <code><![CDATA[orderBy]]></code>
      <code><![CDATA[paginate]]></code>
      <code><![CDATA[update]]></code>
      <code><![CDATA[where]]></code>
      <code><![CDATA[with]]></code>
    </MixedMethodCall>
    <MixedPropertyFetch>
      <code><![CDATA[$product->price]]></code>
    </MixedPropertyFetch>
    <PossiblyInvalidOperand>
      <code><![CDATA[Auth::id()]]></code>
    </PossiblyInvalidOperand>
    <PossiblyNullOperand>
      <code><![CDATA[Auth::id()]]></code>
    </PossiblyNullOperand>
    <PossiblyUnusedMethod>
      <code><![CDATA[index]]></code>
      <code><![CDATA[show]]></code>
      <code><![CDATA[store]]></code>
    </PossiblyUnusedMethod>
    <UndefinedMagicMethod>
      <code><![CDATA[Order::create([
            'user_id' => Auth::id(),
            'order_number' => 'ORD-'.time().'-'.Auth::id(),
            'status' => OrderStatus::PENDING,
            'total_amount' => 0, // Calculate based on items
            'subtotal' => 0, // Calculate based on items
            'tax_amount' => 0,
            'shipping_amount' => 0,
            'discount_amount' => 0,
            'currency' => 'USD',
            'shipping_address' => json_encode($validated['shipping_address']),
            'billing_address' => json_encode($validated['billing_address']),
        ])]]></code>
      <code><![CDATA[Order::where('user_id', Auth::id())]]></code>
      <code><![CDATA[\App\Models\Product::find($productId)]]></code>
    </UndefinedMagicMethod>
    <UndefinedMagicPropertyFetch>
      <code><![CDATA[$order->user_id]]></code>
      <code><![CDATA[$request->status]]></code>
    </UndefinedMagicPropertyFetch>
  </file>
  <file src="app/Http/Controllers/Api/PriceSearchController.php">
    <ClassMustBeFinal>
      <code><![CDATA[PriceSearchController]]></code>
    </ClassMustBeFinal>
    <DocblockTypeContradiction>
      <code><![CDATA['Unknown Store']]></code>
      <code><![CDATA['Unknown Store']]></code>
      <code><![CDATA[is_array($serverVal) || is_object($serverVal)]]></code>
      <code><![CDATA[is_array($serverVal) || is_object($serverVal) || is_bool($serverVal)]]></code>
      <code><![CDATA[is_array($serverVal) || is_object($serverVal) || is_bool($serverVal)]]></code>
      <code><![CDATA[is_bool($serverVal)]]></code>
      <code><![CDATA[is_object($serverVal)]]></code>
    </DocblockTypeContradiction>
    <InvalidTemplateParam>
      <code><![CDATA[$product->priceOffers->map(/**
                     * @return array<scalar|null>
                     *
                     * @psalm-return array{id: int, price: float, store_id: int, store: string, store_url: string|null, is_available: bool}
                     */
                        static function (PriceOffer $offer): array {
                            return [
                                'id' => $offer->id,
                                'price' => $offer->price,
                                'store_id' => $offer->store_id,
                                'store' => $offer->store ? $offer->store->name : 'Unknown Store',
                                'store_url' => $offer->product_url,
                                'is_available' => (bool) $offer->is_available,
                            ];
                        }
                    )]]></code>
    </InvalidTemplateParam>
    <MissingClosureParamType>
      <code><![CDATA[$query]]></code>
      <code><![CDATA[$query]]></code>
      <code><![CDATA[$query]]></code>
    </MissingClosureParamType>
    <MixedArrayAccess>
      <code><![CDATA[$headerValues[0]]]></code>
    </MixedArrayAccess>
    <MixedAssignment>
      <code><![CDATA[$candidate]]></code>
      <code><![CDATA[$candidate]]></code>
      <code><![CDATA[$candidate]]></code>
      <code><![CDATA[$hv]]></code>
      <code><![CDATA[$productId]]></code>
      <code><![CDATA[$productName]]></code>
      <code><![CDATA[$value]]></code>
    </MixedAssignment>
    <NoValue>
      <code><![CDATA[$headerValues]]></code>
    </NoValue>
    <PossiblyUnusedMethod>
      <code><![CDATA[getCountryCode]]></code>
      <code><![CDATA[search]]></code>
      <code><![CDATA[supportedStores]]></code>
    </PossiblyUnusedMethod>
    <PossiblyUnusedParam>
      <code><![CDATA[$request]]></code>
    </PossiblyUnusedParam>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[$bestOffer && $bestOffer->store]]></code>
      <code><![CDATA[$bestOffer->store]]></code>
      <code><![CDATA[$bestOffer->store]]></code>
      <code><![CDATA[$offer->store]]></code>
    </RedundantConditionGivenDocblockType>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[$productId]]></code>
      <code><![CDATA[$productName]]></code>
    </RiskyTruthyFalsyComparison>
    <TypeDoesNotContainType>
      <code><![CDATA[is_array($headerValues)]]></code>
    </TypeDoesNotContainType>
    <UndefinedMagicPropertyFetch>
      <code><![CDATA[$bestOffer->is_available]]></code>
      <code><![CDATA[$bestOffer->is_available]]></code>
      <code><![CDATA[$offer->is_available]]></code>
      <code><![CDATA[$product->id]]></code>
      <code><![CDATA[$product->priceOffers]]></code>
    </UndefinedMagicPropertyFetch>
  </file>
  <file src="app/Http/Controllers/Api/ProductController.php">
    <InvalidArgument>
      <code><![CDATA[$query]]></code>
    </InvalidArgument>
    <MissingClosureParamType>
      <code><![CDATA[$store]]></code>
    </MissingClosureParamType>
    <MixedArgument>
      <code><![CDATA[$product]]></code>
      <code><![CDATA[$product]]></code>
      <code><![CDATA[$validated]]></code>
    </MixedArgument>
    <MixedArrayAccess>
      <code><![CDATA[$validated['name']]]></code>
    </MixedArrayAccess>
    <MixedArrayAssignment>
      <code><![CDATA[$validated['slug']]]></code>
    </MixedArrayAssignment>
    <MixedAssignment>
      <code><![CDATA[$brandId]]></code>
      <code><![CDATA[$categoryId]]></code>
      <code><![CDATA[$isFeatured]]></code>
      <code><![CDATA[$maxPrice]]></code>
      <code><![CDATA[$minPrice]]></code>
      <code><![CDATA[$nameValue]]></code>
      <code><![CDATA[$product]]></code>
      <code><![CDATA[$product]]></code>
      <code><![CDATA[$response['stores']]]></code>
      <code><![CDATA[$sort]]></code>
      <code><![CDATA[$validated]]></code>
      <code><![CDATA[$validated]]></code>
      <code><![CDATA[$value]]></code>
    </MixedAssignment>
    <MixedMethodCall>
      <code><![CDATA[all]]></code>
      <code><![CDATA[exists]]></code>
      <code><![CDATA[exists]]></code>
      <code><![CDATA[map]]></code>
      <code><![CDATA[toIso8601String]]></code>
      <code><![CDATA[toIso8601String]]></code>
      <code><![CDATA[update]]></code>
      <code><![CDATA[where]]></code>
    </MixedMethodCall>
    <MixedOperand>
      <code><![CDATA[$value]]></code>
    </MixedOperand>
    <MixedPropertyFetch>
      <code><![CDATA[$store->id]]></code>
      <code><![CDATA[$store->name]]></code>
    </MixedPropertyFetch>
    <MixedReturnStatement>
      <code><![CDATA[$validated['slug'] ?? '']]></code>
      <code><![CDATA[$validated['slug'] ?? '']]></code>
    </MixedReturnStatement>
    <PossiblyUnusedMethod>
      <code><![CDATA[__construct]]></code>
      <code><![CDATA[index]]></code>
      <code><![CDATA[show]]></code>
      <code><![CDATA[store]]></code>
      <code><![CDATA[update]]></code>
    </PossiblyUnusedMethod>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[$product->brand]]></code>
      <code><![CDATA[$product->category]]></code>
      <code><![CDATA[$product->relationLoaded('brand') && $product->brand]]></code>
      <code><![CDATA[$product->relationLoaded('category') && $product->category]]></code>
    </RedundantConditionGivenDocblockType>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[$product->image]]></code>
    </RiskyTruthyFalsyComparison>
    <UndefinedClass>
      <code><![CDATA[\Validator]]></code>
    </UndefinedClass>
    <UndefinedMagicMethod>
      <code><![CDATA[Product::create($validated)]]></code>
      <code><![CDATA[Product::findOrFail($id)]]></code>
      <code><![CDATA[Product::where('slug', $slug)]]></code>
      <code><![CDATA[Product::where('slug', $slug)]]></code>
    </UndefinedMagicMethod>
    <UndefinedMagicPropertyFetch>
      <code><![CDATA[$product->created_at]]></code>
      <code><![CDATA[$product->stores]]></code>
      <code><![CDATA[$product->updated_at]]></code>
    </UndefinedMagicPropertyFetch>
    <UnusedParam>
      <code><![CDATA[$request]]></code>
    </UnusedParam>
  </file>
  <file src="app/Http/Controllers/Api/V2/BaseApiController.php">
    <InaccessibleMethod>
      <code><![CDATA[getMethodValue]]></code>
      <code><![CDATA[getPaginationLinks]]></code>
    </InaccessibleMethod>
    <MixedArgumentTypeCoercion>
      <code><![CDATA[$meta]]></code>
      <code><![CDATA[$meta]]></code>
      <code><![CDATA[$meta]]></code>
    </MixedArgumentTypeCoercion>
    <UnusedClass>
      <code><![CDATA[BaseApiController]]></code>
    </UnusedClass>
  </file>
  <file src="app/Http/Controllers/Auth/AuthController.php">
    <ClassMustBeFinal>
      <code><![CDATA[AuthController]]></code>
    </ClassMustBeFinal>
    <MissingClosureParamType>
      <code><![CDATA[$password]]></code>
      <code><![CDATA[$user]]></code>
    </MissingClosureParamType>
    <MixedArgument>
      <code><![CDATA[$password]]></code>
      <code><![CDATA[$status]]></code>
      <code><![CDATA[$validated['password']]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code><![CDATA[$status]]></code>
      <code><![CDATA[$user]]></code>
    </MixedAssignment>
    <MixedMethodCall>
      <code><![CDATA[forceFill]]></code>
      <code><![CDATA[save]]></code>
    </MixedMethodCall>
    <PossiblyNullOperand>
      <code><![CDATA[$request->ip()]]></code>
    </PossiblyNullOperand>
    <PossiblyUnusedMethod>
      <code><![CDATA[login]]></code>
      <code><![CDATA[logout]]></code>
      <code><![CDATA[register]]></code>
      <code><![CDATA[resetPassword]]></code>
      <code><![CDATA[sendResetLinkEmail]]></code>
      <code><![CDATA[showForgotPasswordForm]]></code>
      <code><![CDATA[showLoginForm]]></code>
      <code><![CDATA[showRegisterForm]]></code>
      <code><![CDATA[showResetPasswordForm]]></code>
    </PossiblyUnusedMethod>
    <UndefinedInterfaceMethod>
      <code><![CDATA[check]]></code>
      <code><![CDATA[check]]></code>
      <code><![CDATA[check]]></code>
      <code><![CDATA[check]]></code>
      <code><![CDATA[login]]></code>
      <code><![CDATA[logout]]></code>
    </UndefinedInterfaceMethod>
    <UndefinedMagicMethod>
      <code><![CDATA[User::create([
            'name' => $validated['name'],
            'email' => $validated['email'],
            'password' => Hash::make($validated['password']),
        ])]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/Auth/EmailVerificationController.php">
    <ClassMustBeFinal>
      <code><![CDATA[EmailVerificationController]]></code>
    </ClassMustBeFinal>
  </file>
  <file src="app/Http/Controllers/BackupController.php">
    <ClassMustBeFinal>
      <code><![CDATA[BackupController]]></code>
    </ClassMustBeFinal>
    <InvalidArgument>
      <code><![CDATA[$backups]]></code>
    </InvalidArgument>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[! $backup]]></code>
      <code><![CDATA[! $backup]]></code>
      <code><![CDATA[! $backup]]></code>
    </RiskyTruthyFalsyComparison>
    <UnusedClass>
      <code><![CDATA[BackupController]]></code>
    </UnusedClass>
  </file>
  <file src="app/Http/Controllers/BrandController.php">
    <ClassMustBeFinal>
      <code><![CDATA[BrandController]]></code>
    </ClassMustBeFinal>
    <LessSpecificReturnStatement>
      <code><![CDATA[view('brands.create')]]></code>
      <code><![CDATA[view('brands.edit', ['brand' => $brand])]]></code>
      <code><![CDATA[view('brands.index', ['brands' => $brands])]]></code>
      <code><![CDATA[view('brands.show', ['brand' => $brand])]]></code>
    </LessSpecificReturnStatement>
    <MixedArgumentTypeCoercion>
      <code><![CDATA[[
            'name' => $validated['name'],
            'slug' => $validated['slug'],
            'description' => $validated['description'] ?? null,
            'website_url' => $validated['website_url'] ?? null,
            'logo_url' => $validated['logo_url'] ?? null,
            'is_active' => true,
        ]]]></code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment>
      <code><![CDATA[$brand]]></code>
      <code><![CDATA[$brand]]></code>
      <code><![CDATA[$brand]]></code>
      <code><![CDATA[$brand]]></code>
    </MixedAssignment>
    <MixedMethodCall>
      <code><![CDATA[forceDelete]]></code>
      <code><![CDATA[update]]></code>
    </MixedMethodCall>
    <MixedOperand>
      <code><![CDATA[$brand->id]]></code>
    </MixedOperand>
    <MixedPropertyFetch>
      <code><![CDATA[$brand->id]]></code>
    </MixedPropertyFetch>
    <MoreSpecificReturnType>
      <code><![CDATA[View]]></code>
      <code><![CDATA[View]]></code>
      <code><![CDATA[View]]></code>
      <code><![CDATA[View]]></code>
    </MoreSpecificReturnType>
    <PossiblyUnusedMethod>
      <code><![CDATA[create]]></code>
      <code><![CDATA[destroy]]></code>
      <code><![CDATA[edit]]></code>
      <code><![CDATA[index]]></code>
      <code><![CDATA[show]]></code>
      <code><![CDATA[store]]></code>
      <code><![CDATA[update]]></code>
    </PossiblyUnusedMethod>
    <UndefinedMagicMethod>
      <code><![CDATA[Brand::find($id)]]></code>
      <code><![CDATA[Brand::find($id)]]></code>
      <code><![CDATA[Brand::find($id)]]></code>
      <code><![CDATA[findOrFail]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/CartController.php">
    <ClassMustBeFinal>
      <code><![CDATA[CartController]]></code>
    </ClassMustBeFinal>
    <DocblockTypeContradiction>
      <code><![CDATA[0]]></code>
      <code><![CDATA[0]]></code>
      <code><![CDATA[null]]></code>
      <code><![CDATA[null]]></code>
    </DocblockTypeContradiction>
    <MixedArgument>
      <code><![CDATA[$validated['attributes'] ?? []]]></code>
      <code><![CDATA[$validated['attributes'] ?? []]]></code>
    </MixedArgument>
    <MixedArrayAccess>
      <code><![CDATA[$validated['id']]]></code>
      <code><![CDATA[$validated['quantity']]]></code>
    </MixedArrayAccess>
    <MixedAssignment>
      <code><![CDATA[$validated]]></code>
    </MixedAssignment>
    <PossiblyUnusedMethod>
      <code><![CDATA[add]]></code>
      <code><![CDATA[addFromRequest]]></code>
      <code><![CDATA[clear]]></code>
      <code><![CDATA[index]]></code>
      <code><![CDATA[remove]]></code>
      <code><![CDATA[update]]></code>
    </PossiblyUnusedMethod>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[$product->price]]></code>
      <code><![CDATA[$product->price]]></code>
      <code><![CDATA[$product->slug]]></code>
      <code><![CDATA[$product->slug]]></code>
    </RedundantConditionGivenDocblockType>
    <UndefinedMagicMethod>
      <code><![CDATA[Product::findOrFail((int) $validated['product_id'])]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/CategoryController.php">
    <ClassMustBeFinal>
      <code><![CDATA[CategoryController]]></code>
    </ClassMustBeFinal>
  </file>
  <file src="app/Http/Controllers/ErrorController.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$logFiles]]></code>
    </ArgumentTypeCoercion>
    <InvalidArgument>
      <code><![CDATA[$systemHealth]]></code>
      <code><![CDATA[$systemHealth]]></code>
    </InvalidArgument>
    <InvalidDocblock>
      <code><![CDATA[$view]]></code>
    </InvalidDocblock>
    <LessSpecificReturnStatement>
      <code><![CDATA[[
                'overall' => 'unknown',
                'database' => ['status' => 'unknown'],
                'cache' => ['status' => 'unknown'],
                'storage' => ['status' => 'unknown'],
                'memory' => ['status' => 'unknown'],
                'disk_space' => ['status' => 'unknown'],
            ]]]></code>
      <code><![CDATA[view($view, ['error' => $error])]]></code>
      <code><![CDATA[view('admin.errors.index', [
            'errors' => $errors,
            'statistics' => $errorStats,
            'systemHealth' => $systemHealth,
        ])]]></code>
      <code><![CDATA[view('errors.404')]]></code>
    </LessSpecificReturnStatement>
    <MixedArgument>
      <code><![CDATA[$errors]]></code>
      <code><![CDATA[$logFiles]]></code>
      <code><![CDATA[$logFiles]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code><![CDATA[$errors]]></code>
      <code><![CDATA[$health['overall']]]></code>
      <code><![CDATA[$logFiles]]></code>
      <code><![CDATA[$logFiles]]></code>
    </MixedAssignment>
    <MixedReturnStatement>
      <code><![CDATA[$this->processErrorStatistics($logFiles ? $logFiles : [])]]></code>
    </MixedReturnStatement>
    <MixedReturnTypeCoercion>
      <code><![CDATA[$health]]></code>
      <code><![CDATA[array_slice($errors, 0, $limit)]]></code>
      <code><![CDATA[list<array{
     *     id: string,
     *     timestamp: string,
     *     level: string,
     *     type: string,
     *     message: string,
     *     context: array<string, string>
     * }>]]></code>
    </MixedReturnTypeCoercion>
    <MoreSpecificReturnType>
      <code><![CDATA[View|JsonResponse]]></code>
      <code><![CDATA[View|JsonResponse]]></code>
      <code><![CDATA[array{
     *     database: array{status: string, message: string},
     *     cache: array{status: string, message: string},
     *     storage: array{status: string, message: string},
     *     memory: array{status: string, message: string},
     *     disk_space: array{status: string, message: string},
     *     overall: string
     * }]]></code>
    </MoreSpecificReturnType>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[$logFiles]]></code>
      <code><![CDATA[$logFiles]]></code>
    </RiskyTruthyFalsyComparison>
    <UndefinedMagicMethod>
      <code><![CDATA[calculateOverallHealth]]></code>
      <code><![CDATA[checkCacheHealth]]></code>
      <code><![CDATA[checkDatabaseHealth]]></code>
      <code><![CDATA[checkDiskSpaceHealth]]></code>
      <code><![CDATA[checkMemoryHealth]]></code>
      <code><![CDATA[checkStorageHealth]]></code>
      <code><![CDATA[processErrorStatistics]]></code>
      <code><![CDATA[processLogFilesForRecentErrors]]></code>
    </UndefinedMagicMethod>
    <UndefinedMethod>
      <code><![CDATA[getLogFiles]]></code>
      <code><![CDATA[getLogFiles]]></code>
    </UndefinedMethod>
    <UnusedClass>
      <code><![CDATA[ErrorController]]></code>
    </UnusedClass>
  </file>
  <file src="app/Http/Controllers/FileController.php">
    <ClassMustBeFinal>
      <code><![CDATA[FileController]]></code>
    </ClassMustBeFinal>
    <MixedAssignment>
      <code><![CDATA[$mime]]></code>
    </MixedAssignment>
    <PossiblyUnusedMethod>
      <code><![CDATA[show]]></code>
    </PossiblyUnusedMethod>
    <RedundantCastGivenDocblockType>
      <code><![CDATA[(bool) $request->boolean('download', false)]]></code>
    </RedundantCastGivenDocblockType>
    <UndefinedInterfaceMethod>
      <code><![CDATA[mimeType]]></code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="app/Http/Controllers/HealthController.php">
    <ClassMustBeFinal>
      <code><![CDATA[HealthController]]></code>
    </ClassMustBeFinal>
    <MixedArgument>
      <code><![CDATA[$storeName]]></code>
    </MixedArgument>
    <MixedArrayAccess>
      <code><![CDATA[$checks['cache']]]></code>
      <code><![CDATA[$checks['database']]]></code>
      <code><![CDATA[$checks['queue']]]></code>
      <code><![CDATA[$checks['storage']]]></code>
      <code><![CDATA[$config['checks']]]></code>
      <code><![CDATA[$config['enabled']]]></code>
    </MixedArrayAccess>
    <MixedAssignment>
      <code><![CDATA[$checks]]></code>
      <code><![CDATA[$config]]></code>
      <code><![CDATA[$driver]]></code>
      <code><![CDATA[$status]]></code>
      <code><![CDATA[$storeName]]></code>
    </MixedAssignment>
    <PossiblyUnusedMethod>
      <code><![CDATA[index]]></code>
    </PossiblyUnusedMethod>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[! ($config['enabled'] ?? true)]]></code>
      <code><![CDATA[$checks['cache'] ?? true]]></code>
      <code><![CDATA[$checks['database'] ?? true]]></code>
      <code><![CDATA[$checks['queue'] ?? true]]></code>
      <code><![CDATA[$checks['storage'] ?? true]]></code>
    </RiskyTruthyFalsyComparison>
    <UndefinedMagicMethod>
      <code><![CDATA[ping]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/HomeController.php">
    <ClassMustBeFinal>
      <code><![CDATA[HomeController]]></code>
    </ClassMustBeFinal>
    <MixedAssignment>
      <code><![CDATA[$featuredProducts]]></code>
    </MixedAssignment>
    <MixedMethodCall>
      <code><![CDATA[get]]></code>
      <code><![CDATA[latest]]></code>
      <code><![CDATA[limit]]></code>
      <code><![CDATA[with]]></code>
    </MixedMethodCall>
    <PossiblyUnusedMethod>
      <code><![CDATA[index]]></code>
    </PossiblyUnusedMethod>
    <UndefinedMagicMethod>
      <code><![CDATA[Product::where('is_featured', true)]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/LocaleController.php">
    <ClassMustBeFinal>
      <code><![CDATA[LocaleController]]></code>
    </ClassMustBeFinal>
  </file>
  <file src="app/Http/Controllers/LogController.php">
    <ClassMustBeFinal>
      <code><![CDATA[LogController]]></code>
    </ClassMustBeFinal>
    <DocblockTypeContradiction>
      <code><![CDATA[$logs === null]]></code>
      <code><![CDATA[$logs === null]]></code>
      <code><![CDATA[is_string($log)]]></code>
    </DocblockTypeContradiction>
    <InvalidReturnStatement>
      <code><![CDATA[$this->executeWithErrorHandling(function (): array {
            return $this->parseAccessLogFile();
        }, 'getting access logs')]]></code>
      <code><![CDATA[$this->executeWithErrorHandling(function (): array {
            return $this->parseLogFile();
        }, 'getting system logs')]]></code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code><![CDATA[array<string, bool|string|array>]]></code>
      <code><![CDATA[array<string, bool|string|array>]]></code>
    </InvalidReturnType>
    <MixedAssignment>
      <code><![CDATA[$limit]]></code>
      <code><![CDATA[$limitInput]]></code>
    </MixedAssignment>
    <MixedOperand>
      <code><![CDATA[auth()->id() ?? 'Guest']]></code>
    </MixedOperand>
    <MixedReturnStatement>
      <code><![CDATA[$callback()]]></code>
      <code><![CDATA[$callback()]]></code>
    </MixedReturnStatement>
    <PossiblyInvalidArgument>
      <code><![CDATA[$logData['status'] ?? 500]]></code>
    </PossiblyInvalidArgument>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA['log']]></code>
    </RedundantConditionGivenDocblockType>
    <RedundantFunctionCall>
      <code><![CDATA[array_values]]></code>
    </RedundantFunctionCall>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[! $logData['success']]]></code>
      <code><![CDATA[! $parsedLogs['success']]]></code>
    </RiskyTruthyFalsyComparison>
    <UndefinedInterfaceMethod>
      <code><![CDATA[id]]></code>
    </UndefinedInterfaceMethod>
    <UnusedClass>
      <code><![CDATA[LogController]]></code>
    </UnusedClass>
  </file>
  <file src="app/Http/Controllers/OrderController.php">
    <ClassMustBeFinal>
      <code><![CDATA[OrderController]]></code>
    </ClassMustBeFinal>
    <DocblockTypeContradiction>
      <code><![CDATA[is_array($validated)]]></code>
    </DocblockTypeContradiction>
    <InvalidArgument>
      <code><![CDATA[[
                'shipping' => $shippingAddress,
                'billing' => $billingAddress,
            ]]]></code>
    </InvalidArgument>
    <MixedArgument>
      <code><![CDATA[$user]]></code>
      <code><![CDATA[$user]]></code>
      <code><![CDATA[$user]]></code>
    </MixedArgument>
    <MixedArgumentTypeCoercion>
      <code><![CDATA[[
                'shipping' => $validated['shipping_address'],
                'billing' => $validated['billing_address'],
            ]]]></code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment>
      <code><![CDATA[$billingAddressValue]]></code>
      <code><![CDATA[$cartItemsValue]]></code>
      <code><![CDATA[$item]]></code>
      <code><![CDATA[$reason]]></code>
      <code><![CDATA[$shippingAddressValue]]></code>
      <code><![CDATA[$user]]></code>
      <code><![CDATA[$user]]></code>
      <code><![CDATA[$user]]></code>
      <code><![CDATA[$user]]></code>
      <code><![CDATA[$user]]></code>
    </MixedAssignment>
    <MixedPropertyFetch>
      <code><![CDATA[$item->id]]></code>
      <code><![CDATA[$item->quantity]]></code>
      <code><![CDATA[$user->id]]></code>
      <code><![CDATA[$user?->id]]></code>
    </MixedPropertyFetch>
    <PossiblyUnusedMethod>
      <code><![CDATA[__construct]]></code>
      <code><![CDATA[cancel]]></code>
      <code><![CDATA[create]]></code>
      <code><![CDATA[index]]></code>
      <code><![CDATA[show]]></code>
      <code><![CDATA[storeFromCart]]></code>
      <code><![CDATA[updateStatus]]></code>
    </PossiblyUnusedMethod>
    <UndefinedMagicPropertyFetch>
      <code><![CDATA[$order->id]]></code>
      <code><![CDATA[$order->id]]></code>
      <code><![CDATA[$order->user_id]]></code>
    </UndefinedMagicPropertyFetch>
    <UnusedDocblockParam>
      <code><![CDATA[$id]]></code>
      <code><![CDATA[$id]]></code>
      <code><![CDATA[$id]]></code>
    </UnusedDocblockParam>
  </file>
  <file src="app/Http/Controllers/PaymentController.php">
    <ClassMustBeFinal>
      <code><![CDATA[PaymentController]]></code>
    </ClassMustBeFinal>
  </file>
  <file src="app/Http/Controllers/PointsController.php">
    <ClassMustBeFinal>
      <code><![CDATA[PointsController]]></code>
    </ClassMustBeFinal>
  </file>
  <file src="app/Http/Controllers/PriceAlertController.php">
    <ClassMustBeFinal>
      <code><![CDATA[PriceAlertController]]></code>
    </ClassMustBeFinal>
    <LessSpecificReturnStatement>
      <code><![CDATA[view('price-alerts.create', ['product' => $product])]]></code>
    </LessSpecificReturnStatement>
    <MixedAssignment>
      <code><![CDATA[$product]]></code>
    </MixedAssignment>
    <MoreSpecificReturnType>
      <code><![CDATA[\Illuminate\View\View]]></code>
    </MoreSpecificReturnType>
    <PossiblyUnusedMethod>
      <code><![CDATA[create]]></code>
      <code><![CDATA[update]]></code>
    </PossiblyUnusedMethod>
    <UndefinedMagicMethod>
      <code><![CDATA[findOrFail]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Http/Controllers/PriceComparisonController.php">
    <ClassMustBeFinal>
      <code><![CDATA[PriceComparisonController]]></code>
    </ClassMustBeFinal>
    <LessSpecificReturnStatement>
      <code><![CDATA[view('products.price-comparison', [
            'product' => $product,
            'prices' => $prices,
            'showHistory' => $showHistory,
            'priceHistory' => $priceHistory,
            'availableStores' => $this->storeAdapterManager->getAvailableStores(),
        ])]]></code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType>
      <code><![CDATA[View]]></code>
    </MoreSpecificReturnType>
    <UndefinedInterfaceMethod>
      <code><![CDATA[check]]></code>
      <code><![CDATA[id]]></code>
    </UndefinedInterfaceMethod>
    <UnusedClass>
      <code><![CDATA[PriceComparisonController]]></code>
    </UnusedClass>
  </file>
  <file src="app/Http/Controllers/ProductController.php">
    <ClassMustBeFinal>
      <code><![CDATA[ProductController]]></code>
    </ClassMustBeFinal>
    <LessSpecificReturnStatement>
      <code><![CDATA[view('products.index', [
            'products' => $products,
        ])]]></code>
      <code><![CDATA[view('products.index', [
            'products' => $products,
        ])]]></code>
      <code><![CDATA[view('products.show', [
            'product' => $product,
            'relatedProducts' => $relatedProducts,
        ])]]></code>
    </LessSpecificReturnStatement>
    <MixedAssignment>
      <code><![CDATA[$query]]></code>
    </MixedAssignment>
    <MoreSpecificReturnType>
      <code><![CDATA[View]]></code>
      <code><![CDATA[View]]></code>
      <code><![CDATA[View]]></code>
    </MoreSpecificReturnType>
    <PossiblyUnusedMethod>
      <code><![CDATA[__construct]]></code>
      <code><![CDATA[index]]></code>
      <code><![CDATA[show]]></code>
    </PossiblyUnusedMethod>
  </file>
  <file src="app/Http/Controllers/ProfileController.php">
    <ClassMustBeFinal>
      <code><![CDATA[ProfileController]]></code>
    </ClassMustBeFinal>
    <MixedAssignment>
      <code><![CDATA[$email]]></code>
      <code><![CDATA[$name]]></code>
      <code><![CDATA[$newPassword]]></code>
      <code><![CDATA[$newPassword]]></code>
    </MixedAssignment>
    <PossiblyUnusedMethod>
      <code><![CDATA[changePassword]]></code>
      <code><![CDATA[edit]]></code>
      <code><![CDATA[update]]></code>
    </PossiblyUnusedMethod>
  </file>
  <file src="app/Http/Controllers/RecommendationController.php">
    <ClassMustBeFinal>
      <code><![CDATA[RecommendationController]]></code>
    </ClassMustBeFinal>
    <MixedArgument>
      <code><![CDATA[$user]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code><![CDATA[$limitValue]]></code>
      <code><![CDATA[$user]]></code>
    </MixedAssignment>
    <UnusedClass>
      <code><![CDATA[RecommendationController]]></code>
    </UnusedClass>
  </file>
  <file src="app/Http/Controllers/ReportController.php">
    <ClassMustBeFinal>
      <code><![CDATA[ReportController]]></code>
    </ClassMustBeFinal>
  </file>
  <file src="app/Http/Controllers/ReviewController.php">
    <ClassMustBeFinal>
      <code><![CDATA[ReviewController]]></code>
    </ClassMustBeFinal>
    <InvalidDocblock>
      <code><![CDATA[$view]]></code>
    </InvalidDocblock>
    <LessSpecificReturnStatement>
      <code><![CDATA[view($view, ['product' => $product])]]></code>
    </LessSpecificReturnStatement>
    <MixedArgument>
      <code><![CDATA[$request->validated()]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code><![CDATA[$existingReview]]></code>
      <code><![CDATA[$existingReview]]></code>
      <code><![CDATA[$review]]></code>
    </MixedAssignment>
    <MoreSpecificReturnType>
      <code><![CDATA[\Illuminate\View\View|\Illuminate\Http\RedirectResponse]]></code>
    </MoreSpecificReturnType>
    <PossiblyUnusedMethod>
      <code><![CDATA[create]]></code>
      <code><![CDATA[store]]></code>
      <code><![CDATA[update]]></code>
    </PossiblyUnusedMethod>
    <UndefinedInterfaceMethod>
      <code><![CDATA[id]]></code>
      <code><![CDATA[id]]></code>
    </UndefinedInterfaceMethod>
    <UndefinedMagicMethod>
      <code><![CDATA[Review::create([
            'user_id' => auth()->id(),
            'product_id' => $product->id,
            'rating' => $request->rating,
            'content' => $sanitizedComment,
        ])]]></code>
      <code><![CDATA[exists]]></code>
      <code><![CDATA[exists]]></code>
    </UndefinedMagicMethod>
    <UndefinedMagicPropertyFetch>
      <code><![CDATA[$request->comment]]></code>
      <code><![CDATA[$request->rating]]></code>
    </UndefinedMagicPropertyFetch>
  </file>
  <file src="app/Http/Controllers/SettingController.php">
    <ClassMustBeFinal>
      <code><![CDATA[SettingController]]></code>
    </ClassMustBeFinal>
    <MixedOperand>
      <code><![CDATA[auth()->id() ?? 'Guest']]></code>
    </MixedOperand>
    <MixedReturnTypeCoercion>
      <code><![CDATA[[
            'cache_enabled' => true,
            'cache_driver' => Config::get('cache.default'),
            'cache_ttl' => 3600,
            'query_cache' => true,
            'view_cache' => true,
            'route_cache' => true,
        ]]]></code>
      <code><![CDATA[[
            'site_name' => Config::get('app.name'),
            'site_description' => 'Price comparison platform',
            'contact_email' => 'admin@example.com',
            'timezone' => Config::get('app.timezone'),
            'language' => 'en',
            'currency' => 'USD',
        ]]]></code>
      <code><![CDATA[array<string, bool|int|string|null>]]></code>
      <code><![CDATA[array<string, string>]]></code>
    </MixedReturnTypeCoercion>
    <PossiblyUnusedMethod>
      <code><![CDATA[index]]></code>
      <code><![CDATA[processImportedSettings]]></code>
      <code><![CDATA[update]]></code>
    </PossiblyUnusedMethod>
    <UndefinedInterfaceMethod>
      <code><![CDATA[id]]></code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="app/Http/Controllers/SystemController.php">
    <ClassMustBeFinal>
      <code><![CDATA[SystemController]]></code>
    </ClassMustBeFinal>
    <MixedArgument>
      <code><![CDATA[config('database.connections', [])]]></code>
    </MixedArgument>
    <PossiblyUnusedMethod>
      <code><![CDATA[clearCache]]></code>
      <code><![CDATA[clearLogs]]></code>
      <code><![CDATA[optimizeApp]]></code>
      <code><![CDATA[runBackup]]></code>
      <code><![CDATA[runComposerUpdate]]></code>
      <code><![CDATA[runMigrations]]></code>
    </PossiblyUnusedMethod>
    <RedundantCast>
      <code><![CDATA[(float) (microtime(true) - $startRef)]]></code>
    </RedundantCast>
    <RiskyCast>
      <code><![CDATA[$requestTime ?? time()]]></code>
      <code><![CDATA[request()->server('REQUEST_TIME_FLOAT') ?? microtime(true)]]></code>
    </RiskyCast>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[$includeDatabase]]></code>
      <code><![CDATA[$includeFiles]]></code>
      <code><![CDATA[app()->environment('testing')]]></code>
      <code><![CDATA[app()->environment('testing')]]></code>
      <code><![CDATA[disk_free_space(base_path())]]></code>
      <code><![CDATA[disk_total_space(base_path())]]></code>
      <code><![CDATA[getenv('NUMBER_OF_PROCESSORS')]]></code>
      <code><![CDATA[ini_get('max_execution_time')]]></code>
      <code><![CDATA[ini_get('memory_limit')]]></code>
      <code><![CDATA[ini_get('memory_limit')]]></code>
    </RiskyTruthyFalsyComparison>
    <UndefinedClass>
      <code><![CDATA[\Log]]></code>
    </UndefinedClass>
  </file>
  <file src="app/Http/Controllers/UploadController.php">
    <ClassMustBeFinal>
      <code><![CDATA[UploadController]]></code>
    </ClassMustBeFinal>
    <PossiblyInvalidArgument>
      <code><![CDATA[$file]]></code>
    </PossiblyInvalidArgument>
    <PossiblyInvalidMethodCall>
      <code><![CDATA[getClientOriginalExtension]]></code>
      <code><![CDATA[getClientOriginalName]]></code>
    </PossiblyInvalidMethodCall>
    <PossiblyUnusedMethod>
      <code><![CDATA[store]]></code>
    </PossiblyUnusedMethod>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[! $file]]></code>
    </RiskyTruthyFalsyComparison>
  </file>
  <file src="app/Http/Controllers/UserController.php">
    <ClassMustBeFinal>
      <code><![CDATA[UserController]]></code>
    </ClassMustBeFinal>
    <InvalidArgument>
      <code><![CDATA[User::with(['wishlists', 'priceAlerts', 'reviews'])]]></code>
      <code><![CDATA[static function ($q) use ($search): void {
                $q->where('name', 'like', '%'.$search.'%')
                    ->orWhere('email', 'like', '%'.$search.'%');
            }]]></code>
    </InvalidArgument>
    <MixedAssignment>
      <code><![CDATA[$currentPassword]]></code>
      <code><![CDATA[$newPassword]]></code>
      <code><![CDATA[$passwordValue]]></code>
      <code><![CDATA[$role]]></code>
      <code><![CDATA[$searchInput]]></code>
      <code><![CDATA[$status]]></code>
      <code><![CDATA[$validated]]></code>
    </MixedAssignment>
    <MixedMethodCall>
      <code><![CDATA[orWhere]]></code>
    </MixedMethodCall>
    <UndefinedMagicMethod>
      <code><![CDATA[User::findOrFail($userId)]]></code>
      <code><![CDATA[where]]></code>
    </UndefinedMagicMethod>
    <UnusedClass>
      <code><![CDATA[UserController]]></code>
    </UnusedClass>
  </file>
  <file src="app/Http/Controllers/WebhookController.php">
    <ClassMustBeFinal>
      <code><![CDATA[WebhookController]]></code>
    </ClassMustBeFinal>
    <PossiblyUnusedMethod>
      <code><![CDATA[__construct]]></code>
      <code><![CDATA[handleWebhook]]></code>
    </PossiblyUnusedMethod>
  </file>
  <file src="app/Http/Controllers/WishlistController.php">
    <ClassMustBeFinal>
      <code><![CDATA[WishlistController]]></code>
    </ClassMustBeFinal>
    <MixedAssignment>
      <code><![CDATA[$user]]></code>
      <code><![CDATA[$user]]></code>
      <code><![CDATA[$user]]></code>
      <code><![CDATA[$user]]></code>
      <code><![CDATA[$user]]></code>
      <code><![CDATA[$user]]></code>
      <code><![CDATA[$wishlist]]></code>
      <code><![CDATA[$wishlist]]></code>
      <code><![CDATA[$wishlist]]></code>
      <code><![CDATA[$wishlists]]></code>
    </MixedAssignment>
    <MixedMethodCall>
      <code><![CDATA[create]]></code>
      <code><![CDATA[delete]]></code>
      <code><![CDATA[delete]]></code>
      <code><![CDATA[delete]]></code>
      <code><![CDATA[findOrFail]]></code>
      <code><![CDATA[first]]></code>
      <code><![CDATA[firstOrCreate]]></code>
      <code><![CDATA[forceDelete]]></code>
      <code><![CDATA[get]]></code>
      <code><![CDATA[where]]></code>
      <code><![CDATA[where]]></code>
      <code><![CDATA[wishlists]]></code>
      <code><![CDATA[wishlists]]></code>
      <code><![CDATA[wishlists]]></code>
      <code><![CDATA[wishlists]]></code>
      <code><![CDATA[wishlists]]></code>
      <code><![CDATA[wishlists]]></code>
      <code><![CDATA[wishlists]]></code>
      <code><![CDATA[with]]></code>
    </MixedMethodCall>
    <PossiblyUnusedMethod>
      <code><![CDATA[clear]]></code>
      <code><![CDATA[destroy]]></code>
      <code><![CDATA[index]]></code>
      <code><![CDATA[remove]]></code>
      <code><![CDATA[store]]></code>
      <code><![CDATA[toggle]]></code>
    </PossiblyUnusedMethod>
  </file>
  <file src="app/Http/Kernel.php">
    <ClassMustBeFinal>
      <code><![CDATA[Kernel]]></code>
    </ClassMustBeFinal>
    <UnusedClass>
      <code><![CDATA[Kernel]]></code>
    </UnusedClass>
  </file>
  <file src="app/Http/Middleware/AddCspNonce.php">
    <ClassMustBeFinal>
      <code><![CDATA[AddCspNonce]]></code>
    </ClassMustBeFinal>
    <MixedReturnStatement>
      <code><![CDATA[$next($request)]]></code>
    </MixedReturnStatement>
    <PossiblyUnusedMethod>
      <code><![CDATA[handle]]></code>
    </PossiblyUnusedMethod>
  </file>
  <file src="app/Http/Middleware/AddQueuedCookiesToResponse.php">
    <ClassMustBeFinal>
      <code><![CDATA[AddQueuedCookiesToResponse]]></code>
    </ClassMustBeFinal>
    <MixedAssignment>
      <code><![CDATA[$cookie]]></code>
      <code><![CDATA[$cookieQueue]]></code>
      <code><![CDATA[$cookies]]></code>
    </MixedAssignment>
    <UnusedClass>
      <code><![CDATA[AddQueuedCookiesToResponse]]></code>
    </UnusedClass>
  </file>
  <file src="app/Http/Middleware/AdminMiddleware.php">
    <ClassMustBeFinal>
      <code><![CDATA[AdminMiddleware]]></code>
    </ClassMustBeFinal>
    <MixedAssignment>
      <code><![CDATA[$user]]></code>
    </MixedAssignment>
    <MixedPropertyFetch>
      <code><![CDATA[$user->is_admin]]></code>
    </MixedPropertyFetch>
    <PossiblyUnusedMethod>
      <code><![CDATA[handle]]></code>
    </PossiblyUnusedMethod>
  </file>
  <file src="app/Http/Middleware/ApiErrorHandler.php">
    <ClassMustBeFinal>
      <code><![CDATA[ApiErrorHandler]]></code>
    </ClassMustBeFinal>
    <PossiblyUnusedMethod>
      <code><![CDATA[handle]]></code>
    </PossiblyUnusedMethod>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[$isProduction]]></code>
    </RiskyTruthyFalsyComparison>
  </file>
  <file src="app/Http/Middleware/Authenticate.php">
    <ClassMustBeFinal>
      <code><![CDATA[Authenticate]]></code>
    </ClassMustBeFinal>
    <MissingParamType>
      <code><![CDATA[$request]]></code>
    </MissingParamType>
    <MixedMethodCall>
      <code><![CDATA[expectsJson]]></code>
      <code><![CDATA[is]]></code>
    </MixedMethodCall>
    <MoreSpecificImplementedParamType>
      <code><![CDATA[$guards]]></code>
    </MoreSpecificImplementedParamType>
  </file>
  <file src="app/Http/Middleware/AuthenticateSession.php">
    <ClassMustBeFinal>
      <code><![CDATA[AuthenticateSession]]></code>
    </ClassMustBeFinal>
    <MixedAssignment>
      <code><![CDATA[$response]]></code>
      <code><![CDATA[$user]]></code>
    </MixedAssignment>
    <MixedPropertyFetch>
      <code><![CDATA[$user->session_id]]></code>
      <code><![CDATA[$user?->session_id]]></code>
    </MixedPropertyFetch>
    <PossiblyNullPropertyFetch>
      <code><![CDATA[$user->session_id]]></code>
    </PossiblyNullPropertyFetch>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[$user?->session_id]]></code>
    </RiskyTruthyFalsyComparison>
    <UndefinedInterfaceMethod>
      <code><![CDATA[check]]></code>
      <code><![CDATA[logout]]></code>
      <code><![CDATA[user]]></code>
    </UndefinedInterfaceMethod>
    <UnusedClass>
      <code><![CDATA[AuthenticateSession]]></code>
    </UnusedClass>
  </file>
  <file src="app/Http/Middleware/AuthenticateWithBasicAuth.php">
    <ClassMustBeFinal>
      <code><![CDATA[AuthenticateWithBasicAuth]]></code>
    </ClassMustBeFinal>
    <UnusedClass>
      <code><![CDATA[AuthenticateWithBasicAuth]]></code>
    </UnusedClass>
  </file>
  <file src="app/Http/Middleware/Authorize.php">
    <ClassMustBeFinal>
      <code><![CDATA[Authorize]]></code>
    </ClassMustBeFinal>
    <MixedMethodCall>
      <code><![CDATA[can]]></code>
    </MixedMethodCall>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[auth()->user()?->can($ability)]]></code>
    </RiskyTruthyFalsyComparison>
    <UndefinedInterfaceMethod>
      <code><![CDATA[check]]></code>
      <code><![CDATA[user]]></code>
    </UndefinedInterfaceMethod>
    <UnusedClass>
      <code><![CDATA[Authorize]]></code>
    </UnusedClass>
  </file>
  <file src="app/Http/Middleware/CheckPermission.php">
    <ClassMustBeFinal>
      <code><![CDATA[CheckPermission]]></code>
    </ClassMustBeFinal>
    <MixedArgument>
      <code><![CDATA[$request->user()]]></code>
    </MixedArgument>
    <MixedArgumentTypeCoercion>
      <code><![CDATA[$permissions]]></code>
    </MixedArgumentTypeCoercion>
    <NoInterfaceProperties>
      <code><![CDATA[$user->role]]></code>
    </NoInterfaceProperties>
    <UnusedClass>
      <code><![CDATA[CheckPermission]]></code>
    </UnusedClass>
  </file>
  <file src="app/Http/Middleware/CheckUserRole.php">
    <ClassMustBeFinal>
      <code><![CDATA[CheckUserRole]]></code>
    </ClassMustBeFinal>
    <MixedAssignment>
      <code><![CDATA[$user]]></code>
    </MixedAssignment>
    <MixedPropertyFetch>
      <code><![CDATA[$user->role]]></code>
    </MixedPropertyFetch>
    <UnusedClass>
      <code><![CDATA[CheckUserRole]]></code>
    </UnusedClass>
  </file>
  <file src="app/Http/Middleware/CompressionMiddleware.php">
    <ClassMustBeFinal>
      <code><![CDATA[CompressionMiddleware]]></code>
    </ClassMustBeFinal>
    <PossiblyInvalidArgument>
      <code><![CDATA[$acceptEncoding]]></code>
      <code><![CDATA[$acceptEncoding]]></code>
    </PossiblyInvalidArgument>
    <PossiblyInvalidCast>
      <code><![CDATA[$acceptEncoding]]></code>
      <code><![CDATA[$acceptEncoding]]></code>
    </PossiblyInvalidCast>
    <UnusedClass>
      <code><![CDATA[CompressionMiddleware]]></code>
    </UnusedClass>
  </file>
  <file src="app/Http/Middleware/ConvertEmptyStringsToNull.php">
    <ClassMustBeFinal>
      <code><![CDATA[ConvertEmptyStringsToNull]]></code>
    </ClassMustBeFinal>
    <MixedAssignment>
      <code><![CDATA[$value]]></code>
    </MixedAssignment>
    <UnusedClass>
      <code><![CDATA[ConvertEmptyStringsToNull]]></code>
    </UnusedClass>
  </file>
  <file src="app/Http/Middleware/EncryptCookies.php">
    <ClassMustBeFinal>
      <code><![CDATA[EncryptCookies]]></code>
    </ClassMustBeFinal>
  </file>
  <file src="app/Http/Middleware/EnsureEmailIsVerified.php">
    <ClassMustBeFinal>
      <code><![CDATA[EnsureEmailIsVerified]]></code>
    </ClassMustBeFinal>
    <MixedMethodCall>
      <code><![CDATA[hasVerifiedEmail]]></code>
    </MixedMethodCall>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[! auth()->user()?->hasVerifiedEmail()]]></code>
    </RiskyTruthyFalsyComparison>
    <UndefinedInterfaceMethod>
      <code><![CDATA[check]]></code>
      <code><![CDATA[user]]></code>
    </UndefinedInterfaceMethod>
    <UnusedClass>
      <code><![CDATA[EnsureEmailIsVerified]]></code>
    </UnusedClass>
  </file>
  <file src="app/Http/Middleware/EnsureResponseHasSession.php">
    <ClassMustBeFinal>
      <code><![CDATA[EnsureResponseHasSession]]></code>
    </ClassMustBeFinal>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[$session]]></code>
      <code><![CDATA[method_exists($response, 'setSession') && $session]]></code>
    </RedundantConditionGivenDocblockType>
    <UnusedClass>
      <code><![CDATA[EnsureResponseHasSession]]></code>
    </UnusedClass>
  </file>
  <file src="app/Http/Middleware/HandleCors.php">
    <ClassMustBeFinal>
      <code><![CDATA[HandleCors]]></code>
    </ClassMustBeFinal>
    <MixedAssignment>
      <code><![CDATA[$response]]></code>
    </MixedAssignment>
    <MixedMethodCall>
      <code><![CDATA[set]]></code>
      <code><![CDATA[set]]></code>
      <code><![CDATA[set]]></code>
      <code><![CDATA[set]]></code>
    </MixedMethodCall>
    <MixedPropertyFetch>
      <code><![CDATA[$response->headers]]></code>
    </MixedPropertyFetch>
    <MixedReturnStatement>
      <code><![CDATA[$response]]></code>
    </MixedReturnStatement>
    <RedundantCast>
      <code><![CDATA[(string) ($request->headers->get('Access-Control-Request-Headers') ?? 'Content-Type, Authorization, X-Requested-With')]]></code>
      <code><![CDATA[(string) ($request->headers->get('Access-Control-Request-Method') ?? 'GET, POST, PUT, DELETE, OPTIONS')]]></code>
      <code><![CDATA[(string) ($request->headers->get('Origin') ?? '*')]]></code>
      <code><![CDATA[(string) ($request->headers->get('Origin') ?? '*')]]></code>
    </RedundantCast>
    <UnusedClass>
      <code><![CDATA[HandleCors]]></code>
    </UnusedClass>
  </file>
  <file src="app/Http/Middleware/HandlePrecognitiveRequests.php">
    <ClassMustBeFinal>
      <code><![CDATA[HandlePrecognitiveRequests]]></code>
    </ClassMustBeFinal>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[$request->header('X-Livewire')]]></code>
    </RiskyTruthyFalsyComparison>
    <UnusedClass>
      <code><![CDATA[HandlePrecognitiveRequests]]></code>
    </UnusedClass>
  </file>
  <file src="app/Http/Middleware/InputSanitizationMiddleware.php">
    <ClassMustBeFinal>
      <code><![CDATA[InputSanitizationMiddleware]]></code>
    </ClassMustBeFinal>
    <MixedArgumentTypeCoercion>
      <code><![CDATA[$data]]></code>
      <code><![CDATA[$input]]></code>
      <code><![CDATA[$value]]></code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment>
      <code><![CDATA[$data]]></code>
    </MixedAssignment>
    <UnusedClass>
      <code><![CDATA[InputSanitizationMiddleware]]></code>
    </UnusedClass>
  </file>
  <file src="app/Http/Middleware/LocaleMiddleware.php">
    <ClassMustBeFinal>
      <code><![CDATA[LocaleMiddleware]]></code>
    </ClassMustBeFinal>
    <MissingReturnType>
      <code><![CDATA[handle]]></code>
    </MissingReturnType>
    <NoInterfaceProperties>
      <code><![CDATA[$user->locale]]></code>
    </NoInterfaceProperties>
    <PossiblyUnusedMethod>
      <code><![CDATA[__construct]]></code>
      <code><![CDATA[handle]]></code>
    </PossiblyUnusedMethod>
  </file>
  <file src="app/Http/Middleware/OverrideHealthEndpoint.php">
    <ClassMustBeFinal>
      <code><![CDATA[OverrideHealthEndpoint]]></code>
    </ClassMustBeFinal>
    <MissingReturnType>
      <code><![CDATA[handle]]></code>
    </MissingReturnType>
    <UnusedClass>
      <code><![CDATA[OverrideHealthEndpoint]]></code>
    </UnusedClass>
  </file>
  <file src="app/Http/Middleware/PreventRequestsDuringMaintenance.php">
    <ClassMustBeFinal>
      <code><![CDATA[PreventRequestsDuringMaintenance]]></code>
    </ClassMustBeFinal>
  </file>
  <file src="app/Http/Middleware/RTLMiddleware.php">
    <ClassMustBeFinal>
      <code><![CDATA[RTLMiddleware]]></code>
    </ClassMustBeFinal>
    <UnusedClass>
      <code><![CDATA[RTLMiddleware]]></code>
    </UnusedClass>
  </file>
  <file src="app/Http/Middleware/RedirectIfAuthenticated.php">
    <ClassMustBeFinal>
      <code><![CDATA[RedirectIfAuthenticated]]></code>
    </ClassMustBeFinal>
    <PossiblyUnusedMethod>
      <code><![CDATA[handle]]></code>
    </PossiblyUnusedMethod>
    <PossiblyUnusedParam>
      <code><![CDATA[$guards]]></code>
    </PossiblyUnusedParam>
  </file>
  <file src="app/Http/Middleware/RequirePassword.php">
    <ClassMustBeFinal>
      <code><![CDATA[RequirePassword]]></code>
    </ClassMustBeFinal>
    <MixedArgument>
      <code><![CDATA[$user]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code><![CDATA[$lastConfirmation]]></code>
      <code><![CDATA[$timeout]]></code>
      <code><![CDATA[$user]]></code>
    </MixedAssignment>
    <MixedOperand>
      <code><![CDATA[$lastConfirmation]]></code>
    </MixedOperand>
    <MixedPropertyFetch>
      <code><![CDATA[$user->password_confirmed_at->timestamp]]></code>
    </MixedPropertyFetch>
    <MixedReturnStatement>
      <code><![CDATA[$next($request)]]></code>
    </MixedReturnStatement>
    <PossiblyFalseOperand>
      <code><![CDATA[$lastConfirmation]]></code>
    </PossiblyFalseOperand>
    <UndefinedMagicPropertyFetch>
      <code><![CDATA[$user->password_confirmed_at]]></code>
    </UndefinedMagicPropertyFetch>
    <UnusedClass>
      <code><![CDATA[RequirePassword]]></code>
    </UnusedClass>
  </file>
  <file src="app/Http/Middleware/SecurityHeaders.php">
    <ClassMustBeFinal>
      <code><![CDATA[SecurityHeaders]]></code>
    </ClassMustBeFinal>
    <InvalidReturnStatement>
      <code><![CDATA[redirect($httpsUrl, 302)]]></code>
    </InvalidReturnStatement>
    <MixedArgument>
      <code><![CDATA[$response]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code><![CDATA[$file]]></code>
      <code><![CDATA[$response]]></code>
      <code><![CDATA[$response]]></code>
      <code><![CDATA[$value]]></code>
    </MixedAssignment>
    <MixedMethodCall>
      <code><![CDATA[all]]></code>
      <code><![CDATA[all]]></code>
      <code><![CDATA[get]]></code>
      <code><![CDATA[get]]></code>
      <code><![CDATA[getClientOriginalName]]></code>
      <code><![CDATA[getMimeType]]></code>
      <code><![CDATA[set]]></code>
    </MixedMethodCall>
    <MixedPropertyFetch>
      <code><![CDATA[$response->headers]]></code>
      <code><![CDATA[$response->headers]]></code>
    </MixedPropertyFetch>
    <MixedReturnStatement>
      <code><![CDATA[$response]]></code>
      <code><![CDATA[$response]]></code>
      <code><![CDATA[$response]]></code>
      <code><![CDATA[$response]]></code>
    </MixedReturnStatement>
    <RedundantCastGivenDocblockType>
      <code><![CDATA[(string) $request->fullUrl()]]></code>
    </RedundantCastGivenDocblockType>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[$isProduction]]></code>
    </RiskyTruthyFalsyComparison>
    <UnusedClass>
      <code><![CDATA[SecurityHeaders]]></code>
    </UnusedClass>
  </file>
  <file src="app/Http/Middleware/SecurityHeadersMiddleware.php">
    <ClassMustBeFinal>
      <code><![CDATA[SecurityHeadersMiddleware]]></code>
    </ClassMustBeFinal>
    <PossiblyUnusedMethod>
      <code><![CDATA[__construct]]></code>
      <code><![CDATA[handle]]></code>
    </PossiblyUnusedMethod>
  </file>
  <file src="app/Http/Middleware/SessionManagementMiddleware.php">
    <ClassMustBeFinal>
      <code><![CDATA[SessionManagementMiddleware]]></code>
    </ClassMustBeFinal>
    <InvalidOperand>
      <code><![CDATA[time() - $lastActivity]]></code>
    </InvalidOperand>
    <MixedAssignment>
      <code><![CDATA[$inactivityTimeout]]></code>
      <code><![CDATA[$lastActivity]]></code>
      <code><![CDATA[$lastRegeneration]]></code>
      <code><![CDATA[$regenerationInterval]]></code>
    </MixedAssignment>
    <MixedMethodCall>
      <code><![CDATA[wasChanged]]></code>
    </MixedMethodCall>
    <MixedPropertyFetch>
      <code><![CDATA[$request->user()->id]]></code>
      <code><![CDATA[$request->user()?->id]]></code>
      <code><![CDATA[$request->user()?->id]]></code>
    </MixedPropertyFetch>
    <UnusedClass>
      <code><![CDATA[SessionManagementMiddleware]]></code>
    </UnusedClass>
  </file>
  <file src="app/Http/Middleware/SetCacheHeaders.php">
    <ClassMustBeFinal>
      <code><![CDATA[SetCacheHeaders]]></code>
    </ClassMustBeFinal>
    <UnusedClass>
      <code><![CDATA[SetCacheHeaders]]></code>
    </UnusedClass>
  </file>
  <file src="app/Http/Middleware/SetLocale.php">
    <ClassMustBeFinal>
      <code><![CDATA[SetLocale]]></code>
    </ClassMustBeFinal>
    <MixedAssignment>
      <code><![CDATA[$locale]]></code>
    </MixedAssignment>
    <MixedReturnStatement>
      <code><![CDATA[config('app.fallback_locale', 'en')]]></code>
    </MixedReturnStatement>
    <UnusedClass>
      <code><![CDATA[SetLocale]]></code>
    </UnusedClass>
  </file>
  <file src="app/Http/Middleware/SetLocaleAndCurrency.php">
    <ClassMustBeFinal>
      <code><![CDATA[SetLocaleAndCurrency]]></code>
    </ClassMustBeFinal>
    <MissingReturnType>
      <code><![CDATA[handle]]></code>
    </MissingReturnType>
    <MixedAssignment>
      <code><![CDATA[$currency]]></code>
      <code><![CDATA[$locale]]></code>
      <code><![CDATA[$session]]></code>
    </MixedAssignment>
    <MixedMethodCall>
      <code><![CDATA[get]]></code>
      <code><![CDATA[get]]></code>
      <code><![CDATA[get]]></code>
    </MixedMethodCall>
    <PossiblyUnusedMethod>
      <code><![CDATA[handle]]></code>
    </PossiblyUnusedMethod>
  </file>
  <file src="app/Http/Middleware/ShareErrorsFromSession.php">
    <ClassMustBeFinal>
      <code><![CDATA[ShareErrorsFromSession]]></code>
    </ClassMustBeFinal>
    <MixedAssignment>
      <code><![CDATA[$errors]]></code>
    </MixedAssignment>
    <UnusedClass>
      <code><![CDATA[ShareErrorsFromSession]]></code>
    </UnusedClass>
  </file>
  <file src="app/Http/Middleware/StartSession.php">
    <ClassMustBeFinal>
      <code><![CDATA[StartSession]]></code>
    </ClassMustBeFinal>
    <MixedArgument>
      <code><![CDATA[app('session.store')]]></code>
    </MixedArgument>
    <UnusedClass>
      <code><![CDATA[StartSession]]></code>
    </UnusedClass>
  </file>
  <file src="app/Http/Middleware/SubstituteBindings.php">
    <ClassMustBeFinal>
      <code><![CDATA[SubstituteBindings]]></code>
    </ClassMustBeFinal>
    <UnusedClass>
      <code><![CDATA[SubstituteBindings]]></code>
    </UnusedClass>
  </file>
  <file src="app/Http/Middleware/ThrottleRequests.php">
    <ClassMustBeFinal>
      <code><![CDATA[ThrottleRequests]]></code>
    </ClassMustBeFinal>
    <MixedAssignment>
      <code><![CDATA[$attempts]]></code>
      <code><![CDATA[$response]]></code>
    </MixedAssignment>
    <MixedOperand>
      <code><![CDATA[$attempts]]></code>
    </MixedOperand>
    <UnusedClass>
      <code><![CDATA[ThrottleRequests]]></code>
    </UnusedClass>
  </file>
  <file src="app/Http/Middleware/ThrottleSensitiveOperations.php">
    <ClassMustBeFinal>
      <code><![CDATA[ThrottleSensitiveOperations]]></code>
    </ClassMustBeFinal>
    <MixedAssignment>
      <code><![CDATA[$user]]></code>
    </MixedAssignment>
    <MixedPropertyFetch>
      <code><![CDATA[$request->user()?->id]]></code>
      <code><![CDATA[$user->id]]></code>
    </MixedPropertyFetch>
    <UnusedClass>
      <code><![CDATA[ThrottleSensitiveOperations]]></code>
    </UnusedClass>
  </file>
  <file src="app/Http/Middleware/TrimStrings.php">
    <ClassMustBeFinal>
      <code><![CDATA[TrimStrings]]></code>
    </ClassMustBeFinal>
  </file>
  <file src="app/Http/Middleware/TrustHosts.php">
    <ClassMustBeFinal>
      <code><![CDATA[TrustHosts]]></code>
    </ClassMustBeFinal>
    <UnusedClass>
      <code><![CDATA[TrustHosts]]></code>
    </UnusedClass>
  </file>
  <file src="app/Http/Middleware/TrustProxies.php">
    <ClassMustBeFinal>
      <code><![CDATA[TrustProxies]]></code>
    </ClassMustBeFinal>
    <MixedAssignment>
      <code><![CDATA[$configured]]></code>
    </MixedAssignment>
    <MixedPropertyTypeCoercion>
      <code><![CDATA[$configured]]></code>
    </MixedPropertyTypeCoercion>
    <PossiblyUnusedMethod>
      <code><![CDATA[__construct]]></code>
    </PossiblyUnusedMethod>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[app()->environment('production')]]></code>
    </RiskyTruthyFalsyComparison>
  </file>
  <file src="app/Http/Middleware/ValidateApiRequest.php">
    <ClassMustBeFinal>
      <code><![CDATA[ValidateApiRequest]]></code>
    </ClassMustBeFinal>
    <DocblockTypeContradiction>
      <code><![CDATA['']]></code>
    </DocblockTypeContradiction>
    <InvalidArgument>
      <code><![CDATA[$validationRules]]></code>
    </InvalidArgument>
    <MixedArgumentTypeCoercion>
      <code><![CDATA[$configRules]]></code>
      <code><![CDATA[$decoded]]></code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment>
      <code><![CDATA[$configRules]]></code>
      <code><![CDATA[$decoded]]></code>
    </MixedAssignment>
    <MixedReturnStatement>
      <code><![CDATA[$next($request)]]></code>
      <code><![CDATA[$next($request)]]></code>
      <code><![CDATA[$next($request)]]></code>
    </MixedReturnStatement>
    <PossiblyNullArgument>
      <code><![CDATA[$rules]]></code>
    </PossiblyNullArgument>
    <RedundantCondition>
      <code><![CDATA['']]></code>
    </RedundantCondition>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[is_string($value)]]></code>
    </RedundantConditionGivenDocblockType>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[! $rules]]></code>
    </RiskyTruthyFalsyComparison>
    <TypeDoesNotContainType>
      <code><![CDATA[is_numeric($value)]]></code>
    </TypeDoesNotContainType>
    <UnusedClass>
      <code><![CDATA[ValidateApiRequest]]></code>
    </UnusedClass>
  </file>
  <file src="app/Http/Middleware/ValidatePostSize.php">
    <ClassMustBeFinal>
      <code><![CDATA[ValidatePostSize]]></code>
    </ClassMustBeFinal>
    <MixedReturnStatement>
      <code><![CDATA[$next($request)]]></code>
    </MixedReturnStatement>
    <RiskyCast>
      <code><![CDATA[$request->header('Content-Length', '0')]]></code>
    </RiskyCast>
    <UnusedClass>
      <code><![CDATA[ValidatePostSize]]></code>
    </UnusedClass>
  </file>
  <file src="app/Http/Middleware/ValidateSignature.php">
    <ClassMustBeFinal>
      <code><![CDATA[ValidateSignature]]></code>
    </ClassMustBeFinal>
    <MixedReturnStatement>
      <code><![CDATA[$next($request)]]></code>
    </MixedReturnStatement>
    <PossiblyUnusedProperty>
      <code><![CDATA[$except]]></code>
    </PossiblyUnusedProperty>
  </file>
  <file src="app/Http/Middleware/VerifyCsrfToken.php">
    <ClassMustBeFinal>
      <code><![CDATA[VerifyCsrfToken]]></code>
    </ClassMustBeFinal>
  </file>
  <file src="app/Http/Requests/BanUserRequest.php">
    <ClassMustBeFinal>
      <code><![CDATA[BanUserRequest]]></code>
    </ClassMustBeFinal>
    <PropertyNotSetInConstructor>
      <code><![CDATA[BanUserRequest]]></code>
      <code><![CDATA[BanUserRequest]]></code>
      <code><![CDATA[BanUserRequest]]></code>
      <code><![CDATA[BanUserRequest]]></code>
      <code><![CDATA[BanUserRequest]]></code>
      <code><![CDATA[BanUserRequest]]></code>
      <code><![CDATA[BanUserRequest]]></code>
      <code><![CDATA[BanUserRequest]]></code>
      <code><![CDATA[BanUserRequest]]></code>
    </PropertyNotSetInConstructor>
    <UnusedClass>
      <code><![CDATA[BanUserRequest]]></code>
    </UnusedClass>
  </file>
  <file src="app/Http/Requests/BaseApiRequest.php">
    <ClassMustBeFinal>
      <code><![CDATA[BaseApiRequest]]></code>
    </ClassMustBeFinal>
    <PropertyNotSetInConstructor>
      <code><![CDATA[BaseApiRequest]]></code>
      <code><![CDATA[BaseApiRequest]]></code>
      <code><![CDATA[BaseApiRequest]]></code>
      <code><![CDATA[BaseApiRequest]]></code>
      <code><![CDATA[BaseApiRequest]]></code>
      <code><![CDATA[BaseApiRequest]]></code>
      <code><![CDATA[BaseApiRequest]]></code>
      <code><![CDATA[BaseApiRequest]]></code>
      <code><![CDATA[BaseApiRequest]]></code>
    </PropertyNotSetInConstructor>
    <UnusedClass>
      <code><![CDATA[BaseApiRequest]]></code>
    </UnusedClass>
  </file>
  <file src="app/Http/Requests/CartRequest.php">
    <ClassMustBeFinal>
      <code><![CDATA[CartRequest]]></code>
    </ClassMustBeFinal>
    <PropertyNotSetInConstructor>
      <code><![CDATA[CartRequest]]></code>
      <code><![CDATA[CartRequest]]></code>
      <code><![CDATA[CartRequest]]></code>
      <code><![CDATA[CartRequest]]></code>
      <code><![CDATA[CartRequest]]></code>
      <code><![CDATA[CartRequest]]></code>
      <code><![CDATA[CartRequest]]></code>
      <code><![CDATA[CartRequest]]></code>
      <code><![CDATA[CartRequest]]></code>
    </PropertyNotSetInConstructor>
    <UnusedClass>
      <code><![CDATA[CartRequest]]></code>
    </UnusedClass>
  </file>
  <file src="app/Http/Requests/ChangePasswordRequest.php">
    <ClassMustBeFinal>
      <code><![CDATA[ChangePasswordRequest]]></code>
    </ClassMustBeFinal>
    <PropertyNotSetInConstructor>
      <code><![CDATA[ChangePasswordRequest]]></code>
      <code><![CDATA[ChangePasswordRequest]]></code>
      <code><![CDATA[ChangePasswordRequest]]></code>
      <code><![CDATA[ChangePasswordRequest]]></code>
      <code><![CDATA[ChangePasswordRequest]]></code>
      <code><![CDATA[ChangePasswordRequest]]></code>
      <code><![CDATA[ChangePasswordRequest]]></code>
      <code><![CDATA[ChangePasswordRequest]]></code>
      <code><![CDATA[ChangePasswordRequest]]></code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="app/Http/Requests/ForgotPasswordRequest.php">
    <ClassMustBeFinal>
      <code><![CDATA[ForgotPasswordRequest]]></code>
    </ClassMustBeFinal>
    <PropertyNotSetInConstructor>
      <code><![CDATA[ForgotPasswordRequest]]></code>
      <code><![CDATA[ForgotPasswordRequest]]></code>
      <code><![CDATA[ForgotPasswordRequest]]></code>
      <code><![CDATA[ForgotPasswordRequest]]></code>
      <code><![CDATA[ForgotPasswordRequest]]></code>
      <code><![CDATA[ForgotPasswordRequest]]></code>
      <code><![CDATA[ForgotPasswordRequest]]></code>
      <code><![CDATA[ForgotPasswordRequest]]></code>
      <code><![CDATA[ForgotPasswordRequest]]></code>
    </PropertyNotSetInConstructor>
    <UnusedClass>
      <code><![CDATA[ForgotPasswordRequest]]></code>
    </UnusedClass>
  </file>
  <file src="app/Http/Requests/LoginRequest.php">
    <ClassMustBeFinal>
      <code><![CDATA[LoginRequest]]></code>
    </ClassMustBeFinal>
    <PossiblyUnusedMethod>
      <code><![CDATA[rules]]></code>
    </PossiblyUnusedMethod>
    <PropertyNotSetInConstructor>
      <code><![CDATA[LoginRequest]]></code>
      <code><![CDATA[LoginRequest]]></code>
      <code><![CDATA[LoginRequest]]></code>
      <code><![CDATA[LoginRequest]]></code>
      <code><![CDATA[LoginRequest]]></code>
      <code><![CDATA[LoginRequest]]></code>
      <code><![CDATA[LoginRequest]]></code>
      <code><![CDATA[LoginRequest]]></code>
      <code><![CDATA[LoginRequest]]></code>
    </PropertyNotSetInConstructor>
    <UndefinedInterfaceMethod>
      <code><![CDATA[attempt]]></code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="app/Http/Requests/ProductCreateRequest.php">
    <ClassMustBeFinal>
      <code><![CDATA[ProductCreateRequest]]></code>
    </ClassMustBeFinal>
    <MixedArgument>
      <code><![CDATA[$key]]></code>
      <code><![CDATA[is_string($validated['name'] ?? '') ? ($validated['name'] ?? '') : '']]></code>
    </MixedArgument>
    <MixedAssignment>
      <code><![CDATA[$validated]]></code>
      <code><![CDATA[$validated['created_by']]]></code>
      <code><![CDATA[$validated['slug']]]></code>
    </MixedAssignment>
    <MixedMethodCall>
      <code><![CDATA[can]]></code>
      <code><![CDATA[slug]]></code>
      <code><![CDATA[toString]]></code>
    </MixedMethodCall>
    <MixedPropertyFetch>
      <code><![CDATA[$this->user()?->id]]></code>
    </MixedPropertyFetch>
    <MixedReturnStatement>
      <code><![CDATA[$this->user()?->can('create', \App\Models\Product::class) ?? false]]></code>
      <code><![CDATA[$this->user()?->can('create', \App\Models\Product::class) ?? false]]></code>
      <code><![CDATA[$validated]]></code>
      <code><![CDATA[$validated]]></code>
    </MixedReturnStatement>
    <MixedReturnTypeCoercion>
      <code><![CDATA[array<string, array<int, array|string>>]]></code>
      <code><![CDATA[array_merge(
            $this->getNameRules(),
            $this->getDescriptionRules(),
            $this->getPriceRules(),
            $this->getCategoryIdRules(),
            $this->getBrandIdRules(),
            $this->getSkuRules(),
            $this->getStockQuantityRules(),
            $this->getWeightRules(),
            $this->getDimensionsRules(),
            $this->getImagesRules(),
            $this->getTagsRules(),
            $this->getStatusRules()
        )]]></code>
    </MixedReturnTypeCoercion>
    <PropertyNotSetInConstructor>
      <code><![CDATA[ProductCreateRequest]]></code>
      <code><![CDATA[ProductCreateRequest]]></code>
      <code><![CDATA[ProductCreateRequest]]></code>
      <code><![CDATA[ProductCreateRequest]]></code>
      <code><![CDATA[ProductCreateRequest]]></code>
      <code><![CDATA[ProductCreateRequest]]></code>
      <code><![CDATA[ProductCreateRequest]]></code>
      <code><![CDATA[ProductCreateRequest]]></code>
      <code><![CDATA[ProductCreateRequest]]></code>
    </PropertyNotSetInConstructor>
    <UndefinedThisPropertyFetch>
      <code><![CDATA[$this->description]]></code>
      <code><![CDATA[$this->name]]></code>
      <code><![CDATA[$this->sku]]></code>
      <code><![CDATA[$this->tags]]></code>
    </UndefinedThisPropertyFetch>
    <UnusedClass>
      <code><![CDATA[ProductCreateRequest]]></code>
    </UnusedClass>
  </file>
  <file src="app/Http/Requests/ProductIndexRequest.php">
    <ClassMustBeFinal>
      <code><![CDATA[ProductIndexRequest]]></code>
    </ClassMustBeFinal>
    <PropertyNotSetInConstructor>
      <code><![CDATA[ProductIndexRequest]]></code>
      <code><![CDATA[ProductIndexRequest]]></code>
      <code><![CDATA[ProductIndexRequest]]></code>
      <code><![CDATA[ProductIndexRequest]]></code>
      <code><![CDATA[ProductIndexRequest]]></code>
      <code><![CDATA[ProductIndexRequest]]></code>
      <code><![CDATA[ProductIndexRequest]]></code>
      <code><![CDATA[ProductIndexRequest]]></code>
      <code><![CDATA[ProductIndexRequest]]></code>
    </PropertyNotSetInConstructor>
    <UnusedClass>
      <code><![CDATA[ProductIndexRequest]]></code>
    </UnusedClass>
  </file>
  <file src="app/Http/Requests/ProductRequest.php">
    <ClassMustBeFinal>
      <code><![CDATA[ProductRequest]]></code>
    </ClassMustBeFinal>
    <PossiblyInvalidOperand>
      <code><![CDATA[$this->route('product')]]></code>
    </PossiblyInvalidOperand>
    <PossiblyNullOperand>
      <code><![CDATA[$this->route('product')]]></code>
    </PossiblyNullOperand>
    <PropertyNotSetInConstructor>
      <code><![CDATA[ProductRequest]]></code>
      <code><![CDATA[ProductRequest]]></code>
      <code><![CDATA[ProductRequest]]></code>
      <code><![CDATA[ProductRequest]]></code>
      <code><![CDATA[ProductRequest]]></code>
      <code><![CDATA[ProductRequest]]></code>
      <code><![CDATA[ProductRequest]]></code>
      <code><![CDATA[ProductRequest]]></code>
      <code><![CDATA[ProductRequest]]></code>
    </PropertyNotSetInConstructor>
    <UndefinedThisPropertyFetch>
      <code><![CDATA[$this->name]]></code>
    </UndefinedThisPropertyFetch>
    <UnusedClass>
      <code><![CDATA[ProductRequest]]></code>
    </UnusedClass>
  </file>
  <file src="app/Http/Requests/ProductSearchRequest.php">
    <ClassMustBeFinal>
      <code><![CDATA[ProductSearchRequest]]></code>
    </ClassMustBeFinal>
    <MixedArrayAccess>
      <code><![CDATA[$validated['order']]]></code>
      <code><![CDATA[$validated['sort']]]></code>
    </MixedArrayAccess>
    <MixedAssignment>
      <code><![CDATA[$page]]></code>
      <code><![CDATA[$perPage]]></code>
      <code><![CDATA[$query]]></code>
      <code><![CDATA[$validated]]></code>
    </MixedAssignment>
    <MixedReturnTypeCoercion>
      <code><![CDATA[$this->safe()->except(['q', 'sort', 'order', 'page', 'per_page'])]]></code>
      <code><![CDATA[[
            'sort' => $this->input('sort', 'popularity'),
            'order' => $this->input('order', 'desc'),
            'page' => (int) $this->input('page', 1),
            'per_page' => (int) $this->input('per_page', 15),
        ]]]></code>
      <code><![CDATA[[
            'sort' => $validated['sort'] ?? 'popularity',
            'order' => $validated['order'] ?? 'desc',
        ]]]></code>
      <code><![CDATA[array<int, string>]]></code>
      <code><![CDATA[array<string, string>]]></code>
      <code><![CDATA[array<string, string|int>]]></code>
      <code><![CDATA[array<string, string|int|bool|array<string>|null>]]></code>
      <code><![CDATA[is_array($this->tags) ? array_map(static fn ($tag): string => is_string($tag) ? trim($tag) : '', $this->tags) : []]]></code>
    </MixedReturnTypeCoercion>
    <PossiblyInvalidMethodCall>
      <code><![CDATA[except]]></code>
    </PossiblyInvalidMethodCall>
    <PropertyNotSetInConstructor>
      <code><![CDATA[ProductSearchRequest]]></code>
      <code><![CDATA[ProductSearchRequest]]></code>
      <code><![CDATA[ProductSearchRequest]]></code>
      <code><![CDATA[ProductSearchRequest]]></code>
      <code><![CDATA[ProductSearchRequest]]></code>
      <code><![CDATA[ProductSearchRequest]]></code>
      <code><![CDATA[ProductSearchRequest]]></code>
      <code><![CDATA[ProductSearchRequest]]></code>
      <code><![CDATA[ProductSearchRequest]]></code>
    </PropertyNotSetInConstructor>
    <UndefinedThisPropertyFetch>
      <code><![CDATA[$this->q]]></code>
      <code><![CDATA[$this->tags]]></code>
    </UndefinedThisPropertyFetch>
    <UnusedClass>
      <code><![CDATA[ProductSearchRequest]]></code>
    </UnusedClass>
  </file>
  <file src="app/Http/Requests/ProductUpdateRequest.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$this->route('product')]]></code>
    </ArgumentTypeCoercion>
    <ClassMustBeFinal>
      <code><![CDATA[ProductUpdateRequest]]></code>
    </ClassMustBeFinal>
    <MixedArgument>
      <code><![CDATA[$this->input('price')]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code><![CDATA[$name]]></code>
      <code><![CDATA[$validated]]></code>
      <code><![CDATA[$validated['updated_by']]]></code>
    </MixedAssignment>
    <MixedMethodCall>
      <code><![CDATA[can]]></code>
    </MixedMethodCall>
    <MixedPropertyFetch>
      <code><![CDATA[$this->user()?->id]]></code>
    </MixedPropertyFetch>
    <MixedReturnStatement>
      <code><![CDATA[$this->user()?->can('update', $product) ?? false]]></code>
      <code><![CDATA[$this->user()?->can('update', $product) ?? false]]></code>
    </MixedReturnStatement>
    <MixedReturnTypeCoercion>
      <code><![CDATA[array<string, array<Rule|string>>]]></code>
      <code><![CDATA[array_merge(
            $this->getBaseRules(),
            $this->getSkuRules($productId),
            $this->getDimensionRules(),
            $this->getImageRules(),
            $this->getTagRules()
        )]]></code>
    </MixedReturnTypeCoercion>
    <PossiblyNullArgument>
      <code><![CDATA[$this->route('product')]]></code>
    </PossiblyNullArgument>
    <PropertyNotSetInConstructor>
      <code><![CDATA[ProductUpdateRequest]]></code>
      <code><![CDATA[ProductUpdateRequest]]></code>
      <code><![CDATA[ProductUpdateRequest]]></code>
      <code><![CDATA[ProductUpdateRequest]]></code>
      <code><![CDATA[ProductUpdateRequest]]></code>
      <code><![CDATA[ProductUpdateRequest]]></code>
      <code><![CDATA[ProductUpdateRequest]]></code>
      <code><![CDATA[ProductUpdateRequest]]></code>
      <code><![CDATA[ProductUpdateRequest]]></code>
      <code><![CDATA[ProductUpdateRequest]]></code>
      <code><![CDATA[ProductUpdateRequest]]></code>
      <code><![CDATA[ProductUpdateRequest]]></code>
      <code><![CDATA[ProductUpdateRequest]]></code>
      <code><![CDATA[ProductUpdateRequest]]></code>
      <code><![CDATA[ProductUpdateRequest]]></code>
      <code><![CDATA[ProductUpdateRequest]]></code>
    </PropertyNotSetInConstructor>
    <UndefinedThisPropertyFetch>
      <code><![CDATA[$this->description]]></code>
      <code><![CDATA[$this->name]]></code>
      <code><![CDATA[$this->sku]]></code>
      <code><![CDATA[$this->tags]]></code>
    </UndefinedThisPropertyFetch>
    <UnusedClass>
      <code><![CDATA[ProductUpdateRequest]]></code>
    </UnusedClass>
  </file>
  <file src="app/Http/Requests/RegisterRequest.php">
    <ClassMustBeFinal>
      <code><![CDATA[RegisterRequest]]></code>
    </ClassMustBeFinal>
    <PropertyNotSetInConstructor>
      <code><![CDATA[RegisterRequest]]></code>
      <code><![CDATA[RegisterRequest]]></code>
      <code><![CDATA[RegisterRequest]]></code>
      <code><![CDATA[RegisterRequest]]></code>
      <code><![CDATA[RegisterRequest]]></code>
      <code><![CDATA[RegisterRequest]]></code>
      <code><![CDATA[RegisterRequest]]></code>
      <code><![CDATA[RegisterRequest]]></code>
      <code><![CDATA[RegisterRequest]]></code>
    </PropertyNotSetInConstructor>
    <UnusedClass>
      <code><![CDATA[RegisterRequest]]></code>
    </UnusedClass>
  </file>
  <file src="app/Http/Requests/ResetPasswordRequest.php">
    <ClassMustBeFinal>
      <code><![CDATA[ResetPasswordRequest]]></code>
    </ClassMustBeFinal>
    <PropertyNotSetInConstructor>
      <code><![CDATA[ResetPasswordRequest]]></code>
      <code><![CDATA[ResetPasswordRequest]]></code>
      <code><![CDATA[ResetPasswordRequest]]></code>
      <code><![CDATA[ResetPasswordRequest]]></code>
      <code><![CDATA[ResetPasswordRequest]]></code>
      <code><![CDATA[ResetPasswordRequest]]></code>
      <code><![CDATA[ResetPasswordRequest]]></code>
      <code><![CDATA[ResetPasswordRequest]]></code>
      <code><![CDATA[ResetPasswordRequest]]></code>
    </PropertyNotSetInConstructor>
    <UnusedClass>
      <code><![CDATA[ResetPasswordRequest]]></code>
    </UnusedClass>
  </file>
  <file src="app/Http/Requests/StoreBrandRequest.php">
    <ClassMustBeFinal>
      <code><![CDATA[StoreBrandRequest]]></code>
    </ClassMustBeFinal>
    <PropertyNotSetInConstructor>
      <code><![CDATA[StoreBrandRequest]]></code>
      <code><![CDATA[StoreBrandRequest]]></code>
      <code><![CDATA[StoreBrandRequest]]></code>
      <code><![CDATA[StoreBrandRequest]]></code>
      <code><![CDATA[StoreBrandRequest]]></code>
      <code><![CDATA[StoreBrandRequest]]></code>
      <code><![CDATA[StoreBrandRequest]]></code>
      <code><![CDATA[StoreBrandRequest]]></code>
      <code><![CDATA[StoreBrandRequest]]></code>
    </PropertyNotSetInConstructor>
    <UnusedClass>
      <code><![CDATA[StoreBrandRequest]]></code>
    </UnusedClass>
  </file>
  <file src="app/Http/Requests/StoreCategoryRequest.php">
    <ClassMustBeFinal>
      <code><![CDATA[StoreCategoryRequest]]></code>
    </ClassMustBeFinal>
    <PropertyNotSetInConstructor>
      <code><![CDATA[StoreCategoryRequest]]></code>
      <code><![CDATA[StoreCategoryRequest]]></code>
      <code><![CDATA[StoreCategoryRequest]]></code>
      <code><![CDATA[StoreCategoryRequest]]></code>
      <code><![CDATA[StoreCategoryRequest]]></code>
      <code><![CDATA[StoreCategoryRequest]]></code>
      <code><![CDATA[StoreCategoryRequest]]></code>
      <code><![CDATA[StoreCategoryRequest]]></code>
      <code><![CDATA[StoreCategoryRequest]]></code>
    </PropertyNotSetInConstructor>
    <UnusedClass>
      <code><![CDATA[StoreCategoryRequest]]></code>
    </UnusedClass>
  </file>
  <file src="app/Http/Requests/StorePriceAlertRequest.php">
    <ClassMustBeFinal>
      <code><![CDATA[StorePriceAlertRequest]]></code>
    </ClassMustBeFinal>
    <PropertyNotSetInConstructor>
      <code><![CDATA[StorePriceAlertRequest]]></code>
      <code><![CDATA[StorePriceAlertRequest]]></code>
      <code><![CDATA[StorePriceAlertRequest]]></code>
      <code><![CDATA[StorePriceAlertRequest]]></code>
      <code><![CDATA[StorePriceAlertRequest]]></code>
      <code><![CDATA[StorePriceAlertRequest]]></code>
      <code><![CDATA[StorePriceAlertRequest]]></code>
      <code><![CDATA[StorePriceAlertRequest]]></code>
      <code><![CDATA[StorePriceAlertRequest]]></code>
    </PropertyNotSetInConstructor>
    <UnusedClass>
      <code><![CDATA[StorePriceAlertRequest]]></code>
    </UnusedClass>
  </file>
  <file src="app/Http/Requests/StoreProductRequest.php">
    <ClassMustBeFinal>
      <code><![CDATA[StoreProductRequest]]></code>
    </ClassMustBeFinal>
    <PossiblyUnusedMethod>
      <code><![CDATA[authorize]]></code>
      <code><![CDATA[rules]]></code>
    </PossiblyUnusedMethod>
    <PropertyNotSetInConstructor>
      <code><![CDATA[StoreProductRequest]]></code>
      <code><![CDATA[StoreProductRequest]]></code>
      <code><![CDATA[StoreProductRequest]]></code>
      <code><![CDATA[StoreProductRequest]]></code>
      <code><![CDATA[StoreProductRequest]]></code>
      <code><![CDATA[StoreProductRequest]]></code>
      <code><![CDATA[StoreProductRequest]]></code>
      <code><![CDATA[StoreProductRequest]]></code>
      <code><![CDATA[StoreProductRequest]]></code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="app/Http/Requests/StoreReviewRequest.php">
    <ClassMustBeFinal>
      <code><![CDATA[StoreReviewRequest]]></code>
    </ClassMustBeFinal>
    <MixedReturnStatement>
      <code><![CDATA[auth()->check()]]></code>
    </MixedReturnStatement>
    <PossiblyUnusedMethod>
      <code><![CDATA[authorize]]></code>
      <code><![CDATA[rules]]></code>
    </PossiblyUnusedMethod>
    <PropertyNotSetInConstructor>
      <code><![CDATA[StoreReviewRequest]]></code>
      <code><![CDATA[StoreReviewRequest]]></code>
      <code><![CDATA[StoreReviewRequest]]></code>
      <code><![CDATA[StoreReviewRequest]]></code>
      <code><![CDATA[StoreReviewRequest]]></code>
      <code><![CDATA[StoreReviewRequest]]></code>
      <code><![CDATA[StoreReviewRequest]]></code>
      <code><![CDATA[StoreReviewRequest]]></code>
      <code><![CDATA[StoreReviewRequest]]></code>
    </PropertyNotSetInConstructor>
    <UndefinedInterfaceMethod>
      <code><![CDATA[check]]></code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="app/Http/Requests/SwitchLanguageRequest.php">
    <ClassMustBeFinal>
      <code><![CDATA[SwitchLanguageRequest]]></code>
    </ClassMustBeFinal>
    <PropertyNotSetInConstructor>
      <code><![CDATA[SwitchLanguageRequest]]></code>
      <code><![CDATA[SwitchLanguageRequest]]></code>
      <code><![CDATA[SwitchLanguageRequest]]></code>
      <code><![CDATA[SwitchLanguageRequest]]></code>
      <code><![CDATA[SwitchLanguageRequest]]></code>
      <code><![CDATA[SwitchLanguageRequest]]></code>
      <code><![CDATA[SwitchLanguageRequest]]></code>
      <code><![CDATA[SwitchLanguageRequest]]></code>
      <code><![CDATA[SwitchLanguageRequest]]></code>
    </PropertyNotSetInConstructor>
    <UnusedClass>
      <code><![CDATA[SwitchLanguageRequest]]></code>
    </UnusedClass>
  </file>
  <file src="app/Http/Requests/UpdateBrandRequest.php">
    <ClassMustBeFinal>
      <code><![CDATA[UpdateBrandRequest]]></code>
    </ClassMustBeFinal>
    <PropertyNotSetInConstructor>
      <code><![CDATA[UpdateBrandRequest]]></code>
      <code><![CDATA[UpdateBrandRequest]]></code>
      <code><![CDATA[UpdateBrandRequest]]></code>
      <code><![CDATA[UpdateBrandRequest]]></code>
      <code><![CDATA[UpdateBrandRequest]]></code>
      <code><![CDATA[UpdateBrandRequest]]></code>
      <code><![CDATA[UpdateBrandRequest]]></code>
      <code><![CDATA[UpdateBrandRequest]]></code>
      <code><![CDATA[UpdateBrandRequest]]></code>
    </PropertyNotSetInConstructor>
    <UnusedClass>
      <code><![CDATA[UpdateBrandRequest]]></code>
    </UnusedClass>
  </file>
  <file src="app/Http/Requests/UpdateCartRequest.php">
    <ClassMustBeFinal>
      <code><![CDATA[UpdateCartRequest]]></code>
    </ClassMustBeFinal>
    <PossiblyUnusedMethod>
      <code><![CDATA[authorize]]></code>
      <code><![CDATA[rules]]></code>
    </PossiblyUnusedMethod>
    <PropertyNotSetInConstructor>
      <code><![CDATA[UpdateCartRequest]]></code>
      <code><![CDATA[UpdateCartRequest]]></code>
      <code><![CDATA[UpdateCartRequest]]></code>
      <code><![CDATA[UpdateCartRequest]]></code>
      <code><![CDATA[UpdateCartRequest]]></code>
      <code><![CDATA[UpdateCartRequest]]></code>
      <code><![CDATA[UpdateCartRequest]]></code>
      <code><![CDATA[UpdateCartRequest]]></code>
      <code><![CDATA[UpdateCartRequest]]></code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="app/Http/Requests/UpdateCategoryRequest.php">
    <ClassMustBeFinal>
      <code><![CDATA[UpdateCategoryRequest]]></code>
    </ClassMustBeFinal>
    <PropertyNotSetInConstructor>
      <code><![CDATA[UpdateCategoryRequest]]></code>
      <code><![CDATA[UpdateCategoryRequest]]></code>
      <code><![CDATA[UpdateCategoryRequest]]></code>
      <code><![CDATA[UpdateCategoryRequest]]></code>
      <code><![CDATA[UpdateCategoryRequest]]></code>
      <code><![CDATA[UpdateCategoryRequest]]></code>
      <code><![CDATA[UpdateCategoryRequest]]></code>
      <code><![CDATA[UpdateCategoryRequest]]></code>
      <code><![CDATA[UpdateCategoryRequest]]></code>
    </PropertyNotSetInConstructor>
    <UnusedClass>
      <code><![CDATA[UpdateCategoryRequest]]></code>
    </UnusedClass>
  </file>
  <file src="app/Http/Requests/UpdatePriceAlertRequest.php">
    <ClassMustBeFinal>
      <code><![CDATA[UpdatePriceAlertRequest]]></code>
    </ClassMustBeFinal>
    <PropertyNotSetInConstructor>
      <code><![CDATA[UpdatePriceAlertRequest]]></code>
      <code><![CDATA[UpdatePriceAlertRequest]]></code>
      <code><![CDATA[UpdatePriceAlertRequest]]></code>
      <code><![CDATA[UpdatePriceAlertRequest]]></code>
      <code><![CDATA[UpdatePriceAlertRequest]]></code>
      <code><![CDATA[UpdatePriceAlertRequest]]></code>
      <code><![CDATA[UpdatePriceAlertRequest]]></code>
      <code><![CDATA[UpdatePriceAlertRequest]]></code>
      <code><![CDATA[UpdatePriceAlertRequest]]></code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="app/Http/Requests/UpdateProductRequest.php">
    <ClassMustBeFinal>
      <code><![CDATA[UpdateProductRequest]]></code>
    </ClassMustBeFinal>
    <PropertyNotSetInConstructor>
      <code><![CDATA[UpdateProductRequest]]></code>
      <code><![CDATA[UpdateProductRequest]]></code>
      <code><![CDATA[UpdateProductRequest]]></code>
      <code><![CDATA[UpdateProductRequest]]></code>
      <code><![CDATA[UpdateProductRequest]]></code>
      <code><![CDATA[UpdateProductRequest]]></code>
      <code><![CDATA[UpdateProductRequest]]></code>
      <code><![CDATA[UpdateProductRequest]]></code>
      <code><![CDATA[UpdateProductRequest]]></code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="app/Http/Requests/UpdateReviewRequest.php">
    <ClassMustBeFinal>
      <code><![CDATA[UpdateReviewRequest]]></code>
    </ClassMustBeFinal>
    <PropertyNotSetInConstructor>
      <code><![CDATA[UpdateReviewRequest]]></code>
      <code><![CDATA[UpdateReviewRequest]]></code>
      <code><![CDATA[UpdateReviewRequest]]></code>
      <code><![CDATA[UpdateReviewRequest]]></code>
      <code><![CDATA[UpdateReviewRequest]]></code>
      <code><![CDATA[UpdateReviewRequest]]></code>
      <code><![CDATA[UpdateReviewRequest]]></code>
      <code><![CDATA[UpdateReviewRequest]]></code>
      <code><![CDATA[UpdateReviewRequest]]></code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="app/Http/Requests/UpdateUserRequest.php">
    <ClassMustBeFinal>
      <code><![CDATA[UpdateUserRequest]]></code>
    </ClassMustBeFinal>
    <PropertyNotSetInConstructor>
      <code><![CDATA[UpdateUserRequest]]></code>
      <code><![CDATA[UpdateUserRequest]]></code>
      <code><![CDATA[UpdateUserRequest]]></code>
      <code><![CDATA[UpdateUserRequest]]></code>
      <code><![CDATA[UpdateUserRequest]]></code>
      <code><![CDATA[UpdateUserRequest]]></code>
      <code><![CDATA[UpdateUserRequest]]></code>
      <code><![CDATA[UpdateUserRequest]]></code>
      <code><![CDATA[UpdateUserRequest]]></code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="app/Http/Requests/UploadFileRequest.php">
    <ClassMustBeFinal>
      <code><![CDATA[UploadFileRequest]]></code>
    </ClassMustBeFinal>
    <MixedArgument>
      <code><![CDATA[$allowed]]></code>
    </MixedArgument>
    <MixedArrayAccess>
      <code><![CDATA[$config['allowed_extensions']]]></code>
      <code><![CDATA[$config['max_size']]]></code>
    </MixedArrayAccess>
    <MixedAssignment>
      <code><![CDATA[$allowed]]></code>
      <code><![CDATA[$config]]></code>
    </MixedAssignment>
    <PossiblyUnusedMethod>
      <code><![CDATA[authorize]]></code>
      <code><![CDATA[rules]]></code>
    </PossiblyUnusedMethod>
    <PropertyNotSetInConstructor>
      <code><![CDATA[UploadFileRequest]]></code>
      <code><![CDATA[UploadFileRequest]]></code>
      <code><![CDATA[UploadFileRequest]]></code>
      <code><![CDATA[UploadFileRequest]]></code>
      <code><![CDATA[UploadFileRequest]]></code>
      <code><![CDATA[UploadFileRequest]]></code>
      <code><![CDATA[UploadFileRequest]]></code>
      <code><![CDATA[UploadFileRequest]]></code>
      <code><![CDATA[UploadFileRequest]]></code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="app/Http/Resources/OrderItemResource.php">
    <ClassMustBeFinal>
      <code><![CDATA[OrderItemResource]]></code>
    </ClassMustBeFinal>
    <UndefinedThisPropertyFetch>
      <code><![CDATA[$this->id]]></code>
      <code><![CDATA[$this->product_id]]></code>
      <code><![CDATA[$this->quantity]]></code>
    </UndefinedThisPropertyFetch>
    <UnusedClass>
      <code><![CDATA[OrderItemResource]]></code>
    </UnusedClass>
  </file>
  <file src="app/Http/Resources/OrderResource.php">
    <ClassMustBeFinal>
      <code><![CDATA[OrderResource]]></code>
    </ClassMustBeFinal>
    <MixedMethodCall>
      <code><![CDATA[color]]></code>
      <code><![CDATA[label]]></code>
      <code><![CDATA[toIso8601String]]></code>
      <code><![CDATA[toIso8601String]]></code>
      <code><![CDATA[toIso8601String]]></code>
      <code><![CDATA[toIso8601String]]></code>
    </MixedMethodCall>
    <MixedPropertyFetch>
      <code><![CDATA[$this->status_enum->value]]></code>
    </MixedPropertyFetch>
    <UndefinedThisPropertyFetch>
      <code><![CDATA[$this->billing_address]]></code>
      <code><![CDATA[$this->created_at]]></code>
      <code><![CDATA[$this->currency]]></code>
      <code><![CDATA[$this->delivered_at]]></code>
      <code><![CDATA[$this->discount_amount]]></code>
      <code><![CDATA[$this->id]]></code>
      <code><![CDATA[$this->notes]]></code>
      <code><![CDATA[$this->order_number]]></code>
      <code><![CDATA[$this->shipped_at]]></code>
      <code><![CDATA[$this->shipping_address]]></code>
      <code><![CDATA[$this->shipping_amount]]></code>
      <code><![CDATA[$this->status_enum]]></code>
      <code><![CDATA[$this->subtotal]]></code>
      <code><![CDATA[$this->tax_amount]]></code>
      <code><![CDATA[$this->total_amount]]></code>
      <code><![CDATA[$this->updated_at]]></code>
      <code><![CDATA[$this->user_id]]></code>
    </UndefinedThisPropertyFetch>
  </file>
  <file src="app/Http/Resources/ProductResource.php">
    <ClassMustBeFinal>
      <code><![CDATA[ProductResource]]></code>
    </ClassMustBeFinal>
    <MissingClosureReturnType>
      <code><![CDATA[fn () => class_exists(CategoryResource::class) ? new CategoryResource($this->category) : $this->category]]></code>
    </MissingClosureReturnType>
    <UndefinedThisPropertyFetch>
      <code><![CDATA[$this->barcode]]></code>
      <code><![CDATA[$this->compare_price]]></code>
      <code><![CDATA[$this->cost_price]]></code>
      <code><![CDATA[$this->images]]></code>
      <code><![CDATA[$this->is_featured]]></code>
      <code><![CDATA[$this->rating]]></code>
      <code><![CDATA[$this->reviews_count]]></code>
    </UndefinedThisPropertyFetch>
    <UnusedClass>
      <code><![CDATA[ProductResource]]></code>
    </UnusedClass>
  </file>
  <file src="app/Http/Resources/UserResource.php">
    <ClassMustBeFinal>
      <code><![CDATA[UserResource]]></code>
    </ClassMustBeFinal>
    <MixedMethodCall>
      <code><![CDATA[toIso8601String]]></code>
      <code><![CDATA[toIso8601String]]></code>
    </MixedMethodCall>
    <UndefinedThisPropertyFetch>
      <code><![CDATA[$this->created_at]]></code>
      <code><![CDATA[$this->updated_at]]></code>
    </UndefinedThisPropertyFetch>
    <UnusedClass>
      <code><![CDATA[UserResource]]></code>
    </UnusedClass>
  </file>
  <file src="app/Jobs/FetchDailyPriceUpdates.php">
    <ClassMustBeFinal>
      <code><![CDATA[FetchDailyPriceUpdates]]></code>
    </ClassMustBeFinal>
    <PossiblyUnusedMethod>
      <code><![CDATA[handle]]></code>
    </PossiblyUnusedMethod>
    <PossiblyUnusedProperty>
      <code><![CDATA[$tries]]></code>
    </PossiblyUnusedProperty>
    <UndefinedMagicMethod>
      <code><![CDATA[PriceHistory::create([
                        'product_id' => $product->id,
                        'price' => $currentPrice,
                        'effective_date' => now(),
                    ])]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Jobs/ProcessHeavyOperation.php">
    <ClassMustBeFinal>
      <code><![CDATA[ProcessHeavyOperation]]></code>
    </ClassMustBeFinal>
    <MixedReturnStatement>
      <code><![CDATA[cache()->get("job-status-{$jobId}")]]></code>
      <code><![CDATA[cache()->get("user-{$userId}-job-statuses", [])]]></code>
    </MixedReturnStatement>
    <PossiblyUnusedMethod>
      <code><![CDATA[getJobStatus]]></code>
      <code><![CDATA[getMaxExceptions]]></code>
      <code><![CDATA[getTimeout]]></code>
      <code><![CDATA[getTries]]></code>
      <code><![CDATA[getUserJobStatuses]]></code>
      <code><![CDATA[handle]]></code>
    </PossiblyUnusedMethod>
    <UnusedProperty>
      <code><![CDATA[$data]]></code>
      <code><![CDATA[$userId]]></code>
    </UnusedProperty>
  </file>
  <file src="app/Jobs/SendPriceAlert.php">
    <ClassMustBeFinal>
      <code><![CDATA[SendPriceAlert]]></code>
    </ClassMustBeFinal>
    <DocblockTypeContradiction>
      <code><![CDATA[! $product]]></code>
      <code><![CDATA[$product]]></code>
    </DocblockTypeContradiction>
    <PossiblyUnusedMethod>
      <code><![CDATA[handle]]></code>
    </PossiblyUnusedMethod>
    <RedundantCastGivenDocblockType>
      <code><![CDATA[(float) $alert->target_price]]></code>
    </RedundantCastGivenDocblockType>
    <RedundantCondition>
      <code><![CDATA[$product->getCurrentPrice()]]></code>
    </RedundantCondition>
    <TypeDoesNotContainNull>
      <code><![CDATA[0]]></code>
    </TypeDoesNotContainNull>
  </file>
  <file src="app/Listeners/SendOrderStatusNotification.php">
    <ClassMustBeFinal>
      <code><![CDATA[SendOrderStatusNotification]]></code>
    </ClassMustBeFinal>
    <MixedArgument>
      <code><![CDATA[$order->order_number]]></code>
    </MixedArgument>
    <UndefinedMagicMethod>
      <code><![CDATA[Notification::create([
            'user_id' => $order->user_id,
            'type' => 'order_status',
            'title' => 'تحديث حالة الطلب',
            'message' => $message,
            'data' => [
                'order_id' => $order->id,
                'order_number' => $order->order_number,
                'old_status' => $event->oldStatus->value,
                'new_status' => $newStatus->value,
            ],
            'status' => 'pending',
        ])]]></code>
    </UndefinedMagicMethod>
    <UndefinedMagicPropertyFetch>
      <code><![CDATA[$order->id]]></code>
      <code><![CDATA[$order->order_number]]></code>
      <code><![CDATA[$order->user_id]]></code>
    </UndefinedMagicPropertyFetch>
    <UnusedClass>
      <code><![CDATA[SendOrderStatusNotification]]></code>
    </UnusedClass>
  </file>
  <file src="app/Mail/WelcomeMail.php">
    <ClassMustBeFinal>
      <code><![CDATA[WelcomeMail]]></code>
    </ClassMustBeFinal>
  </file>
  <file src="app/Models/AnalyticsEvent.php">
    <ClassMustBeFinal>
      <code><![CDATA[AnalyticsEvent]]></code>
    </ClassMustBeFinal>
    <MixedReturnStatement>
      <code><![CDATA[$this->belongsTo(Category::class)]]></code>
      <code><![CDATA[$this->belongsTo(Product::class)]]></code>
      <code><![CDATA[$this->belongsTo(Store::class)]]></code>
      <code><![CDATA[$this->belongsTo(User::class)]]></code>
    </MixedReturnStatement>
    <NonInvariantDocblockPropertyType>
      <code><![CDATA[$casts]]></code>
    </NonInvariantDocblockPropertyType>
    <PossiblyUnusedMethod>
      <code><![CDATA[category]]></code>
      <code><![CDATA[product]]></code>
      <code><![CDATA[scopeOfType]]></code>
      <code><![CDATA[scopeRecent]]></code>
      <code><![CDATA[store]]></code>
      <code><![CDATA[user]]></code>
    </PossiblyUnusedMethod>
  </file>
  <file src="app/Models/AuditLog.php">
    <ArgumentTypeCoercion>
      <code><![CDATA['event']]></code>
    </ArgumentTypeCoercion>
    <ClassMustBeFinal>
      <code><![CDATA[AuditLog]]></code>
    </ClassMustBeFinal>
    <MissingClosureParamType>
      <code><![CDATA[$value]]></code>
    </MissingClosureParamType>
    <MissingParamType>
      <code><![CDATA[$value]]></code>
      <code><![CDATA[$value]]></code>
    </MissingParamType>
    <MixedAssignment>
      <code><![CDATA[$decoded]]></code>
      <code><![CDATA[$newVal]]></code>
      <code><![CDATA[$oldVal]]></code>
    </MixedAssignment>
    <MixedReturnStatement>
      <code><![CDATA[$this->belongsTo(User::class)]]></code>
      <code><![CDATA[$this->morphTo()]]></code>
    </MixedReturnStatement>
    <MixedReturnTypeCoercion>
      <code><![CDATA[$decoded]]></code>
      <code><![CDATA[$value]]></code>
      <code><![CDATA[$value->getArrayCopy()]]></code>
      <code><![CDATA[$value->toArray()]]></code>
      <code><![CDATA[array<string, mixed>|null]]></code>
    </MixedReturnTypeCoercion>
    <NonInvariantDocblockPropertyType>
      <code><![CDATA[$casts]]></code>
    </NonInvariantDocblockPropertyType>
    <PossiblyUnusedMethod>
      <code><![CDATA[auditable]]></code>
      <code><![CDATA[getChangesSummaryAttribute]]></code>
      <code><![CDATA[getFormattedEventAttribute]]></code>
      <code><![CDATA[getNewValuesAttribute]]></code>
      <code><![CDATA[getOldValuesAttribute]]></code>
      <code><![CDATA[scopeDateRange]]></code>
      <code><![CDATA[scopeEvent]]></code>
      <code><![CDATA[scopeForModel]]></code>
      <code><![CDATA[scopeForUser]]></code>
      <code><![CDATA[user]]></code>
    </PossiblyUnusedMethod>
  </file>
  <file src="app/Models/Brand.php">
    <ClassMustBeFinal>
      <code><![CDATA[Brand]]></code>
    </ClassMustBeFinal>
    <DocblockTypeContradiction>
      <code><![CDATA[$this->slug === null]]></code>
    </DocblockTypeContradiction>
    <MixedMethodCall>
      <code><![CDATA[where]]></code>
      <code><![CDATA[where]]></code>
    </MixedMethodCall>
    <MixedReturnStatement>
      <code><![CDATA[$query->withTrashed()->where('is_active', true)]]></code>
      <code><![CDATA[$query->withTrashed()->where('name', 'like', "%{$searchTerm}%")]]></code>
      <code><![CDATA[$this->hasMany(Product::class)]]></code>
    </MixedReturnStatement>
    <NonInvariantDocblockPropertyType>
      <code><![CDATA[$casts]]></code>
    </NonInvariantDocblockPropertyType>
    <PossiblyUnusedMethod>
      <code><![CDATA[products]]></code>
      <code><![CDATA[scopeActive]]></code>
      <code><![CDATA[scopeSearch]]></code>
    </PossiblyUnusedMethod>
    <UndefinedMagicMethod>
      <code><![CDATA[withTrashed]]></code>
      <code><![CDATA[withTrashed]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Models/Category.php">
    <ClassMustBeFinal>
      <code><![CDATA[Category]]></code>
    </ClassMustBeFinal>
    <DocblockTypeContradiction>
      <code><![CDATA[$this->level === null]]></code>
      <code><![CDATA[$this->level === null]]></code>
      <code><![CDATA[$this->slug === null]]></code>
    </DocblockTypeContradiction>
    <InvalidReturnStatement>
      <code><![CDATA[$category->handleCreatingEvent()]]></code>
      <code><![CDATA[$category->handleUpdatingEvent()]]></code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code><![CDATA[true]]></code>
      <code><![CDATA[true]]></code>
    </InvalidReturnType>
    <MixedMethodCall>
      <code><![CDATA[where]]></code>
      <code><![CDATA[where]]></code>
    </MixedMethodCall>
    <MixedReturnStatement>
      <code><![CDATA[$query->withTrashed()->where('is_active', true)]]></code>
      <code><![CDATA[$query->withTrashed()->where('name', 'like', "%{$searchTerm}%")]]></code>
      <code><![CDATA[$this->belongsTo(self::class, 'parent_id')]]></code>
      <code><![CDATA[$this->hasMany(Product::class, 'category_id')]]></code>
      <code><![CDATA[$this->hasMany(self::class, 'parent_id')]]></code>
    </MixedReturnStatement>
    <MixedReturnTypeCoercion>
      <code><![CDATA[$this->errors instanceof \Illuminate\Support\MessageBag ? $this->errors->toArray() : []]]></code>
      <code><![CDATA[array<string, array<int, string>>]]></code>
    </MixedReturnTypeCoercion>
    <NonInvariantDocblockPropertyType>
      <code><![CDATA[$casts]]></code>
    </NonInvariantDocblockPropertyType>
    <PossiblyUnusedMethod>
      <code><![CDATA[children]]></code>
      <code><![CDATA[parent]]></code>
      <code><![CDATA[products]]></code>
      <code><![CDATA[scopeActive]]></code>
      <code><![CDATA[scopeSearch]]></code>
    </PossiblyUnusedMethod>
    <UndefinedClass>
      <code><![CDATA[\Str]]></code>
    </UndefinedClass>
    <UndefinedMagicMethod>
      <code><![CDATA[withTrashed]]></code>
      <code><![CDATA[withTrashed]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Models/Currency.php">
    <ClassMustBeFinal>
      <code><![CDATA[Currency]]></code>
    </ClassMustBeFinal>
    <MissingTemplateParam>
      <code><![CDATA[BelongsToMany<Language, Currency>]]></code>
      <code><![CDATA[HasFactory]]></code>
    </MissingTemplateParam>
    <MixedMethodCall>
      <code><![CDATA[withPivot]]></code>
      <code><![CDATA[withTimestamps]]></code>
    </MixedMethodCall>
    <MixedReturnStatement>
      <code><![CDATA[$this->belongsToMany(Language::class, 'currency_language')
            ->withPivot('is_default')
            ->withTimestamps()]]></code>
      <code><![CDATA[$this->hasMany(Store::class, 'currency_id')]]></code>
    </MixedReturnStatement>
    <NonInvariantDocblockPropertyType>
      <code><![CDATA[$guarded]]></code>
    </NonInvariantDocblockPropertyType>
    <PossiblyUnusedMethod>
      <code><![CDATA[languages]]></code>
      <code><![CDATA[stores]]></code>
    </PossiblyUnusedMethod>
  </file>
  <file src="app/Models/ExchangeRate.php">
    <ClassMustBeFinal>
      <code><![CDATA[ExchangeRate]]></code>
    </ClassMustBeFinal>
    <InvalidArgument>
      <code><![CDATA[function ($q): void {
            $q->whereNull('fetched_at')
                ->orWhere('fetched_at', '>', now()->subHours(24));
        }]]></code>
    </InvalidArgument>
    <MixedAssignment>
      <code><![CDATA[$rate]]></code>
    </MixedAssignment>
    <MixedMethodCall>
      <code><![CDATA[first]]></code>
      <code><![CDATA[latest]]></code>
      <code><![CDATA[orWhere]]></code>
      <code><![CDATA[where]]></code>
    </MixedMethodCall>
    <MixedPropertyFetch>
      <code><![CDATA[$rate->rate]]></code>
    </MixedPropertyFetch>
    <NonInvariantDocblockPropertyType>
      <code><![CDATA[$casts]]></code>
    </NonInvariantDocblockPropertyType>
    <PossiblyUnusedMethod>
      <code><![CDATA[isStale]]></code>
      <code><![CDATA[scopeFresh]]></code>
      <code><![CDATA[scopeStale]]></code>
    </PossiblyUnusedMethod>
    <UndefinedMagicMethod>
      <code><![CDATA[self::where('from_currency', $fromCurrency)]]></code>
      <code><![CDATA[whereNull]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Models/Language.php">
    <ClassMustBeFinal>
      <code><![CDATA[Language]]></code>
    </ClassMustBeFinal>
    <MissingTemplateParam>
      <code><![CDATA[$this->currencies()->wherePivot('is_default', true)]]></code>
      <code><![CDATA[BelongsToMany<Currency, Language>]]></code>
      <code><![CDATA[HasFactory]]></code>
    </MissingTemplateParam>
    <MixedMethodCall>
      <code><![CDATA[first]]></code>
      <code><![CDATA[withPivot]]></code>
      <code><![CDATA[withTimestamps]]></code>
    </MixedMethodCall>
    <MixedReturnStatement>
      <code><![CDATA[$this->belongsToMany(Currency::class, 'language_currency')
            ->withPivot('is_default')
            ->withTimestamps()]]></code>
      <code><![CDATA[$this->hasMany(UserLocaleSetting::class, 'language_id')]]></code>
      <code><![CDATA[static::where('code', $code)->first()]]></code>
    </MixedReturnStatement>
    <NonInvariantDocblockPropertyType>
      <code><![CDATA[$casts]]></code>
    </NonInvariantDocblockPropertyType>
    <PossiblyUnusedMethod>
      <code><![CDATA[defaultCurrency]]></code>
      <code><![CDATA[findByCode]]></code>
      <code><![CDATA[isRtl]]></code>
      <code><![CDATA[scopeActive]]></code>
      <code><![CDATA[scopeOrdered]]></code>
      <code><![CDATA[userLocaleSettings]]></code>
    </PossiblyUnusedMethod>
    <UndefinedMagicMethod>
      <code><![CDATA[static::where('code', $code)]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Models/Notification.php">
    <ClassMustBeFinal>
      <code><![CDATA[Notification]]></code>
    </ClassMustBeFinal>
    <DocblockTypeContradiction>
      <code><![CDATA['']]></code>
      <code><![CDATA['tag']]></code>
      <code><![CDATA[0]]></code>
      <code><![CDATA[0]]></code>
      <code><![CDATA[[]]]></code>
      <code><![CDATA[[]]]></code>
      <code><![CDATA[[]]]></code>
    </DocblockTypeContradiction>
    <MixedArgument>
      <code><![CDATA[$tags]]></code>
    </MixedArgument>
    <MixedArgumentTypeCoercion>
      <code><![CDATA[$attributes]]></code>
      <code><![CDATA[$metadata]]></code>
      <code><![CDATA[$tags]]></code>
      <code><![CDATA[$value]]></code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment>
      <code><![CDATA[$config]]></code>
      <code><![CDATA[$createdRaw]]></code>
      <code><![CDATA[$createdRaw]]></code>
      <code><![CDATA[$createdRaw]]></code>
      <code><![CDATA[$expirationDays]]></code>
      <code><![CDATA[$metadata]]></code>
      <code><![CDATA[$raw]]></code>
      <code><![CDATA[$readRaw]]></code>
      <code><![CDATA[$reason]]></code>
      <code><![CDATA[$retryCount]]></code>
      <code><![CDATA[$sentAt]]></code>
      <code><![CDATA[$sentRaw]]></code>
      <code><![CDATA[$tags]]></code>
      <code><![CDATA[$text]]></code>
      <code><![CDATA[$url]]></code>
    </MixedAssignment>
    <MixedReturnStatement>
      <code><![CDATA[$this->belongsTo(User::class)]]></code>
    </MixedReturnStatement>
    <MixedReturnTypeCoercion>
      <code><![CDATA[array<string, mixed>]]></code>
      <code><![CDATA[is_array($metadata) ? $metadata : []]]></code>
    </MixedReturnTypeCoercion>
    <NonInvariantDocblockPropertyType>
      <code><![CDATA[$casts]]></code>
      <code><![CDATA[$hidden]]></code>
    </NonInvariantDocblockPropertyType>
    <PossiblyUnusedMethod>
      <code><![CDATA[__construct]]></code>
      <code><![CDATA[addTag]]></code>
      <code><![CDATA[canRetry]]></code>
      <code><![CDATA[getActionText]]></code>
      <code><![CDATA[getBadgeText]]></code>
      <code><![CDATA[getChannelDisplayName]]></code>
      <code><![CDATA[getColor]]></code>
      <code><![CDATA[getExpirationDate]]></code>
      <code><![CDATA[getFailureReason]]></code>
      <code><![CDATA[getIcon]]></code>
      <code><![CDATA[getMetadata]]></code>
      <code><![CDATA[getPriorityLevel]]></code>
      <code><![CDATA[getReadTimeAgo]]></code>
      <code><![CDATA[getSentTimeAgo]]></code>
      <code><![CDATA[getStatusDisplayName]]></code>
      <code><![CDATA[getSummary]]></code>
      <code><![CDATA[getTimeAgo]]></code>
      <code><![CDATA[getTypeDisplayName]]></code>
      <code><![CDATA[hasAction]]></code>
      <code><![CDATA[hasTag]]></code>
      <code><![CDATA[incrementRetryCount]]></code>
      <code><![CDATA[isExpired]]></code>
      <code><![CDATA[isRead]]></code>
      <code><![CDATA[isSent]]></code>
      <code><![CDATA[markAsFailed]]></code>
      <code><![CDATA[markAsRead]]></code>
      <code><![CDATA[markAsSent]]></code>
      <code><![CDATA[markAsUnread]]></code>
      <code><![CDATA[removeTag]]></code>
      <code><![CDATA[scopeAfter]]></code>
      <code><![CDATA[scopeBefore]]></code>
      <code><![CDATA[scopeBetween]]></code>
      <code><![CDATA[scopeFailed]]></code>
      <code><![CDATA[scopeForUser]]></code>
      <code><![CDATA[scopeOfPriority]]></code>
      <code><![CDATA[scopeOfStatus]]></code>
      <code><![CDATA[scopeOfType]]></code>
      <code><![CDATA[scopePending]]></code>
      <code><![CDATA[scopeRead]]></code>
      <code><![CDATA[scopeSent]]></code>
      <code><![CDATA[scopeUnread]]></code>
      <code><![CDATA[setData]]></code>
      <code><![CDATA[setMetadata]]></code>
      <code><![CDATA[setTags]]></code>
      <code><![CDATA[user]]></code>
    </PossiblyUnusedMethod>
    <RedundantCastGivenDocblockType>
      <code><![CDATA[(int) ($this->priority ?? 0)]]></code>
      <code><![CDATA[(int) ($this->priority ?? 0)]]></code>
      <code><![CDATA[(string) $this->channel]]></code>
      <code><![CDATA[(string) $this->status]]></code>
      <code><![CDATA[(string) ($this->message ?? '')]]></code>
    </RedundantCastGivenDocblockType>
    <RedundantCondition>
      <code><![CDATA[is_array($tags)]]></code>
    </RedundantCondition>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[$this->created_at instanceof Carbon]]></code>
      <code><![CDATA[$this->created_at instanceof Carbon]]></code>
      <code><![CDATA[$this->data]]></code>
      <code><![CDATA[$this->data]]></code>
      <code><![CDATA[$this->data]]></code>
      <code><![CDATA[$this->message]]></code>
      <code><![CDATA[$this->priority]]></code>
      <code><![CDATA[$this->priority]]></code>
      <code><![CDATA[is_string($tag)]]></code>
    </RedundantConditionGivenDocblockType>
    <TypeDoesNotContainType>
      <code><![CDATA[[]]]></code>
    </TypeDoesNotContainType>
  </file>
  <file src="app/Models/Order.php">
    <ClassMustBeFinal>
      <code><![CDATA[Order]]></code>
    </ClassMustBeFinal>
    <InvalidOperand>
      <code><![CDATA[$price * $qty]]></code>
    </InvalidOperand>
    <MissingParamType>
      <code><![CDATA[$value]]></code>
    </MissingParamType>
    <MissingTemplateParam>
      <code><![CDATA[HasFactory]]></code>
    </MissingTemplateParam>
    <MixedAssignment>
      <code><![CDATA[$connName]]></code>
      <code><![CDATA[$items]]></code>
      <code><![CDATA[$raw]]></code>
      <code><![CDATA[$row]]></code>
    </MixedAssignment>
    <MixedMethodCall>
      <code><![CDATA[get]]></code>
      <code><![CDATA[isNotEmpty]]></code>
      <code><![CDATA[where]]></code>
    </MixedMethodCall>
    <MixedPropertyFetch>
      <code><![CDATA[$row->price]]></code>
      <code><![CDATA[$row->quantity]]></code>
      <code><![CDATA[$row->total]]></code>
      <code><![CDATA[$row->total_price]]></code>
      <code><![CDATA[$row->unit_price]]></code>
    </MixedPropertyFetch>
    <MixedReturnStatement>
      <code><![CDATA[$this->belongsTo(User::class)]]></code>
      <code><![CDATA[$this->hasMany(OrderItem::class, 'order_id', 'id')]]></code>
      <code><![CDATA[$this->hasMany(Payment::class)]]></code>
    </MixedReturnStatement>
    <NonInvariantDocblockPropertyType>
      <code><![CDATA[$casts]]></code>
    </NonInvariantDocblockPropertyType>
    <PossiblyUnusedMethod>
      <code><![CDATA[getStatusEnumAttribute]]></code>
      <code><![CDATA[getTotalAttribute]]></code>
      <code><![CDATA[payments]]></code>
      <code><![CDATA[recalculateTotals]]></code>
      <code><![CDATA[scopeByStatus]]></code>
      <code><![CDATA[scopeForUser]]></code>
      <code><![CDATA[setStatusAttribute]]></code>
      <code><![CDATA[user]]></code>
    </PossiblyUnusedMethod>
    <UndefinedClass>
      <code><![CDATA[\DB]]></code>
      <code><![CDATA[\DB]]></code>
      <code><![CDATA[\DB]]></code>
      <code><![CDATA[\DB]]></code>
      <code><![CDATA[\DB]]></code>
    </UndefinedClass>
    <UndefinedMagicMethod>
      <code><![CDATA[newQuery]]></code>
    </UndefinedMagicMethod>
    <UndefinedMagicPropertyAssignment>
      <code><![CDATA[$order->total_amount]]></code>
    </UndefinedMagicPropertyAssignment>
    <UndefinedThisPropertyFetch>
      <code><![CDATA[$this->subtotal]]></code>
    </UndefinedThisPropertyFetch>
  </file>
  <file src="app/Models/OrderItem.php">
    <ClassMustBeFinal>
      <code><![CDATA[OrderItem]]></code>
    </ClassMustBeFinal>
    <InvalidOperand>
      <code><![CDATA[$price * $qty]]></code>
    </InvalidOperand>
    <MissingParamType>
      <code><![CDATA[$value]]></code>
      <code><![CDATA[$value]]></code>
    </MissingParamType>
    <MissingTemplateParam>
      <code><![CDATA[HasFactory]]></code>
    </MissingTemplateParam>
    <MixedAssignment>
      <code><![CDATA[$connName]]></code>
      <code><![CDATA[$order]]></code>
      <code><![CDATA[$orderId]]></code>
    </MixedAssignment>
    <MixedMethodCall>
      <code><![CDATA[getKey]]></code>
    </MixedMethodCall>
    <MixedReturnStatement>
      <code><![CDATA[$this->belongsTo(Order::class)]]></code>
      <code><![CDATA[$this->belongsTo(Product::class)]]></code>
    </MixedReturnStatement>
    <NonInvariantDocblockPropertyType>
      <code><![CDATA[$casts]]></code>
      <code><![CDATA[$guarded]]></code>
    </NonInvariantDocblockPropertyType>
    <PossiblyUnusedMethod>
      <code><![CDATA[getTotalPriceAttribute]]></code>
      <code><![CDATA[getUnitPriceAttribute]]></code>
      <code><![CDATA[order]]></code>
      <code><![CDATA[product]]></code>
      <code><![CDATA[setTotalPriceAttribute]]></code>
      <code><![CDATA[setUnitPriceAttribute]]></code>
    </PossiblyUnusedMethod>
    <UndefinedClass>
      <code><![CDATA[\DB]]></code>
      <code><![CDATA[\DB]]></code>
      <code><![CDATA[\DB]]></code>
    </UndefinedClass>
    <UndefinedMagicPropertyFetch>
      <code><![CDATA[$item->order]]></code>
    </UndefinedMagicPropertyFetch>
  </file>
  <file src="app/Models/Payment.php">
    <ClassMustBeFinal>
      <code><![CDATA[Payment]]></code>
    </ClassMustBeFinal>
    <MixedReturnStatement>
      <code><![CDATA[$this->belongsTo(Order::class)]]></code>
      <code><![CDATA[$this->belongsTo(PaymentMethod::class)]]></code>
    </MixedReturnStatement>
    <NonInvariantDocblockPropertyType>
      <code><![CDATA[$casts]]></code>
    </NonInvariantDocblockPropertyType>
    <PossiblyUnusedMethod>
      <code><![CDATA[order]]></code>
      <code><![CDATA[paymentMethod]]></code>
      <code><![CDATA[scopeByStatus]]></code>
    </PossiblyUnusedMethod>
  </file>
  <file src="app/Models/PaymentMethod.php">
    <ClassMustBeFinal>
      <code><![CDATA[PaymentMethod]]></code>
    </ClassMustBeFinal>
    <MissingTemplateParam>
      <code><![CDATA[HasFactory]]></code>
    </MissingTemplateParam>
    <MixedReturnStatement>
      <code><![CDATA[$this->hasMany(Payment::class)]]></code>
    </MixedReturnStatement>
    <NonInvariantDocblockPropertyType>
      <code><![CDATA[$casts]]></code>
    </NonInvariantDocblockPropertyType>
    <PossiblyUnusedMethod>
      <code><![CDATA[payments]]></code>
      <code><![CDATA[scopeActive]]></code>
      <code><![CDATA[scopeDefault]]></code>
    </PossiblyUnusedMethod>
  </file>
  <file src="app/Models/Pivots/ProductStore.php">
    <ClassMustBeFinal>
      <code><![CDATA[ProductStore]]></code>
    </ClassMustBeFinal>
    <NonInvariantDocblockPropertyType>
      <code><![CDATA[$casts]]></code>
    </NonInvariantDocblockPropertyType>
    <PropertyNotSetInConstructor>
      <code><![CDATA[ProductStore]]></code>
      <code><![CDATA[ProductStore]]></code>
      <code><![CDATA[ProductStore]]></code>
      <code><![CDATA[ProductStore]]></code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="app/Models/PriceAlert.php">
    <ClassMustBeFinal>
      <code><![CDATA[PriceAlert]]></code>
    </ClassMustBeFinal>
    <DocblockTypeContradiction>
      <code><![CDATA[0.0]]></code>
    </DocblockTypeContradiction>
    <MixedReturnStatement>
      <code><![CDATA[$this->belongsTo(Product::class)]]></code>
      <code><![CDATA[$this->belongsTo(User::class)]]></code>
    </MixedReturnStatement>
    <NonInvariantDocblockPropertyType>
      <code><![CDATA[$casts]]></code>
    </NonInvariantDocblockPropertyType>
    <PossiblyUnusedMethod>
      <code><![CDATA[activate]]></code>
      <code><![CDATA[deactivate]]></code>
      <code><![CDATA[isPriceTargetReached]]></code>
      <code><![CDATA[product]]></code>
      <code><![CDATA[scopeActive]]></code>
      <code><![CDATA[scopeForProduct]]></code>
      <code><![CDATA[scopeForUser]]></code>
      <code><![CDATA[user]]></code>
    </PossiblyUnusedMethod>
    <RedundantCastGivenDocblockType>
      <code><![CDATA[(float) ($this->target_price ?? 0.0)]]></code>
    </RedundantCastGivenDocblockType>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[$this->target_price]]></code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="app/Models/PriceHistory.php">
    <ClassMustBeFinal>
      <code><![CDATA[PriceHistory]]></code>
    </ClassMustBeFinal>
    <MissingTemplateParam>
      <code><![CDATA[HasFactory]]></code>
    </MissingTemplateParam>
    <MixedReturnStatement>
      <code><![CDATA[$this->belongsTo(Product::class)]]></code>
    </MixedReturnStatement>
    <PossiblyUnusedMethod>
      <code><![CDATA[product]]></code>
    </PossiblyUnusedMethod>
  </file>
  <file src="app/Models/PriceOffer.php">
    <ClassMustBeFinal>
      <code><![CDATA[PriceOffer]]></code>
    </ClassMustBeFinal>
    <MissingTemplateParam>
      <code><![CDATA[HasFactory]]></code>
    </MissingTemplateParam>
    <MixedReturnStatement>
      <code><![CDATA[$this->belongsTo(Product::class)]]></code>
      <code><![CDATA[$this->belongsTo(Store::class)]]></code>
    </MixedReturnStatement>
    <NonInvariantDocblockPropertyType>
      <code><![CDATA[$casts]]></code>
    </NonInvariantDocblockPropertyType>
    <PossiblyUnusedMethod>
      <code><![CDATA[product]]></code>
      <code><![CDATA[store]]></code>
    </PossiblyUnusedMethod>
  </file>
  <file src="app/Models/Product.php">
    <ClassMustBeFinal>
      <code><![CDATA[Product]]></code>
    </ClassMustBeFinal>
    <MethodSignatureMismatch>
      <code><![CDATA[Product]]></code>
    </MethodSignatureMismatch>
    <MissingTemplateParam>
      <code><![CDATA[\Illuminate\Database\Eloquent\Relations\BelongsToMany<Store>]]></code>
    </MissingTemplateParam>
    <MixedArgument>
      <code><![CDATA[$latestPrice - $previousPrice]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code><![CDATA[$avg]]></code>
      <code><![CDATA[$latestPrice]]></code>
      <code><![CDATA[$previousPrice]]></code>
      <code><![CDATA[$priceChangePercentage]]></code>
    </MixedAssignment>
    <MixedMethodCall>
      <code><![CDATA[count]]></code>
      <code><![CDATA[first]]></code>
      <code><![CDATA[get]]></code>
      <code><![CDATA[last]]></code>
      <code><![CDATA[orderBy]]></code>
      <code><![CDATA[penultimate]]></code>
      <code><![CDATA[using]]></code>
      <code><![CDATA[withPivot]]></code>
      <code><![CDATA[withTimestamps]]></code>
    </MixedMethodCall>
    <MixedOperand>
      <code><![CDATA[$latestPrice]]></code>
      <code><![CDATA[$previousPrice]]></code>
      <code><![CDATA[$priceChange / $previousPrice]]></code>
    </MixedOperand>
    <MixedPropertyFetch>
      <code><![CDATA[$offer->price]]></code>
    </MixedPropertyFetch>
    <MixedPropertyTypeCoercion>
      <code><![CDATA[$validator->errors()->toArray()]]></code>
    </MixedPropertyTypeCoercion>
    <MixedReturnStatement>
      <code><![CDATA[$this->belongsTo(Brand::class)]]></code>
      <code><![CDATA[$this->belongsTo(Category::class)]]></code>
      <code><![CDATA[$this->belongsTo(Currency::class)]]></code>
      <code><![CDATA[$this->belongsTo(Store::class)]]></code>
      <code><![CDATA[$this->belongsToMany(Store::class, 'product_store')
            ->using(\App\Models\Pivots\ProductStore::class)
            ->withPivot(['price', 'currency_id', 'is_available'])
            ->withTimestamps()]]></code>
      <code><![CDATA[$this->hasMany(OrderItem::class)]]></code>
      <code><![CDATA[$this->hasMany(PriceAlert::class)]]></code>
      <code><![CDATA[$this->hasMany(PriceHistory::class)->orderBy('effective_date')]]></code>
      <code><![CDATA[$this->hasMany(PriceOffer::class)]]></code>
      <code><![CDATA[$this->hasMany(Review::class)]]></code>
      <code><![CDATA[$this->hasMany(Wishlist::class)]]></code>
      <code><![CDATA[$this->priceOffers()
            ->orderBy('price')
            ->get()]]></code>
      <code><![CDATA[$this->wishlists()
                ->where('user_id', $userId)
                ->exists()]]></code>
    </MixedReturnStatement>
    <NonInvariantDocblockPropertyType>
      <code><![CDATA[$casts]]></code>
    </NonInvariantDocblockPropertyType>
    <PossiblyUnusedMethod>
      <code><![CDATA[brand]]></code>
      <code><![CDATA[category]]></code>
      <code><![CDATA[currency]]></code>
      <code><![CDATA[each]]></code>
      <code><![CDATA[getAverageRating]]></code>
      <code><![CDATA[getErrors]]></code>
      <code><![CDATA[getPriceHistory]]></code>
      <code><![CDATA[getReviewsCountAttribute]]></code>
      <code><![CDATA[getStockAttribute]]></code>
      <code><![CDATA[getTotalReviews]]></code>
      <code><![CDATA[hasSignificantPriceChange]]></code>
      <code><![CDATA[isInWishlist]]></code>
      <code><![CDATA[orderItems]]></code>
      <code><![CDATA[scopeActive]]></code>
      <code><![CDATA[scopeSearch]]></code>
      <code><![CDATA[scopeWithReviewsCount]]></code>
      <code><![CDATA[setStockAttribute]]></code>
      <code><![CDATA[store]]></code>
      <code><![CDATA[stores]]></code>
      <code><![CDATA[validate]]></code>
    </PossiblyUnusedMethod>
    <RedundantCastGivenDocblockType>
      <code><![CDATA[(int) ($qty ?? 0)]]></code>
    </RedundantCastGivenDocblockType>
    <RedundantCondition>
      <code><![CDATA[$product->wasChanged('price') && method_exists($product, 'priceHistory')]]></code>
      <code><![CDATA[method_exists($product, 'priceHistory')]]></code>
    </RedundantCondition>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[assert($latest instanceof PriceHistory)]]></code>
      <code><![CDATA[assert($previous instanceof PriceHistory)]]></code>
    </RedundantConditionGivenDocblockType>
    <UndefinedMagicMethod>
      <code><![CDATA[avg]]></code>
      <code><![CDATA[count]]></code>
      <code><![CDATA[count]]></code>
      <code><![CDATA[exists]]></code>
      <code><![CDATA[orderBy]]></code>
      <code><![CDATA[orderByDesc]]></code>
    </UndefinedMagicMethod>
    <UndefinedMagicPropertyFetch>
      <code><![CDATA[$latest->price]]></code>
      <code><![CDATA[$previous->price]]></code>
    </UndefinedMagicPropertyFetch>
    <UndefinedThisPropertyFetch>
      <code><![CDATA[$this->priceHistory]]></code>
    </UndefinedThisPropertyFetch>
  </file>
  <file src="app/Models/Review.php">
    <ClassMustBeFinal>
      <code><![CDATA[Review]]></code>
    </ClassMustBeFinal>
    <DocblockTypeContradiction>
      <code><![CDATA['']]></code>
    </DocblockTypeContradiction>
    <MixedReturnStatement>
      <code><![CDATA[$this->belongsTo(Product::class)]]></code>
      <code><![CDATA[$this->belongsTo(User::class)]]></code>
    </MixedReturnStatement>
    <NonInvariantDocblockPropertyType>
      <code><![CDATA[$casts]]></code>
    </NonInvariantDocblockPropertyType>
    <PossiblyUnusedMethod>
      <code><![CDATA[getReviewTextAttribute]]></code>
      <code><![CDATA[product]]></code>
      <code><![CDATA[user]]></code>
    </PossiblyUnusedMethod>
    <RedundantCastGivenDocblockType>
      <code><![CDATA[(string) ($this->content ?? '')]]></code>
    </RedundantCastGivenDocblockType>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[$this->content]]></code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="app/Models/Reward.php">
    <ClassMustBeFinal>
      <code><![CDATA[Reward]]></code>
    </ClassMustBeFinal>
    <InvalidArgument>
      <code><![CDATA[function ($q): void {
                $q->whereNull('valid_from')->orWhere('valid_from', '<=', now());
            }]]></code>
      <code><![CDATA[function ($q): void {
                $q->whereNull('valid_from')->orWhere('valid_from', '<=', now());
            }]]></code>
      <code><![CDATA[function ($q): void {
                $q->whereNull('valid_until')->orWhere('valid_until', '>=', now());
            }]]></code>
      <code><![CDATA[function ($q): void {
                $q->whereNull('valid_until')->orWhere('valid_until', '>=', now());
            }]]></code>
    </InvalidArgument>
    <MixedMethodCall>
      <code><![CDATA[orWhere]]></code>
      <code><![CDATA[orWhere]]></code>
      <code><![CDATA[orWhere]]></code>
      <code><![CDATA[orWhere]]></code>
    </MixedMethodCall>
    <NonInvariantDocblockPropertyType>
      <code><![CDATA[$casts]]></code>
    </NonInvariantDocblockPropertyType>
    <PossiblyUnusedMethod>
      <code><![CDATA[scopeActive]]></code>
      <code><![CDATA[scopeAvailableForPoints]]></code>
    </PossiblyUnusedMethod>
    <UndefinedMagicMethod>
      <code><![CDATA[whereNull]]></code>
      <code><![CDATA[whereNull]]></code>
      <code><![CDATA[whereNull]]></code>
      <code><![CDATA[whereNull]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Models/Store.php">
    <ClassMustBeFinal>
      <code><![CDATA[Store]]></code>
    </ClassMustBeFinal>
    <MissingParamType>
      <code><![CDATA[$value]]></code>
      <code><![CDATA[$value]]></code>
      <code><![CDATA[$value]]></code>
      <code><![CDATA[$value]]></code>
    </MissingParamType>
    <MissingTemplateParam>
      <code><![CDATA[\Illuminate\Database\Eloquent\Relations\HasMany<PriceOffer>]]></code>
      <code><![CDATA[\Illuminate\Database\Eloquent\Relations\HasMany<Product>]]></code>
    </MissingTemplateParam>
    <MixedAssignment>
      <code><![CDATA[$decoded]]></code>
      <code><![CDATA[$decoded]]></code>
      <code><![CDATA[$decoded]]></code>
      <code><![CDATA[$decoded]]></code>
    </MixedAssignment>
    <MixedReturnStatement>
      <code><![CDATA[$this->belongsTo(Currency::class)]]></code>
      <code><![CDATA[$this->hasMany(PriceOffer::class)]]></code>
      <code><![CDATA[$this->hasMany(Product::class)]]></code>
    </MixedReturnStatement>
    <MixedReturnTypeCoercion>
      <code><![CDATA[$value]]></code>
      <code><![CDATA[$value]]></code>
      <code><![CDATA[array<int, string>|null]]></code>
      <code><![CDATA[array<string, mixed>|null]]></code>
      <code><![CDATA[is_array($decoded) ? $decoded : []]]></code>
      <code><![CDATA[is_array($decoded) ? $decoded : []]]></code>
    </MixedReturnTypeCoercion>
    <NonInvariantDocblockPropertyType>
      <code><![CDATA[$casts]]></code>
    </NonInvariantDocblockPropertyType>
    <PossiblyUnusedMethod>
      <code><![CDATA[currency]]></code>
      <code><![CDATA[generateAffiliateUrl]]></code>
      <code><![CDATA[getApiConfigAttribute]]></code>
      <code><![CDATA[getSupportedCountriesAttribute]]></code>
      <code><![CDATA[priceOffers]]></code>
      <code><![CDATA[products]]></code>
      <code><![CDATA[scopeActive]]></code>
      <code><![CDATA[scopeSearch]]></code>
      <code><![CDATA[setApiConfigAttribute]]></code>
      <code><![CDATA[setSupportedCountriesAttribute]]></code>
    </PossiblyUnusedMethod>
    <RedundantCastGivenDocblockType>
      <code><![CDATA[(string) $this->affiliate_base_url]]></code>
      <code><![CDATA[(string) $this->affiliate_code]]></code>
    </RedundantCastGivenDocblockType>
    <UndefinedClass>
      <code><![CDATA[\Str]]></code>
    </UndefinedClass>
  </file>
  <file src="app/Models/User.php">
    <ClassMustBeFinal>
      <code><![CDATA[User]]></code>
    </ClassMustBeFinal>
    <DocblockTypeContradiction>
      <code><![CDATA[false]]></code>
      <code><![CDATA[false]]></code>
    </DocblockTypeContradiction>
    <MissingTemplateParam>
      <code><![CDATA[HasApiTokens]]></code>
    </MissingTemplateParam>
    <MixedReturnStatement>
      <code><![CDATA[$this->hasMany(Order::class)]]></code>
      <code><![CDATA[$this->hasMany(PriceAlert::class)]]></code>
      <code><![CDATA[$this->hasMany(Review::class)]]></code>
      <code><![CDATA[$this->hasMany(Wishlist::class)]]></code>
      <code><![CDATA[$this->hasOne(UserLocaleSetting::class)]]></code>
    </MixedReturnStatement>
    <NonInvariantDocblockPropertyType>
      <code><![CDATA[$hidden]]></code>
    </NonInvariantDocblockPropertyType>
    <PossiblyUnusedMethod>
      <code><![CDATA[isBanExpired]]></code>
      <code><![CDATA[localeSetting]]></code>
    </PossiblyUnusedMethod>
    <PropertyNotSetInConstructor>
      <code><![CDATA[User]]></code>
    </PropertyNotSetInConstructor>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[$this->is_admin]]></code>
      <code><![CDATA[$this->is_blocked]]></code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="app/Models/UserLocaleSetting.php">
    <ClassMustBeFinal>
      <code><![CDATA[UserLocaleSetting]]></code>
    </ClassMustBeFinal>
    <MissingTemplateParam>
      <code><![CDATA[HasFactory]]></code>
    </MissingTemplateParam>
    <MixedReturnStatement>
      <code><![CDATA[$this->belongsTo(Currency::class)]]></code>
      <code><![CDATA[$this->belongsTo(Language::class)]]></code>
      <code><![CDATA[$this->belongsTo(User::class)]]></code>
      <code><![CDATA[self::create($attributes)]]></code>
    </MixedReturnStatement>
    <NonInvariantDocblockPropertyType>
      <code><![CDATA[$casts]]></code>
    </NonInvariantDocblockPropertyType>
    <PossiblyUnusedMethod>
      <code><![CDATA[currency]]></code>
      <code><![CDATA[findForUser]]></code>
      <code><![CDATA[language]]></code>
      <code><![CDATA[updateOrCreateForUser]]></code>
      <code><![CDATA[user]]></code>
    </PossiblyUnusedMethod>
    <UndefinedMagicMethod>
      <code><![CDATA[self::create($attributes)]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Models/UserPoint.php">
    <ClassMustBeFinal>
      <code><![CDATA[UserPoint]]></code>
    </ClassMustBeFinal>
    <MissingTemplateParam>
      <code><![CDATA[HasFactory]]></code>
    </MissingTemplateParam>
    <MixedReturnStatement>
      <code><![CDATA[$this->belongsTo(Order::class)]]></code>
      <code><![CDATA[$this->belongsTo(User::class)]]></code>
    </MixedReturnStatement>
    <NonInvariantDocblockPropertyType>
      <code><![CDATA[$casts]]></code>
    </NonInvariantDocblockPropertyType>
    <PossiblyUnusedMethod>
      <code><![CDATA[order]]></code>
      <code><![CDATA[scopeEarned]]></code>
      <code><![CDATA[scopeRedeemed]]></code>
      <code><![CDATA[scopeValid]]></code>
      <code><![CDATA[user]]></code>
    </PossiblyUnusedMethod>
  </file>
  <file src="app/Models/ValidatableModel.php">
    <MixedReturnTypeCoercion>
      <code><![CDATA[$this->errors?->toArray() ?? []]]></code>
      <code><![CDATA[array<string, array<int, string>>]]></code>
    </MixedReturnTypeCoercion>
    <PossiblyUnusedMethod>
      <code><![CDATA[getErrors]]></code>
      <code><![CDATA[validate]]></code>
    </PossiblyUnusedMethod>
  </file>
  <file src="app/Models/Webhook.php">
    <ClassMustBeFinal>
      <code><![CDATA[Webhook]]></code>
    </ClassMustBeFinal>
    <MixedReturnStatement>
      <code><![CDATA[$this->hasMany(WebhookLog::class)]]></code>
    </MixedReturnStatement>
    <NonInvariantDocblockPropertyType>
      <code><![CDATA[$casts]]></code>
    </NonInvariantDocblockPropertyType>
    <PossiblyUnusedMethod>
      <code><![CDATA[scopeEventType]]></code>
      <code><![CDATA[scopePending]]></code>
      <code><![CDATA[scopeStatus]]></code>
      <code><![CDATA[scopeStore]]></code>
    </PossiblyUnusedMethod>
  </file>
  <file src="app/Models/WebhookLog.php">
    <ClassMustBeFinal>
      <code><![CDATA[WebhookLog]]></code>
    </ClassMustBeFinal>
    <NonInvariantDocblockPropertyType>
      <code><![CDATA[$casts]]></code>
    </NonInvariantDocblockPropertyType>
  </file>
  <file src="app/Models/Wishlist.php">
    <ClassMustBeFinal>
      <code><![CDATA[Wishlist]]></code>
    </ClassMustBeFinal>
    <MixedReturnStatement>
      <code><![CDATA[$this->belongsTo(Product::class)]]></code>
      <code><![CDATA[$this->belongsTo(User::class)]]></code>
    </MixedReturnStatement>
    <MixedReturnTypeCoercion>
      <code><![CDATA[$this->errors instanceof \Illuminate\Support\MessageBag ? $this->errors->toArray() : []]]></code>
      <code><![CDATA[array<string, array<int, string>>]]></code>
    </MixedReturnTypeCoercion>
    <PossiblyUnusedMethod>
      <code><![CDATA[addToWishlist]]></code>
      <code><![CDATA[getWishlistCount]]></code>
      <code><![CDATA[isProductInWishlist]]></code>
      <code><![CDATA[product]]></code>
      <code><![CDATA[removeFromWishlist]]></code>
      <code><![CDATA[scopeForProduct]]></code>
      <code><![CDATA[scopeForUser]]></code>
      <code><![CDATA[user]]></code>
    </PossiblyUnusedMethod>
    <RedundantCastGivenDocblockType>
      <code><![CDATA[(int) self::query()->where('user_id', $userId)->count()]]></code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="app/Notifications/OrderConfirmationNotification.php">
    <ClassMustBeFinal>
      <code><![CDATA[OrderConfirmationNotification]]></code>
    </ClassMustBeFinal>
  </file>
  <file src="app/Notifications/PriceAlertNotification.php">
    <ClassMustBeFinal>
      <code><![CDATA[PriceAlertNotification]]></code>
    </ClassMustBeFinal>
    <DocblockTypeContradiction>
      <code><![CDATA['Product']]></code>
      <code><![CDATA['Product']]></code>
    </DocblockTypeContradiction>
    <PossiblyUnusedMethod>
      <code><![CDATA[toArray]]></code>
      <code><![CDATA[toMail]]></code>
      <code><![CDATA[via]]></code>
    </PossiblyUnusedMethod>
    <PossiblyUnusedParam>
      <code><![CDATA[$notifiable]]></code>
      <code><![CDATA[$notifiable]]></code>
    </PossiblyUnusedParam>
    <PropertyNotSetInConstructor>
      <code><![CDATA[PriceAlertNotification]]></code>
    </PropertyNotSetInConstructor>
    <RedundantCastGivenDocblockType>
      <code><![CDATA[(float) $this->alert->target_price]]></code>
      <code><![CDATA[(float) $this->alert->target_price]]></code>
      <code><![CDATA[(string) ($product->name ?? 'Product')]]></code>
    </RedundantCastGivenDocblockType>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[$product]]></code>
      <code><![CDATA[$product->name]]></code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="app/Notifications/PriceDropNotification.php">
    <ClassMustBeFinal>
      <code><![CDATA[PriceDropNotification]]></code>
    </ClassMustBeFinal>
    <MissingParamType>
      <code><![CDATA[$notifiable]]></code>
    </MissingParamType>
    <PossiblyUnusedMethod>
      <code><![CDATA[toArray]]></code>
      <code><![CDATA[via]]></code>
    </PossiblyUnusedMethod>
    <PossiblyUnusedParam>
      <code><![CDATA[$notifiable]]></code>
    </PossiblyUnusedParam>
    <PropertyNotSetInConstructor>
      <code><![CDATA[PriceDropNotification]]></code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="app/Notifications/ProductAddedNotification.php">
    <ClassMustBeFinal>
      <code><![CDATA[ProductAddedNotification]]></code>
    </ClassMustBeFinal>
    <PossiblyUnusedMethod>
      <code><![CDATA[toArray]]></code>
    </PossiblyUnusedMethod>
    <PropertyNotSetInConstructor>
      <code><![CDATA[ProductAddedNotification]]></code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="app/Notifications/ReviewNotification.php">
    <ClassMustBeFinal>
      <code><![CDATA[ReviewNotification]]></code>
    </ClassMustBeFinal>
    <PossiblyUnusedMethod>
      <code><![CDATA[toArray]]></code>
    </PossiblyUnusedMethod>
    <PropertyNotSetInConstructor>
      <code><![CDATA[ReviewNotification]]></code>
      <code><![CDATA[ReviewNotification]]></code>
      <code><![CDATA[ReviewNotification]]></code>
      <code><![CDATA[ReviewNotification]]></code>
      <code><![CDATA[ReviewNotification]]></code>
      <code><![CDATA[ReviewNotification]]></code>
      <code><![CDATA[ReviewNotification]]></code>
      <code><![CDATA[ReviewNotification]]></code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="app/Notifications/SystemNotification.php">
    <ClassMustBeFinal>
      <code><![CDATA[SystemNotification]]></code>
    </ClassMustBeFinal>
    <PossiblyUnusedMethod>
      <code><![CDATA[toArray]]></code>
    </PossiblyUnusedMethod>
    <PropertyNotSetInConstructor>
      <code><![CDATA[SystemNotification]]></code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="app/Observers/ProductObserver.php">
    <ClassMustBeFinal>
      <code><![CDATA[ProductObserver]]></code>
    </ClassMustBeFinal>
    <PossiblyUnusedMethod>
      <code><![CDATA[deleted]]></code>
      <code><![CDATA[updated]]></code>
    </PossiblyUnusedMethod>
  </file>
  <file src="app/Policies/ProductPolicy.php">
    <ClassMustBeFinal>
      <code><![CDATA[ProductPolicy]]></code>
    </ClassMustBeFinal>
    <UnusedClass>
      <code><![CDATA[ProductPolicy]]></code>
    </UnusedClass>
  </file>
  <file src="app/Policies/UserPolicy.php">
    <ClassMustBeFinal>
      <code><![CDATA[UserPolicy]]></code>
    </ClassMustBeFinal>
    <UnusedClass>
      <code><![CDATA[UserPolicy]]></code>
    </UnusedClass>
  </file>
  <file src="app/Providers/ApiServiceProvider.php">
    <ClassMustBeFinal>
      <code><![CDATA[ApiServiceProvider]]></code>
    </ClassMustBeFinal>
    <PossiblyUnusedMethod>
      <code><![CDATA[boot]]></code>
    </PossiblyUnusedMethod>
  </file>
  <file src="app/Providers/AppServiceProvider.php">
    <PossiblyUnusedMethod>
      <code><![CDATA[boot]]></code>
    </PossiblyUnusedMethod>
  </file>
  <file src="app/Providers/AuthServiceProvider.php">
    <PossiblyUnusedMethod>
      <code><![CDATA[boot]]></code>
    </PossiblyUnusedMethod>
  </file>
  <file src="app/Providers/BroadcastServiceProvider.php">
    <ClassMustBeFinal>
      <code><![CDATA[BroadcastServiceProvider]]></code>
    </ClassMustBeFinal>
    <UndefinedInterfaceMethod>
      <code><![CDATA[routes]]></code>
    </UndefinedInterfaceMethod>
    <UnresolvableInclude>
      <code><![CDATA[require_once base_path('routes/channels.php')]]></code>
    </UnresolvableInclude>
    <UnusedClass>
      <code><![CDATA[BroadcastServiceProvider]]></code>
    </UnusedClass>
  </file>
  <file src="app/Providers/CollectionMacroServiceProvider.php">
    <ClassMustBeFinal>
      <code><![CDATA[CollectionMacroServiceProvider]]></code>
    </ClassMustBeFinal>
    <MixedMethodCall>
      <code><![CDATA[first]]></code>
    </MixedMethodCall>
    <PossiblyUnusedMethod>
      <code><![CDATA[boot]]></code>
    </PossiblyUnusedMethod>
    <UndefinedMethod>
      <code><![CDATA[count]]></code>
      <code><![CDATA[slice]]></code>
    </UndefinedMethod>
  </file>
  <file src="app/Providers/CompressionServiceProvider.php">
    <ClassMustBeFinal>
      <code><![CDATA[CompressionServiceProvider]]></code>
    </ClassMustBeFinal>
    <MissingClosureParamType>
      <code><![CDATA[$app]]></code>
    </MissingClosureParamType>
    <MixedArgument>
      <code><![CDATA[$app->make(CompressionService::class)]]></code>
      <code><![CDATA[$app->make(ContentTypeService::class)]]></code>
    </MixedArgument>
    <MixedMethodCall>
      <code><![CDATA[make]]></code>
      <code><![CDATA[make]]></code>
    </MixedMethodCall>
    <PossiblyUnusedMethod>
      <code><![CDATA[boot]]></code>
    </PossiblyUnusedMethod>
  </file>
  <file src="app/Providers/CoprraServiceProvider.php">
    <MissingClosureParamType>
      <code><![CDATA[$expression]]></code>
      <code><![CDATA[$expression]]></code>
    </MissingClosureParamType>
    <PossiblyUnusedMethod>
      <code><![CDATA[boot]]></code>
    </PossiblyUnusedMethod>
  </file>
  <file src="app/Providers/LogProcessingServiceProvider.php">
    <ClassMustBeFinal>
      <code><![CDATA[LogProcessingServiceProvider]]></code>
    </ClassMustBeFinal>
    <MissingClosureParamType>
      <code><![CDATA[$app]]></code>
    </MissingClosureParamType>
    <MixedArgument>
      <code><![CDATA[$app->make(ErrorStatisticsCalculator::class)]]></code>
      <code><![CDATA[$app->make(LogFileReader::class)]]></code>
      <code><![CDATA[$app->make(LogLineParser::class)]]></code>
      <code><![CDATA[$app->make(SystemHealthChecker::class)]]></code>
    </MixedArgument>
    <MixedMethodCall>
      <code><![CDATA[make]]></code>
      <code><![CDATA[make]]></code>
      <code><![CDATA[make]]></code>
      <code><![CDATA[make]]></code>
    </MixedMethodCall>
    <PossiblyUnusedMethod>
      <code><![CDATA[boot]]></code>
    </PossiblyUnusedMethod>
  </file>
  <file src="app/Providers/SecurityHeadersServiceProvider.php">
    <ClassMustBeFinal>
      <code><![CDATA[SecurityHeadersServiceProvider]]></code>
    </ClassMustBeFinal>
    <MissingClosureParamType>
      <code><![CDATA[$app]]></code>
    </MissingClosureParamType>
    <MixedArgument>
      <code><![CDATA[$app->make(SecurityHeaderConfiguration::class)]]></code>
      <code><![CDATA[$app->make(SecurityHeaderStrategyFactory::class)]]></code>
    </MixedArgument>
    <MixedMethodCall>
      <code><![CDATA[make]]></code>
      <code><![CDATA[make]]></code>
    </MixedMethodCall>
    <PossiblyUnusedMethod>
      <code><![CDATA[boot]]></code>
    </PossiblyUnusedMethod>
  </file>
  <file src="app/Providers/TelescopeServiceProvider.php">
    <ClassMustBeFinal>
      <code><![CDATA[TelescopeServiceProvider]]></code>
    </ClassMustBeFinal>
    <DocblockTypeContradiction>
      <code><![CDATA['']]></code>
    </DocblockTypeContradiction>
    <MissingClosureParamType>
      <code><![CDATA[$user]]></code>
    </MissingClosureParamType>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[is_string($user->email)]]></code>
    </RedundantConditionGivenDocblockType>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[$isLocal]]></code>
      <code><![CDATA[$this->app->environment('local')]]></code>
    </RiskyTruthyFalsyComparison>
    <UnusedClass>
      <code><![CDATA[TelescopeServiceProvider]]></code>
    </UnusedClass>
  </file>
  <file src="app/Providers/ViewServiceProvider.php">
    <ClassMustBeFinal>
      <code><![CDATA[ViewServiceProvider]]></code>
    </ClassMustBeFinal>
    <PossiblyInvalidPropertyFetch>
      <code><![CDATA[$param->name]]></code>
    </PossiblyInvalidPropertyFetch>
    <ReferenceConstraintViolation>
      <code><![CDATA[$breadcrumbs]]></code>
    </ReferenceConstraintViolation>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[$param]]></code>
    </RiskyTruthyFalsyComparison>
    <UndefinedInterfaceMethod>
      <code><![CDATA[user]]></code>
    </UndefinedInterfaceMethod>
    <UnusedClass>
      <code><![CDATA[ViewServiceProvider]]></code>
    </UnusedClass>
  </file>
  <file src="app/Repositories/ProductRepository.php">
    <ClassMustBeFinal>
      <code><![CDATA[ProductRepository]]></code>
    </ClassMustBeFinal>
    <MixedReturnTypeCoercion>
      <code><![CDATA[$this->cacheService->rememberActiveProducts($perPage, function () use ($perPage) {
            return $this->queryBuilderService->buildActiveProductsQuery()->paginate($perPage);
        })]]></code>
      <code><![CDATA[$this->cacheService->rememberSearch(
            $validated['query'],
            $validated['filters'],
            $validated['perPage'],
            $page,
            function () use ($validated) {
                return $this->queryBuilderService->buildSearchQuery(
                    $validated['query'],
                    $validated['filters']
                )->paginate($validated['perPage']);
            }
        )]]></code>
      <code><![CDATA[LengthAwarePaginator<int, Product>]]></code>
      <code><![CDATA[LengthAwarePaginator<int, Product>]]></code>
    </MixedReturnTypeCoercion>
    <PossiblyUnusedMethod>
      <code><![CDATA[__construct]]></code>
      <code><![CDATA[updatePrice]]></code>
    </PossiblyUnusedMethod>
    <TooFewArguments>
      <code><![CDATA[buildProductBySlugQuery]]></code>
      <code><![CDATA[buildProductBySlugQuery]]></code>
    </TooFewArguments>
  </file>
  <file src="app/Rules/DimensionSum.php">
    <ClassMustBeFinal>
      <code><![CDATA[DimensionSum]]></code>
    </ClassMustBeFinal>
    <DeprecatedInterface>
      <code><![CDATA[DimensionSum]]></code>
    </DeprecatedInterface>
    <DocblockTypeContradiction>
      <code><![CDATA[! is_string($attribute)]]></code>
    </DocblockTypeContradiction>
  </file>
  <file src="app/Rules/PasswordValidator.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$pattern]]></code>
    </ArgumentTypeCoercion>
    <DocblockTypeContradiction>
      <code><![CDATA[is_array($forbiddenPatterns)]]></code>
    </DocblockTypeContradiction>
    <InvalidPropertyAssignmentValue>
      <code><![CDATA[$this->loadConfig($configRepository)]]></code>
    </InvalidPropertyAssignmentValue>
    <MixedAssignment>
      <code><![CDATA[$configValue]]></code>
    </MixedAssignment>
    <RedundantCastGivenDocblockType>
      <code><![CDATA[(int) $this->config['min_length']]]></code>
    </RedundantCastGivenDocblockType>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[is_string($pattern)]]></code>
    </RedundantConditionGivenDocblockType>
    <UnusedClass>
      <code><![CDATA[PasswordValidator]]></code>
    </UnusedClass>
  </file>
  <file src="app/Rules/RuleValidationRule.php">
    <PossiblyUnusedMethod>
      <code><![CDATA[validate]]></code>
    </PossiblyUnusedMethod>
  </file>
  <file src="app/Rules/ValidOrderStatus.php">
    <UnusedClass>
      <code><![CDATA[ValidOrderStatus]]></code>
    </UnusedClass>
  </file>
  <file src="app/Rules/ValidOrderStatusTransition.php">
    <MixedAssignment>
      <code><![CDATA[$currentLabel]]></code>
      <code><![CDATA[$currentStatus]]></code>
    </MixedAssignment>
    <MixedMethodCall>
      <code><![CDATA[canTransitionTo]]></code>
      <code><![CDATA[label]]></code>
    </MixedMethodCall>
    <UndefinedMagicPropertyFetch>
      <code><![CDATA[$this->order->status_enum]]></code>
    </UndefinedMagicPropertyFetch>
    <UnusedClass>
      <code><![CDATA[ValidOrderStatusTransition]]></code>
    </UnusedClass>
  </file>
  <file src="app/Schemas/BrandSchema.php">
    <UnusedClass>
      <code><![CDATA[BrandSchema]]></code>
    </UnusedClass>
  </file>
  <file src="app/Schemas/CategorySchema.php">
    <UnusedClass>
      <code><![CDATA[CategorySchema]]></code>
    </UnusedClass>
  </file>
  <file src="app/Schemas/PaginationLinksSchema.php">
    <UnusedClass>
      <code><![CDATA[PaginationLinksSchema]]></code>
    </UnusedClass>
  </file>
  <file src="app/Schemas/PaginationMetaSchema.php">
    <UnusedClass>
      <code><![CDATA[PaginationMetaSchema]]></code>
    </UnusedClass>
  </file>
  <file src="app/Schemas/PriceOfferSchema.php">
    <UnusedClass>
      <code><![CDATA[PriceOfferSchema]]></code>
    </UnusedClass>
  </file>
  <file src="app/Schemas/ProductCreateRequestSchema.php">
    <UnusedClass>
      <code><![CDATA[ProductCreateRequestSchema]]></code>
    </UnusedClass>
  </file>
  <file src="app/Schemas/ProductDetailSchema.php">
    <UnusedClass>
      <code><![CDATA[ProductDetailSchema]]></code>
    </UnusedClass>
  </file>
  <file src="app/Schemas/ProductSchema.php">
    <UnusedClass>
      <code><![CDATA[ProductSchema]]></code>
    </UnusedClass>
  </file>
  <file src="app/Schemas/ProductUpdateRequestSchema.php">
    <UnusedClass>
      <code><![CDATA[ProductUpdateRequestSchema]]></code>
    </UnusedClass>
  </file>
  <file src="app/Schemas/ReviewSchema.php">
    <UnusedClass>
      <code><![CDATA[ReviewSchema]]></code>
    </UnusedClass>
  </file>
  <file src="app/Services/AI/ContinuousQualityMonitor.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$alert]]></code>
    </ArgumentTypeCoercion>
    <DocblockTypeContradiction>
      <code><![CDATA[(string) $ruleId]]></code>
    </DocblockTypeContradiction>
    <InvalidCast>
      <code><![CDATA[$ruleId]]></code>
    </InvalidCast>
    <LessSpecificReturnStatement>
      <code><![CDATA[$this->createErrorResult($rule, $e->getMessage())]]></code>
      <code><![CDATA[$this->createRuleResult($rule, $result, $startTime, $ruleId)]]></code>
    </LessSpecificReturnStatement>
    <MixedAssignment>
      <code><![CDATA[$detailedResults]]></code>
      <code><![CDATA[$lastCheck]]></code>
      <code><![CDATA[$score]]></code>
    </MixedAssignment>
    <MixedReturnTypeCoercion>
      <code><![CDATA[[
            'score' => $this->validateHealthScore($score),
            'last_check' => $this->validateLastCheck($lastCheck),
            'detailed_results' => $this->validateDetailedResults($detailedResults),
            'alerts' => $this->alerts,
        ]]]></code>
      <code><![CDATA[array<string, mixed>]]></code>
      <code><![CDATA[array{
     *     score: int,
     *     last_check: string|null,
     *     detailed_results: array<string, array{
     *         name: string,
     *         success: bool,
     *         health_score: int,
     *         duration: float,
     *         output: string,
     *         errors: array<int, string>,
     *         timestamp: string,
     *         critical: bool
     *     }>,
     *     alerts: list<array{
     *         type: string,
     *         rule: string,
     *         message: string,
     *         details: array<int, string>,
     *         timestamp: string
     *     }>
     * }]]></code>
      <code><![CDATA[is_array($results) ? $results : []]]></code>
    </MixedReturnTypeCoercion>
    <MoreSpecificReturnType>
      <code><![CDATA[array{
     *     name: string,
     *     success: bool,
     *     health_score: int,
     *     duration: float,
     *     output: string,
     *     errors: array<int, string>,
     *     timestamp: string,
     *     critical: bool
     * }]]></code>
    </MoreSpecificReturnType>
    <PropertyTypeCoercion>
      <code><![CDATA[$this->alerts]]></code>
      <code><![CDATA[$this->alerts]]></code>
    </PropertyTypeCoercion>
    <RedundantCast>
      <code><![CDATA[(float) ($endTime - $startTime)]]></code>
    </RedundantCast>
    <RedundantCastGivenDocblockType>
      <code><![CDATA[(bool) ($rule['critical'] ?? false)]]></code>
      <code><![CDATA[(bool) ($rule['critical'] ?? false)]]></code>
      <code><![CDATA[(int) $result['health_score']]]></code>
      <code><![CDATA[(int) $result['health_score']]]></code>
    </RedundantCastGivenDocblockType>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[is_string($ruleId)]]></code>
    </RedundantConditionGivenDocblockType>
    <UnusedClass>
      <code><![CDATA[ContinuousQualityMonitor]]></code>
    </UnusedClass>
  </file>
  <file src="app/Services/AI/HealthScoreCalculator.php">
    <DocblockTypeContradiction>
      <code><![CDATA['']]></code>
    </DocblockTypeContradiction>
    <InvalidOperand>
      <code><![CDATA[$memoryUsage / $maxMemory * 100]]></code>
      <code><![CDATA[100 - ($memoryUsage / $maxMemory * 100)]]></code>
    </InvalidOperand>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[is_string($output)]]></code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="app/Services/AI/Services/AIImageAnalysisService.php">
    <ClassMustBeFinal>
      <code><![CDATA[AIImageAnalysisService]]></code>
    </ClassMustBeFinal>
    <MixedArgument>
      <code><![CDATA[$content]]></code>
    </MixedArgument>
    <MixedArrayAccess>
      <code><![CDATA[$response['choices'][0]['message']['content']]]></code>
    </MixedArrayAccess>
    <MixedAssignment>
      <code><![CDATA[$content]]></code>
    </MixedAssignment>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[preg_match_all('/recommendation[\s:]+(.+?)(?:\n|$)/i', $content, $matches)]]></code>
    </RiskyTruthyFalsyComparison>
  </file>
  <file src="app/Services/AI/Services/AIRequestService.php">
    <ClassMustBeFinal>
      <code><![CDATA[AIRequestService]]></code>
    </ClassMustBeFinal>
    <MixedArrayAccess>
      <code><![CDATA[$data['messages'][0]]]></code>
      <code><![CDATA[$data['messages'][0]['content']]]></code>
    </MixedArrayAccess>
    <MixedAssignment>
      <code><![CDATA[$result]]></code>
      <code><![CDATA[$seg]]></code>
      <code><![CDATA[$userContent]]></code>
      <code><![CDATA[$word]]></code>
    </MixedAssignment>
    <MixedReturnStatement>
      <code><![CDATA[$result]]></code>
    </MixedReturnStatement>
    <PossiblyFalseIterator>
      <code><![CDATA[$words]]></code>
    </PossiblyFalseIterator>
    <TypeDoesNotContainType>
      <code><![CDATA[$recommendationLines === []]]></code>
      <code><![CDATA[$recommendationLines === []]]></code>
    </TypeDoesNotContainType>
  </file>
  <file src="app/Services/AI/Services/AITextAnalysisService.php">
    <ClassMustBeFinal>
      <code><![CDATA[AITextAnalysisService]]></code>
    </ClassMustBeFinal>
    <InvalidReturnStatement>
      <code><![CDATA[[
            'result' => $content,
            'sentiment' => $this->extractSentiment($content),
            'confidence' => $this->extractConfidence($content),
            'categories' => $this->extractCategories($content),
            'keywords' => $this->extractKeywords($content),
        ]]]></code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code><![CDATA[array{
     *     sentiment: string,
     *     confidence: float,
     *     categories: list<string>,
     *     keywords: list<string>
     * }]]></code>
    </InvalidReturnType>
    <MixedArgument>
      <code><![CDATA[$content]]></code>
      <code><![CDATA[$content]]></code>
    </MixedArgument>
    <MixedArrayAccess>
      <code><![CDATA[$response['choices'][0]['message']['content']]]></code>
      <code><![CDATA[$response['choices'][0]['message']['content']]]></code>
      <code><![CDATA[$response['choices'][0]['message']['content']]]></code>
    </MixedArrayAccess>
    <MixedAssignment>
      <code><![CDATA[$content]]></code>
      <code><![CDATA[$content]]></code>
      <code><![CDATA[$content]]></code>
    </MixedAssignment>
    <MixedReturnTypeCoercion>
      <code><![CDATA[[
            [
                'product_id' => '1',
                'score' => 0.9,
                'reason' => $content,
            ],
        ]]]></code>
      <code><![CDATA[list<array{
     *     product_id: string,
     *     score: float,
     *     reason: string
     * }>]]></code>
    </MixedReturnTypeCoercion>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[preg_match_all('/category[\s:]+(.+?)(?:\n|$)/i', $content, $matches)]]></code>
      <code><![CDATA[preg_match_all('/keyword[\s:]+(.+?)(?:\n|$)/i', $content, $matches)]]></code>
      <code><![CDATA[preg_match_all('/tag[\s:]+(.+?)(?:\n|$)/i', $content, $matches)]]></code>
    </RiskyTruthyFalsyComparison>
  </file>
  <file src="app/Services/AI/Services/AlertManagerService.php">
    <UnusedClass>
      <code><![CDATA[AlertManagerService]]></code>
    </UnusedClass>
  </file>
  <file src="app/Services/AI/Services/HealthScoreService.php">
    <UnusedClass>
      <code><![CDATA[HealthScoreService]]></code>
    </UnusedClass>
  </file>
  <file src="app/Services/AI/Services/RuleExecutorService.php">
    <UnusedClass>
      <code><![CDATA[RuleExecutorService]]></code>
    </UnusedClass>
    <UnusedParam>
      <code><![CDATA[$context]]></code>
      <code><![CDATA[$ruleId]]></code>
    </UnusedParam>
  </file>
  <file src="app/Services/AI/Services/RuleValidatorService.php">
    <ClassMustBeFinal>
      <code><![CDATA[RuleValidatorService]]></code>
    </ClassMustBeFinal>
    <MixedReturnTypeCoercion>
      <code><![CDATA[array<string, mixed>]]></code>
      <code><![CDATA[is_array($results) ? $results : []]]></code>
    </MixedReturnTypeCoercion>
    <UnusedClass>
      <code><![CDATA[RuleValidatorService]]></code>
    </UnusedClass>
  </file>
  <file src="app/Services/AI/StrictQualityAgent.php">
    <LessSpecificReturnStatement>
      <code><![CDATA[[
            'total_errors' => count($this->errors),
            'errors_by_stage' => $this->errors,
            'critical_errors' => array_filter(
                $this->errors,
                static fn (string $error): bool => str_contains($error, 'Fatal')
            ),
        ]]]></code>
    </LessSpecificReturnStatement>
    <MixedArgument>
      <code><![CDATA[$file]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code><![CDATA[$file]]></code>
    </MixedAssignment>
    <MoreSpecificReturnType>
      <code><![CDATA[array{
     *     total_errors: int,
     *     errors_by_stage: array<string, string>,
     *     critical_errors: list<string>
     * }]]></code>
    </MoreSpecificReturnType>
    <PossiblyNullArgument>
      <code><![CDATA[now()->toISOString()]]></code>
      <code><![CDATA[now()->toISOString()]]></code>
    </PossiblyNullArgument>
    <UnusedClass>
      <code><![CDATA[StrictQualityAgent]]></code>
    </UnusedClass>
  </file>
  <file src="app/Services/AIService.php">
    <ClassMustBeFinal>
      <code><![CDATA[AIService]]></code>
    </ClassMustBeFinal>
    <LessSpecificReturnStatement>
      <code><![CDATA[[
            'recommendations' => $recommendations,
            'confidence' => $confidence,
        ]]]></code>
    </LessSpecificReturnStatement>
    <MixedArgument>
      <code><![CDATA[$apiKey]]></code>
      <code><![CDATA[$baseUrl]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code><![CDATA[$apiKey]]></code>
      <code><![CDATA[$baseUrl]]></code>
    </MixedAssignment>
    <MoreSpecificReturnType>
      <code><![CDATA[list<array{
     *     product_id: string,
     *     score: float,
     *     reason: string
     * }>]]></code>
    </MoreSpecificReturnType>
    <PossiblyUnusedMethod>
      <code><![CDATA[__construct]]></code>
    </PossiblyUnusedMethod>
    <RedundantCastGivenDocblockType>
      <code><![CDATA[(string) ($rec['product_id'] ?? '1')]]></code>
      <code><![CDATA[(string) ($rec['reason'] ?? 'recommended')]]></code>
    </RedundantCastGivenDocblockType>
    <RedundantCondition>
      <code><![CDATA[$recommendations === [] && is_array($raw)]]></code>
      <code><![CDATA[is_array($raw)]]></code>
    </RedundantCondition>
    <UnusedProperty>
      <code><![CDATA[$requestService]]></code>
    </UnusedProperty>
  </file>
  <file src="app/Services/Activity/Services/ActivityThresholdService.php">
    <ClassMustBeFinal>
      <code><![CDATA[ActivityThresholdService]]></code>
    </ClassMustBeFinal>
    <MixedAssignment>
      <code><![CDATA[$cacheStore]]></code>
      <code><![CDATA[$count]]></code>
    </MixedAssignment>
    <MixedMethodCall>
      <code><![CDATA[forget]]></code>
      <code><![CDATA[get]]></code>
      <code><![CDATA[increment]]></code>
      <code><![CDATA[put]]></code>
    </MixedMethodCall>
    <MixedReturnStatement>
      <code><![CDATA[$count]]></code>
    </MixedReturnStatement>
    <PossiblyUnusedParam>
      <code><![CDATA[$cache]]></code>
    </PossiblyUnusedParam>
    <UndefinedClass>
      <code><![CDATA[$this->cache]]></code>
      <code><![CDATA[$this->cache]]></code>
      <code><![CDATA[$this->cache]]></code>
      <code><![CDATA[CacheManager]]></code>
      <code><![CDATA[CacheManager]]></code>
    </UndefinedClass>
    <UnusedClass>
      <code><![CDATA[ActivityThresholdService]]></code>
    </UnusedClass>
  </file>
  <file src="app/Services/Activity/Services/ActivityValidationService.php">
    <ClassMustBeFinal>
      <code><![CDATA[ActivityValidationService]]></code>
    </ClassMustBeFinal>
    <MixedAssignment>
      <code><![CDATA[$value]]></code>
      <code><![CDATA[$value]]></code>
    </MixedAssignment>
    <MixedReturnTypeCoercion>
      <code><![CDATA[$data['location']]]></code>
      <code><![CDATA[array<string, float>]]></code>
    </MixedReturnTypeCoercion>
    <UnusedClass>
      <code><![CDATA[ActivityValidationService]]></code>
    </UnusedClass>
  </file>
  <file src="app/Services/Activity/Services/LocationCheckService.php">
    <ClassMustBeFinal>
      <code><![CDATA[LocationCheckService]]></code>
    </ClassMustBeFinal>
    <NoValue>
      <code><![CDATA[$previousLocations]]></code>
    </NoValue>
    <PossiblyUnusedParam>
      <code><![CDATA[$ipAddress]]></code>
      <code><![CDATA[$userId]]></code>
    </PossiblyUnusedParam>
    <RedundantCondition>
      <code><![CDATA[$previousLocations === []]]></code>
    </RedundantCondition>
    <UndefinedMethod>
      <code><![CDATA[isWithinProximity]]></code>
    </UndefinedMethod>
    <UnusedClass>
      <code><![CDATA[LocationCheckService]]></code>
    </UnusedClass>
  </file>
  <file src="app/Services/ActivityChecker.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$rule]]></code>
      <code><![CDATA[$rule]]></code>
      <code><![CDATA[$rule]]></code>
      <code><![CDATA[$rule]]></code>
      <code><![CDATA[$rule]]></code>
    </ArgumentTypeCoercion>
    <DocblockTypeContradiction>
      <code><![CDATA['']]></code>
      <code><![CDATA['']]></code>
    </DocblockTypeContradiction>
    <InvalidArgument>
      <code><![CDATA[$rule]]></code>
    </InvalidArgument>
    <InvalidArrayAccess>
      <code><![CDATA[$data['data_type']]]></code>
      <code><![CDATA[$data['ip_address']]]></code>
      <code><![CDATA[$data['user_id']]]></code>
    </InvalidArrayAccess>
    <InvalidPropertyAssignmentValue>
      <code><![CDATA[$configurationService->getSuspiciousActivityConfig()]]></code>
    </InvalidPropertyAssignmentValue>
    <MixedArgumentTypeCoercion>
      <code><![CDATA[$activityData]]></code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment>
      <code><![CDATA[$cacheStore]]></code>
      <code><![CDATA[$count]]></code>
    </MixedAssignment>
    <MixedMethodCall>
      <code><![CDATA[increment]]></code>
      <code><![CDATA[put]]></code>
    </MixedMethodCall>
    <MixedReturnStatement>
      <code><![CDATA[$count]]></code>
    </MixedReturnStatement>
    <NoValue>
      <code><![CDATA[$previousLocations]]></code>
    </NoValue>
    <PossiblyNullArgument>
      <code><![CDATA[$location]]></code>
    </PossiblyNullArgument>
    <PossiblyUndefinedArrayOffset>
      <code><![CDATA[$data['location']]]></code>
    </PossiblyUndefinedArrayOffset>
    <PossiblyUnusedMethod>
      <code><![CDATA[__construct]]></code>
      <code><![CDATA[handleAdminAction]]></code>
      <code><![CDATA[handleApiRequest]]></code>
      <code><![CDATA[handleDataAccess]]></code>
    </PossiblyUnusedMethod>
    <RedundantCastGivenDocblockType>
      <code><![CDATA[(int) ($rule['time_window'] ?? 60)]]></code>
      <code><![CDATA[(string) ($data['ip_address'] ?? '')]]></code>
    </RedundantCastGivenDocblockType>
    <RedundantCondition>
      <code><![CDATA[$previousLocations === []]]></code>
    </RedundantCondition>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[is_string($data['ip_address'])]]></code>
      <code><![CDATA[is_string($data['ip_address'])]]></code>
      <code><![CDATA[isset($data['ip_address']) && is_string($data['ip_address'])]]></code>
      <code><![CDATA[isset($data['ip_address']) && is_string($data['ip_address'])]]></code>
    </RedundantConditionGivenDocblockType>
    <RiskyCast>
      <code><![CDATA[$data['user_id']]]></code>
      <code><![CDATA[$data['user_id']]]></code>
    </RiskyCast>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[! ($rule['enabled'] ?? false)]]></code>
      <code><![CDATA[! ($rule['enabled'] ?? false)]]></code>
      <code><![CDATA[! ($rule['enabled'] ?? false)]]></code>
      <code><![CDATA[! ($rule['enabled'] ?? false)]]></code>
      <code><![CDATA[! ($rule['enabled'] ?? false)]]></code>
    </RiskyTruthyFalsyComparison>
    <UndefinedClass>
      <code><![CDATA[$this->cache]]></code>
      <code><![CDATA[CacheManager]]></code>
      <code><![CDATA[CacheManager]]></code>
    </UndefinedClass>
    <UndefinedDocblockClass>
      <code><![CDATA[array{login_failed: \Closure(array):list<App\Services\SuspiciousActivity>, login_success: \Closure(array):list<App\Services\SuspiciousActivity>, api_request: \Closure(array):list<App\Services\SuspiciousActivity>, data_access: \Closure(array):list<App\Services\SuspiciousActivity>, admin_action: \Closure(array):list<App\Services\SuspiciousActivity>}]]></code>
      <code><![CDATA[list<App\Services\SuspiciousActivity>]]></code>
    </UndefinedDocblockClass>
    <UndefinedMethod>
      <code><![CDATA[isWithinProximity]]></code>
    </UndefinedMethod>
    <UnusedMethod>
      <code><![CDATA[getActivityCheckers]]></code>
      <code><![CDATA[handleLoginFailed]]></code>
      <code><![CDATA[handleLoginSuccess]]></code>
      <code><![CDATA[isValidInput]]></code>
    </UnusedMethod>
    <UnusedParam>
      <code><![CDATA[$activityFactory]]></code>
      <code><![CDATA[$cache]]></code>
      <code><![CDATA[$configurationService]]></code>
      <code><![CDATA[$data]]></code>
      <code><![CDATA[$event]]></code>
      <code><![CDATA[$geolocationService]]></code>
    </UnusedParam>
  </file>
  <file src="app/Services/ActivityFactory.php">
    <LessSpecificReturnStatement>
      <code><![CDATA[$activity]]></code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType>
      <code><![CDATA[array{type: string, severity: string, user_id: int, details: array<string, int|string|array<string, string|int|float|bool|array|null>>, timestamp: string, ip_address?: string}]]></code>
    </MoreSpecificReturnType>
  </file>
  <file src="app/Services/ActivityProcessor.php">
    <PossiblyUnusedMethod>
      <code><![CDATA[__construct]]></code>
    </PossiblyUnusedMethod>
  </file>
  <file src="app/Services/AgentFixer/GitWorkflowService.php">
    <PossiblyUnusedReturnValue>
      <code><![CDATA[bool]]></code>
    </PossiblyUnusedReturnValue>
    <UndefinedMethod>
      <code><![CDATA[warn]]></code>
    </UndefinedMethod>
  </file>
  <file src="app/Services/AgentFixer/PullRequestService.php">
    <UndefinedMethod>
      <code><![CDATA[warn]]></code>
      <code><![CDATA[warn]]></code>
    </UndefinedMethod>
  </file>
  <file src="app/Services/AgentFixer/StyleFixer.php">
    <UndefinedMethod>
      <code><![CDATA[warn]]></code>
    </UndefinedMethod>
  </file>
  <file src="app/Services/Amazon/AmazonClient.php">
    <ClassMustBeFinal>
      <code><![CDATA[AmazonClient]]></code>
    </ClassMustBeFinal>
    <MixedReturnStatement>
      <code><![CDATA[Cache::remember($cacheKey, now()->addMinutes(15), function () use ($query, $limit) {
            try {
                $response = Http::retry(3, 500)->timeout(10)->get('https://api.example.com/amazon/search', [
                    'q' => $query,
                    'limit' => $limit,
                    'tag' => $this->associateTag,
                ]);
                if ($response->ok()) {
                    return $response->json('items', []);
                }
            } catch (\Throwable $e) {
                Log::warning('Amazon search failed: '.$e->getMessage());
            }

            return [];
        })]]></code>
    </MixedReturnStatement>
    <UnusedClass>
      <code><![CDATA[AmazonClient]]></code>
    </UnusedClass>
  </file>
  <file src="app/Services/AnalyticsService.php">
    <InvalidArgument>
      <code><![CDATA[[
                'query' => $query,
                'filters' => $filters,
            ]]]></code>
    </InvalidArgument>
    <MissingClosureParamType>
      <code><![CDATA[$row]]></code>
      <code><![CDATA[$row]]></code>
    </MissingClosureParamType>
    <MixedArgumentTypeCoercion>
      <code><![CDATA[$metadata]]></code>
      <code><![CDATA[$metadata]]></code>
      <code><![CDATA[$metadata]]></code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment>
      <code><![CDATA[$count]]></code>
      <code><![CDATA[$event]]></code>
      <code><![CDATA[$events]]></code>
      <code><![CDATA[$meta]]></code>
      <code><![CDATA[$query]]></code>
      <code><![CDATA[$totalEvents]]></code>
    </MixedAssignment>
    <MixedMethodCall>
      <code><![CDATA[count]]></code>
      <code><![CDATA[count]]></code>
      <code><![CDATA[count]]></code>
      <code><![CDATA[count]]></code>
      <code><![CDATA[count]]></code>
      <code><![CDATA[count]]></code>
      <code><![CDATA[delete]]></code>
      <code><![CDATA[distinct]]></code>
      <code><![CDATA[distinct]]></code>
      <code><![CDATA[distinct]]></code>
      <code><![CDATA[distinct]]></code>
      <code><![CDATA[get]]></code>
      <code><![CDATA[get]]></code>
      <code><![CDATA[get]]></code>
      <code><![CDATA[get]]></code>
      <code><![CDATA[groupBy]]></code>
      <code><![CDATA[groupBy]]></code>
      <code><![CDATA[groupBy]]></code>
      <code><![CDATA[limit]]></code>
      <code><![CDATA[limit]]></code>
      <code><![CDATA[map]]></code>
      <code><![CDATA[map]]></code>
      <code><![CDATA[ofType]]></code>
      <code><![CDATA[ofType]]></code>
      <code><![CDATA[ofType]]></code>
      <code><![CDATA[ofType]]></code>
      <code><![CDATA[orderBy]]></code>
      <code><![CDATA[orderByDesc]]></code>
      <code><![CDATA[orderByDesc]]></code>
      <code><![CDATA[pluck]]></code>
      <code><![CDATA[select]]></code>
      <code><![CDATA[select]]></code>
      <code><![CDATA[select]]></code>
      <code><![CDATA[toArray]]></code>
      <code><![CDATA[toArray]]></code>
      <code><![CDATA[toArray]]></code>
      <code><![CDATA[where]]></code>
      <code><![CDATA[whereNotNull]]></code>
      <code><![CDATA[whereNotNull]]></code>
      <code><![CDATA[whereNotNull]]></code>
      <code><![CDATA[whereNotNull]]></code>
    </MixedMethodCall>
    <MixedPropertyFetch>
      <code><![CDATA[$event->metadata]]></code>
      <code><![CDATA[$row->click_count]]></code>
      <code><![CDATA[$row->product_id]]></code>
      <code><![CDATA[$row->store_id]]></code>
      <code><![CDATA[$row->views]]></code>
    </MixedPropertyFetch>
    <MixedReturnStatement>
      <code><![CDATA[AnalyticsEvent::create([
                'event_type' => $eventType,
                'event_name' => $eventName,
                'user_id' => $userId,
                'product_id' => $productId,
                'category_id' => $categoryId,
                'store_id' => $storeId,
                'metadata' => $metadata,
            ])]]></code>
      <code><![CDATA[AnalyticsEvent::ofType($eventType)
            ->where('created_at', '>=', $startDate)
            ->select(DB::raw('DATE(created_at) as date'), DB::raw('COUNT(*) as count'))
            ->groupBy('date')
            ->orderBy('date')
            ->get()
            ->pluck('count', 'date')
            ->toArray()]]></code>
      <code><![CDATA[AnalyticsEvent::recent($days)
            ->ofType(AnalyticsEvent::TYPE_PRODUCT_VIEW)
            ->select('product_id', DB::raw('COUNT(*) as views'))
            ->whereNotNull('product_id')
            ->groupBy('product_id')
            ->orderByDesc('views')
            ->limit($limit)
            ->get()
            ->map(fn ($row): array => ['product_id' => $row->product_id, 'view_count' => (int) $row->views])
            ->toArray()]]></code>
      <code><![CDATA[AnalyticsEvent::recent($days)
            ->ofType(AnalyticsEvent::TYPE_STORE_CLICK)
            ->select('store_id', DB::raw('COUNT(*) as click_count'))
            ->whereNotNull('store_id')
            ->groupBy('store_id')
            ->orderByDesc('click_count')
            ->limit($limit)
            ->get()
            ->map(fn ($row): array => ['store_id' => $row->store_id, 'click_count' => (int) $row->click_count])
            ->toArray()]]></code>
    </MixedReturnStatement>
    <PossiblyUnusedMethod>
      <code><![CDATA[getDailyEventCounts]]></code>
      <code><![CDATA[getDashboardData]]></code>
      <code><![CDATA[trackProductView]]></code>
      <code><![CDATA[trackSearch]]></code>
      <code><![CDATA[trackStoreClick]]></code>
    </PossiblyUnusedMethod>
    <PossiblyUnusedReturnValue>
      <code><![CDATA[?AnalyticsEvent]]></code>
    </PossiblyUnusedReturnValue>
    <UndefinedMagicMethod>
      <code><![CDATA[AnalyticsEvent::create([
                'event_type' => $eventType,
                'event_name' => $eventName,
                'user_id' => $userId,
                'product_id' => $productId,
                'category_id' => $categoryId,
                'store_id' => $storeId,
                'metadata' => $metadata,
            ])]]></code>
      <code><![CDATA[AnalyticsEvent::ofType($eventType)]]></code>
      <code><![CDATA[AnalyticsEvent::recent($days)]]></code>
      <code><![CDATA[AnalyticsEvent::recent($days)]]></code>
      <code><![CDATA[AnalyticsEvent::recent($days)]]></code>
      <code><![CDATA[AnalyticsEvent::recent($days)]]></code>
      <code><![CDATA[AnalyticsEvent::recent($days)]]></code>
      <code><![CDATA[AnalyticsEvent::recent($days)]]></code>
      <code><![CDATA[AnalyticsEvent::recent($days)]]></code>
      <code><![CDATA[AnalyticsEvent::where('created_at', '<', $cutoffDate)]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Services/Api/ApiInfoService.php">
    <ClassMustBeFinal>
      <code><![CDATA[ApiInfoService]]></code>
    </ClassMustBeFinal>
  </file>
  <file src="app/Services/Api/PaginationService.php">
    <ClassMustBeFinal>
      <code><![CDATA[PaginationService]]></code>
    </ClassMustBeFinal>
    <LessSpecificReturnStatement>
      <code><![CDATA[$result]]></code>
    </LessSpecificReturnStatement>
    <MixedReturnStatement>
      <code><![CDATA[is_object($object) && method_exists($object, $method) ? $object->$method() : $default]]></code>
      <code><![CDATA[is_object($object) && method_exists($object, $method) ? $object->$method() : $default]]></code>
    </MixedReturnStatement>
    <MoreSpecificReturnType>
      <code><![CDATA[array{current_page: bool|int|string|null, per_page: bool|int|string|null, total: bool|int|string|null, last_page: bool|int|string|null, from: bool|int|string|null, to: bool|int|string|null, has_more_pages: bool|int|string|null, links: array<string, string|null>}]]></code>
    </MoreSpecificReturnType>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[$lastPage]]></code>
    </RiskyTruthyFalsyComparison>
  </file>
  <file src="app/Services/Api/RequestParameterService.php">
    <ClassMustBeFinal>
      <code><![CDATA[RequestParameterService]]></code>
    </ClassMustBeFinal>
    <MixedAssignment>
      <code><![CDATA[$fields]]></code>
      <code><![CDATA[$filters['date_from']]]></code>
      <code><![CDATA[$filters['date_to']]]></code>
      <code><![CDATA[$include]]></code>
      <code><![CDATA[$search]]></code>
      <code><![CDATA[$searchFields]]></code>
      <code><![CDATA[$searchMode]]></code>
      <code><![CDATA[$sortBy]]></code>
      <code><![CDATA[$sortMode]]></code>
      <code><![CDATA[$sortOrder]]></code>
    </MixedAssignment>
    <MixedReturnTypeCoercion>
      <code><![CDATA[$filters]]></code>
      <code><![CDATA[[
            'search' => $search,
            'search_fields' => $searchFields,
            'search_mode' => $searchMode,
        ]]]></code>
      <code><![CDATA[[
            'sort_by' => $sortBy,
            'sort_order' => $sortOrder,
            'sort_mode' => $sortMode,
        ]]]></code>
      <code><![CDATA[array<string, string>]]></code>
      <code><![CDATA[array<string, string>]]></code>
      <code><![CDATA[array<string, string|array>]]></code>
    </MixedReturnTypeCoercion>
  </file>
  <file src="app/Services/Api/ResponseBuilderService.php">
    <ClassMustBeFinal>
      <code><![CDATA[ResponseBuilderService]]></code>
    </ClassMustBeFinal>
    <MixedArgumentTypeCoercion>
      <code><![CDATA[$data]]></code>
    </MixedArgumentTypeCoercion>
    <UndefinedDocblockClass>
      <code><![CDATA[$data->items()]]></code>
    </UndefinedDocblockClass>
  </file>
  <file src="app/Services/AuditService.php">
    <ClassMustBeFinal>
      <code><![CDATA[AuditService]]></code>
    </ClassMustBeFinal>
    <MixedArgumentTypeCoercion>
      <code><![CDATA[$metadata]]></code>
      <code><![CDATA[$model->getAttributes()]]></code>
      <code><![CDATA[$model->getAttributes()]]></code>
      <code><![CDATA[$model->getChanges()]]></code>
    </MixedArgumentTypeCoercion>
    <MixedMethodCall>
      <code><![CDATA[get]]></code>
      <code><![CDATA[get]]></code>
      <code><![CDATA[get]]></code>
      <code><![CDATA[orderByDesc]]></code>
      <code><![CDATA[orderByDesc]]></code>
      <code><![CDATA[orderByDesc]]></code>
      <code><![CDATA[where]]></code>
    </MixedMethodCall>
    <MixedReturnStatement>
      <code><![CDATA[AuditLog::query()
            ->event($event)
            ->orderByDesc('created_at')
            ->get()]]></code>
      <code><![CDATA[AuditLog::query()
            ->forModel($model::class)
            ->where('auditable_id', $model->getKey())
            ->orderByDesc('created_at')
            ->get()]]></code>
      <code><![CDATA[AuditLog::query()
            ->forUser($userId)
            ->orderByDesc('created_at')
            ->get()]]></code>
    </MixedReturnStatement>
    <NoInterfaceProperties>
      <code><![CDATA[$user?->id]]></code>
    </NoInterfaceProperties>
    <PossiblyUnusedMethod>
      <code><![CDATA[cleanOldLogs]]></code>
      <code><![CDATA[getEventLogs]]></code>
      <code><![CDATA[getModelLogs]]></code>
      <code><![CDATA[getUserLogs]]></code>
      <code><![CDATA[logApiAccess]]></code>
      <code><![CDATA[logAuthEvent]]></code>
      <code><![CDATA[logViewed]]></code>
    </PossiblyUnusedMethod>
    <UndefinedMagicMethod>
      <code><![CDATA[AuditLog::create([
            'event' => $event,
            'auditable_type' => $model::class,
            'auditable_id' => $model->getKey(),
            'user_id' => $user?->id,
            'ip_address' => $request->ip(),
            'user_agent' => $request->userAgent(),
            'old_values' => $oldValues,
            'new_values' => $newValues,
            'metadata' => $metadata,
            'url' => $request->fullUrl(),
            'method' => $request->method(),
        ])]]></code>
      <code><![CDATA[event]]></code>
      <code><![CDATA[forModel]]></code>
      <code><![CDATA[forUser]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Services/Backup/BackupFileService.php">
    <ClassMustBeFinal>
      <code><![CDATA[BackupFileService]]></code>
    </ClassMustBeFinal>
    <MixedAssignment>
      <code><![CDATA[$file]]></code>
    </MixedAssignment>
    <MixedOperand>
      <code><![CDATA[$file]]></code>
    </MixedOperand>
    <PossiblyFalseArgument>
      <code><![CDATA[scandir($dir)]]></code>
    </PossiblyFalseArgument>
    <PossiblyUnusedMethod>
      <code><![CDATA[removeDirectory]]></code>
    </PossiblyUnusedMethod>
  </file>
  <file src="app/Services/Backup/BackupListService.php">
    <ClassMustBeFinal>
      <code><![CDATA[BackupListService]]></code>
    </ClassMustBeFinal>
    <InvalidOperand>
      <code><![CDATA[$bytes /= 1024 ** $pow]]></code>
      <code><![CDATA[($bytes ? log($bytes) : 0) / log(1024)]]></code>
      <code><![CDATA[1024 ** $pow]]></code>
      <code><![CDATA[round($bytes, 2)]]></code>
    </InvalidOperand>
    <PossiblyFalseOperand>
      <code><![CDATA[filesize($filePath)]]></code>
      <code><![CDATA[strtotime((string) $a['created_at'])]]></code>
      <code><![CDATA[strtotime((string) $b['created_at'])]]></code>
    </PossiblyFalseOperand>
    <PossiblyInvalidArrayOffset>
      <code><![CDATA[$units[$pow]]]></code>
    </PossiblyInvalidArrayOffset>
  </file>
  <file src="app/Services/Backup/BackupManagerService.php">
    <MixedArgument>
      <code><![CDATA[$component]]></code>
      <code><![CDATA[$manifest['components']]]></code>
      <code><![CDATA[$manifest['components'][$component]]]></code>
    </MixedArgument>
    <MixedArrayOffset>
      <code><![CDATA[$manifest['components'][$component]]]></code>
    </MixedArrayOffset>
    <MixedAssignment>
      <code><![CDATA[$component]]></code>
      <code><![CDATA[$file]]></code>
      <code><![CDATA[$manifest]]></code>
    </MixedAssignment>
    <MixedReturnStatement>
      <code><![CDATA[$manifest]]></code>
    </MixedReturnStatement>
    <PossiblyFalseArgument>
      <code><![CDATA[json_encode($manifest, JSON_PRETTY_PRINT)]]></code>
    </PossiblyFalseArgument>
    <PossiblyUnusedMethod>
      <code><![CDATA[__construct]]></code>
    </PossiblyUnusedMethod>
  </file>
  <file src="app/Services/Backup/BackupService.php">
    <ClassMustBeFinal>
      <code><![CDATA[BackupService]]></code>
    </ClassMustBeFinal>
    <InvalidOperand>
      <code><![CDATA[$bytes /= 1024 ** $pow]]></code>
      <code><![CDATA[($bytes ? log($bytes) : 0) / log(1024)]]></code>
      <code><![CDATA[1024 ** $pow]]></code>
      <code><![CDATA[round($bytes, 2)]]></code>
    </InvalidOperand>
    <InvalidReturnStatement>
      <code><![CDATA[$this->finalizeBackup($backupConfig)]]></code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code><![CDATA[array<string, int|string>]]></code>
    </InvalidReturnType>
    <MixedAssignment>
      <code><![CDATA[$dir]]></code>
      <code><![CDATA[$file]]></code>
    </MixedAssignment>
    <PossiblyInvalidArrayOffset>
      <code><![CDATA[$units[$pow]]]></code>
    </PossiblyInvalidArrayOffset>
    <RedundantCondition>
      <code><![CDATA[is_string($name)]]></code>
    </RedundantCondition>
    <TypeDoesNotContainType>
      <code><![CDATA['backup']]></code>
    </TypeDoesNotContainType>
  </file>
  <file src="app/Services/Backup/BackupValidator.php">
    <ClassMustBeFinal>
      <code><![CDATA[BackupValidator]]></code>
    </ClassMustBeFinal>
    <MixedReturnTypeCoercion>
      <code><![CDATA[[
            'type' => $validated['type'],
            'name' => $validated['name'] ?? 'backup_'.now()->format('Y-m-d_H-i-s'),
            'description' => $validated['description'] ?? '',
        ]]]></code>
      <code><![CDATA[array<string, string>]]></code>
    </MixedReturnTypeCoercion>
    <PossiblyUnusedMethod>
      <code><![CDATA[validateBackupDescription]]></code>
      <code><![CDATA[validateBackupName]]></code>
      <code><![CDATA[validateBackupType]]></code>
    </PossiblyUnusedMethod>
  </file>
  <file src="app/Services/Backup/RestoreService.php">
    <ClassMustBeFinal>
      <code><![CDATA[RestoreService]]></code>
    </ClassMustBeFinal>
    <InvalidArgument>
      <code><![CDATA[$files]]></code>
    </InvalidArgument>
    <MixedAssignment>
      <code><![CDATA[$file]]></code>
      <code><![CDATA[$file]]></code>
    </MixedAssignment>
    <MixedOperand>
      <code><![CDATA[$file]]></code>
    </MixedOperand>
    <PossiblyFalseArgument>
      <code><![CDATA[scandir($dir)]]></code>
    </PossiblyFalseArgument>
    <PossiblyNullArgument>
      <code><![CDATA[$preparation['zip']]]></code>
    </PossiblyNullArgument>
    <PossiblyUndefinedArrayOffset>
      <code><![CDATA[$preparation['zip']]]></code>
    </PossiblyUndefinedArrayOffset>
  </file>
  <file src="app/Services/Backup/Services/BackupCompressionService.php">
    <MixedAssignment>
      <code><![CDATA[$file]]></code>
    </MixedAssignment>
  </file>
  <file src="app/Services/Backup/Services/BackupConfigurationService.php">
    <LessSpecificReturnStatement>
      <code><![CDATA[[
            'files' => $backedUpFiles,
            'size' => $this->getDirectorySize($configDir),
            'status' => 'completed',
        ]]]></code>
      <code><![CDATA[[
            'files' => $restoredFiles,
            'status' => 'completed',
        ]]]></code>
    </LessSpecificReturnStatement>
    <MixedAssignment>
      <code><![CDATA[$file]]></code>
    </MixedAssignment>
    <MoreSpecificReturnType>
      <code><![CDATA[array{
     *     files: list<string>,
     *     size: int,
     *     status: string
     * }]]></code>
      <code><![CDATA[array{files: list<string>, status: string}]]></code>
    </MoreSpecificReturnType>
    <RedundantCondition>
      <code><![CDATA[is_string($file)]]></code>
    </RedundantCondition>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[is_array($files)]]></code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="app/Services/Backup/Services/BackupDatabaseService.php">
    <DocblockTypeContradiction>
      <code><![CDATA['database.sql']]></code>
    </DocblockTypeContradiction>
    <LessSpecificReturnStatement>
      <code><![CDATA[[
            'filename' => $filename,
            'size' => filesize($filepath),
            'status' => 'completed',
        ]]]></code>
    </LessSpecificReturnStatement>
    <MixedAssignment>
      <code><![CDATA[$dbConfig]]></code>
    </MixedAssignment>
    <MixedReturnTypeCoercion>
      <code><![CDATA[[
            'host' => is_string($dbConfigArray['host'] ?? null) ? $dbConfigArray['host'] : 'localhost',
            'port' => is_string($dbConfigArray['port'] ?? null) ? $dbConfigArray['port'] : '3306',
            'username' => is_string($dbConfigArray['username'] ?? null) ? $dbConfigArray['username'] : 'root',
            'password' => is_string($dbConfigArray['password'] ?? null) ? $dbConfigArray['password'] : '',
            'database' => is_string($dbConfigArray['database'] ?? null) ? $dbConfigArray['database'] : 'database',
        ]]]></code>
      <code><![CDATA[array{host: string, port: string, username: string, password: string, database: string}]]></code>
    </MixedReturnTypeCoercion>
    <MoreSpecificReturnType>
      <code><![CDATA[array{
     *     filename: string,
     *     size: int,
     *     status: string
     * }]]></code>
    </MoreSpecificReturnType>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[is_string($filename)]]></code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="app/Services/Backup/Services/BackupFileSystemService.php">
    <InvalidArgument>
      <code><![CDATA[$iterator]]></code>
    </InvalidArgument>
    <LessSpecificReturnStatement>
      <code><![CDATA[[
            'directories' => $backedUpDirs,
            'size' => $this->getDirectorySize($filesDir),
            'status' => 'completed',
        ]]]></code>
      <code><![CDATA[[
            'directories' => $restoredDirs,
            'status' => 'completed',
        ]]]></code>
    </LessSpecificReturnStatement>
    <MixedArgument>
      <code><![CDATA[$item]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code><![CDATA[$file]]></code>
      <code><![CDATA[$item]]></code>
    </MixedAssignment>
    <MoreSpecificReturnType>
      <code><![CDATA[array{
     *     directories: list<string>,
     *     size: int,
     *     status: string
     * }]]></code>
      <code><![CDATA[array{directories: list<string>, status: string}]]></code>
    </MoreSpecificReturnType>
    <RedundantCondition>
      <code><![CDATA[is_string($dir)]]></code>
    </RedundantCondition>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[is_array($directories)]]></code>
    </RedundantConditionGivenDocblockType>
    <UndefinedMethod>
      <code><![CDATA[getSubPathName]]></code>
    </UndefinedMethod>
  </file>
  <file src="app/Services/Backup/Services/BackupValidatorService.php">
    <PossiblyUnusedMethod>
      <code><![CDATA[validateBackupDirectory]]></code>
      <code><![CDATA[validateBackupManifest]]></code>
    </PossiblyUnusedMethod>
  </file>
  <file src="app/Services/Backup/Strategies/BackupStrategyInterface.php">
    <PossiblyUnusedMethod>
      <code><![CDATA[backup]]></code>
      <code><![CDATA[canHandle]]></code>
    </PossiblyUnusedMethod>
  </file>
  <file src="app/Services/Backup/Strategies/ConfigurationBackupStrategy.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$backupInfo]]></code>
    </ArgumentTypeCoercion>
    <PossiblyUnusedMethod>
      <code><![CDATA[__construct]]></code>
    </PossiblyUnusedMethod>
  </file>
  <file src="app/Services/Backup/Strategies/DatabaseBackupStrategy.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$backupInfo]]></code>
    </ArgumentTypeCoercion>
    <PossiblyUnusedMethod>
      <code><![CDATA[__construct]]></code>
    </PossiblyUnusedMethod>
  </file>
  <file src="app/Services/Backup/Strategies/FilesBackupStrategy.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$backupInfo]]></code>
    </ArgumentTypeCoercion>
    <PossiblyUnusedMethod>
      <code><![CDATA[__construct]]></code>
    </PossiblyUnusedMethod>
  </file>
  <file src="app/Services/BackupService.php">
    <ClassMustBeFinal>
      <code><![CDATA[BackupService]]></code>
    </ClassMustBeFinal>
    <MixedArgument>
      <code><![CDATA[$a['created_at']]]></code>
      <code><![CDATA[$b['created_at']]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code><![CDATA[$components]]></code>
      <code><![CDATA[$directory]]></code>
      <code><![CDATA[$file]]></code>
      <code><![CDATA[$file]]></code>
      <code><![CDATA[$manifest]]></code>
    </MixedAssignment>
    <MixedOperand>
      <code><![CDATA[$directory]]></code>
    </MixedOperand>
    <MixedReturnStatement>
      <code><![CDATA[$manifest]]></code>
    </MixedReturnStatement>
    <MixedReturnTypeCoercion>
      <code><![CDATA[$backups]]></code>
      <code><![CDATA[[
            'backup_name' => $backupName,
            'started_at' => Carbon::now(),
            'components' => $result['manifest']['components'] ?? [],
            'completed_at' => Carbon::now(),
            'status' => 'completed',
            'size' => $result['size'],
        ]]]></code>
      <code><![CDATA[[
            'backup_name' => $backupName,
            'started_at' => Carbon::now(),
            'manifest' => ['components' => $result['components']],
            'components' => $result['components'],
            'completed_at' => Carbon::now(),
            'status' => $result['status'],
        ]]]></code>
      <code><![CDATA[array{
     *     backup_name: string,
     *     started_at: \Carbon\Carbon,
     *     components: array<string, array<string, int|string|list<string>>|string>,
     *     completed_at: \Carbon\Carbon,
     *     status: string,
     *     size: int
     * }]]></code>
      <code><![CDATA[array{
     *     backup_name: string,
     *     started_at: \Carbon\Carbon,
     *     manifest: array{
     *         type?: string,
     *         created_at?: string,
     *         version?: string,
     *         components?: array<string, array<string, int|string|list<string>>|string>
     *     },
     *     components: array<string, array<string, int|string|list<string>>|string>,
     *     completed_at: \Carbon\Carbon,
     *     status?: string
     * }]]></code>
      <code><![CDATA[list<array{
     *     name: string,
     *     type: string,
     *     created_at: string|null,
     *     size: int,
     *     components: list<string>
     * }>]]></code>
    </MixedReturnTypeCoercion>
    <PossiblyFalseIterator>
      <code><![CDATA[$directories]]></code>
    </PossiblyFalseIterator>
    <PossiblyFalseOperand>
      <code><![CDATA[$timeA]]></code>
      <code><![CDATA[$timeB]]></code>
    </PossiblyFalseOperand>
    <PossiblyInvalidArgument>
      <code><![CDATA[$results['components']['files']['directories'] ?? []]]></code>
    </PossiblyInvalidArgument>
    <PossiblyUnusedParam>
      <code><![CDATA[$validator]]></code>
    </PossiblyUnusedParam>
    <UnusedClass>
      <code><![CDATA[BackupService]]></code>
    </UnusedClass>
  </file>
  <file src="app/Services/BehaviorAnalysisService.php">
    <ClassMustBeFinal>
      <code><![CDATA[BehaviorAnalysisService]]></code>
    </ClassMustBeFinal>
    <DocblockTypeContradiction>
      <code><![CDATA[0]]></code>
    </DocblockTypeContradiction>
    <InvalidArgument>
      <code><![CDATA[$payload]]></code>
    </InvalidArgument>
    <InvalidCast>
      <code><![CDATA[$payload]]></code>
    </InvalidCast>
    <InvalidOperand>
      <code><![CDATA[$lifetimeValue / 1000]]></code>
      <code><![CDATA[min($lifetimeValue / 1000, 1) * 0.3]]></code>
      <code><![CDATA[min($purchaseFrequency, 1) * 0.3]]></code>
    </InvalidOperand>
    <InvalidTemplateParam>
      <code><![CDATA[$query->orderBy('purchase_count', 'desc')
            ->limit(10)
            ->get()
            ->map(/**
             * @return array<int|string>
             *
             * @psalm-return array{id: int, name: string, purchase_count: int}
             */
                static function (Product $product): array {
                    return [
                        'id' => $product->id,
                        'name' => $product->name,
                        'purchase_count' => $product->purchase_count ?? 0,
                    ];
                }
            )]]></code>
    </InvalidTemplateParam>
    <LessSpecificReturnStatement>
      <code><![CDATA[[
                    'purchase_history' => $this->getPurchaseHistory($user),
                    'browsing_patterns' => $this->getBrowsingPatterns($user),
                    'preferences' => $this->getUserPreferences($user),
                    'engagement_score' => $this->calculateEngagementScore($user),
                    'lifetime_value' => $this->calculateLifetimeValue($user),
                    'recommendation_score' => $this->calculateRecommendationScore($user),
                ]]]></code>
    </LessSpecificReturnStatement>
    <MissingClosureParamType>
      <code><![CDATA[$items]]></code>
      <code><![CDATA[$items]]></code>
      <code><![CDATA[$join]]></code>
      <code><![CDATA[$query]]></code>
      <code><![CDATA[$query]]></code>
    </MissingClosureParamType>
    <MissingClosureReturnType>
      <code><![CDATA[static function ($items) {]]></code>
      <code><![CDATA[static function ($items) {]]></code>
    </MissingClosureReturnType>
    <MixedAssignment>
      <code><![CDATA[$brands]]></code>
      <code><![CDATA[$categories]]></code>
      <code><![CDATA[$firstPurchaseValue]]></code>
      <code><![CDATA[$priceRange]]></code>
      <code><![CDATA[$product]]></code>
      <code><![CDATA[$product]]></code>
      <code><![CDATA[$product]]></code>
      <code><![CDATA[$product]]></code>
      <code><![CDATA[$purchases]]></code>
      <code><![CDATA[$score]]></code>
      <code><![CDATA[$sum]]></code>
      <code><![CDATA[$totalPurchases]]></code>
      <code><![CDATA[$totalPurchases]]></code>
    </MixedAssignment>
    <MixedMethodCall>
      <code><![CDATA[avg]]></code>
      <code><![CDATA[count]]></code>
      <code><![CDATA[count]]></code>
      <code><![CDATA[count]]></code>
      <code><![CDATA[count]]></code>
      <code><![CDATA[get]]></code>
      <code><![CDATA[get]]></code>
      <code><![CDATA[groupBy]]></code>
      <code><![CDATA[groupBy]]></code>
      <code><![CDATA[isEmpty]]></code>
      <code><![CDATA[keys]]></code>
      <code><![CDATA[keys]]></code>
      <code><![CDATA[limit]]></code>
      <code><![CDATA[map]]></code>
      <code><![CDATA[map]]></code>
      <code><![CDATA[map]]></code>
      <code><![CDATA[map]]></code>
      <code><![CDATA[map]]></code>
      <code><![CDATA[max]]></code>
      <code><![CDATA[min]]></code>
      <code><![CDATA[min]]></code>
      <code><![CDATA[orderBy]]></code>
      <code><![CDATA[sortDesc]]></code>
      <code><![CDATA[sortDesc]]></code>
      <code><![CDATA[sum]]></code>
      <code><![CDATA[sum]]></code>
      <code><![CDATA[sum]]></code>
      <code><![CDATA[take]]></code>
      <code><![CDATA[take]]></code>
      <code><![CDATA[toArray]]></code>
      <code><![CDATA[toArray]]></code>
      <code><![CDATA[toArray]]></code>
      <code><![CDATA[toArray]]></code>
      <code><![CDATA[where]]></code>
      <code><![CDATA[where]]></code>
      <code><![CDATA[where]]></code>
      <code><![CDATA[where]]></code>
      <code><![CDATA[with]]></code>
      <code><![CDATA[with]]></code>
      <code><![CDATA[withCount]]></code>
    </MixedMethodCall>
    <MixedOperand>
      <code><![CDATA[$score]]></code>
      <code><![CDATA[$totalPurchases]]></code>
      <code><![CDATA[$totalPurchases]]></code>
      <code><![CDATA[Order::where('user_id', $user->id)
            ->where('created_at', '>=', now()->subDays(30))
            ->count()]]></code>
      <code><![CDATA[Order::where('user_id', $user->id)
            ->where('created_at', '>=', now()->subDays(30))
            ->count() * 10]]></code>
    </MixedOperand>
    <MixedPropertyFetch>
      <code><![CDATA[$product->brand_id]]></code>
      <code><![CDATA[$product->category_id]]></code>
      <code><![CDATA[$product->name]]></code>
      <code><![CDATA[$product->price]]></code>
    </MixedPropertyFetch>
    <MixedReturnStatement>
      <code><![CDATA[$daysSinceFirstPurchase > 0 ? $totalPurchases / $daysSinceFirstPurchase : 0]]></code>
      <code><![CDATA[$daysSinceFirstPurchase > 0 ? $totalPurchases / $daysSinceFirstPurchase : 0]]></code>
      <code><![CDATA[$product && $product->brand_id ? $product->brand_id : 0]]></code>
      <code><![CDATA[$product && $product->brand_id ? $product->brand_id : 0]]></code>
      <code><![CDATA[$product && $product->category_id ? $product->category_id : 0]]></code>
      <code><![CDATA[$product && $product->category_id ? $product->category_id : 0]]></code>
      <code><![CDATA[$totalVisitors > 0 ? $totalPurchases / $totalVisitors * 100 : 0]]></code>
      <code><![CDATA[$totalVisitors > 0 ? $totalPurchases / $totalVisitors * 100 : 0]]></code>
      <code><![CDATA[Cache::remember($cacheKey, 1800, /**
         * @return array<array<array<array<array<scalar|null>>|scalar|null>|int>|float>
         *
         * @psalm-return array{purchase_history: array<int, array<string, array<int, array<string, scalar|null>>|scalar|null>>, browsing_patterns: array<string, array<int, int>|int>, preferences: array<string, array<int, float|int|null>>, engagement_score: float, lifetime_value: float, recommendation_score: float}
         */
            function () use ($user): array {
                return [
                    'purchase_history' => $this->getPurchaseHistory($user),
                    'browsing_patterns' => $this->getBrowsingPatterns($user),
                    'preferences' => $this->getUserPreferences($user),
                    'engagement_score' => $this->calculateEngagementScore($user),
                    'lifetime_value' => $this->calculateLifetimeValue($user),
                    'recommendation_score' => $this->calculateRecommendationScore($user),
                ];
            })]]></code>
      <code><![CDATA[Cache::remember($cacheKey, 3600, /**
         * @return array<array<array<int|string|null>>|float|int|mixed>
         *
         * @psalm-return array{total_users: mixed, active_users: int, total_orders: mixed, total_revenue: mixed, average_order_value: mixed, conversion_rate: float, most_viewed_products: array<int, array<string, int|string|null>>, top_selling_products: array<int, array<string, int|string|null>>}
         */
            function (): array {
                return [
                    'total_users' => User::count(),
                    'active_users' => $this->getActiveUsersCount(),
                    'total_orders' => Order::count(),
                    'total_revenue' => Order::sum('total_amount'),
                    'average_order_value' => Order::avg('total_amount'),
                    'conversion_rate' => $this->getConversionRate(),
                    'most_viewed_products' => $this->getMostViewedProducts(),
                    'top_selling_products' => $this->getTopSellingProducts(),
                ];
            })]]></code>
      <code><![CDATA[User::whereHas('orders', static function ($query): void {
            $query->where('created_at', '>=', now()->subDays(30));
        })
            ->count()]]></code>
      <code><![CDATA[min($score / 100, 1.0)]]></code>
      <code><![CDATA[min($score / 100, 1.0)]]></code>
    </MixedReturnStatement>
    <MixedReturnTypeCoercion>
      <code><![CDATA[DB::table('user_behaviors')
            ->where('user_id', $user->id)
            ->where('created_at', '>=', now()->subDays(30))
            ->selectRaw('HOUR(created_at) as hour')
            ->selectRaw('COUNT(*) as count')
            ->groupBy('hour')
            ->orderByDesc('count')
            ->limit(3)
            ->pluck('hour')
            ->toArray()]]></code>
      <code><![CDATA[array<int, int>]]></code>
    </MixedReturnTypeCoercion>
    <MoreSpecificReturnType>
      <code><![CDATA[array{purchase_history: array<int, array<string, array<int, array<string, scalar|null>>|scalar|null>>, browsing_patterns: array<string, array<int, int>|int>, preferences: array<string, array<int, float|int|null>>, engagement_score: float, lifetime_value: float, recommendation_score: float}]]></code>
    </MoreSpecificReturnType>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[$product->purchase_count]]></code>
    </RedundantConditionGivenDocblockType>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[! $firstPurchase]]></code>
    </RiskyTruthyFalsyComparison>
    <UndefinedMagicMethod>
      <code><![CDATA[Order::avg('total_amount')]]></code>
      <code><![CDATA[Order::count()]]></code>
      <code><![CDATA[Order::sum('total_amount')]]></code>
      <code><![CDATA[Order::where('created_at', '>=', now()->subDays(30))]]></code>
      <code><![CDATA[Order::where('user_id', $user->id)]]></code>
      <code><![CDATA[Order::where('user_id', $user->id)]]></code>
      <code><![CDATA[Order::where('user_id', $user->id)]]></code>
      <code><![CDATA[Order::where('user_id', $user->id)]]></code>
      <code><![CDATA[Order::where('user_id', $user->id)]]></code>
      <code><![CDATA[OrderItem::whereHas('order', static function ($query) use ($user): void {
            $query->where('user_id', $user->id);
        })]]></code>
      <code><![CDATA[Product::select('products.*')]]></code>
      <code><![CDATA[User::count()]]></code>
      <code><![CDATA[User::whereHas('orders', static function ($query): void {
            $query->where('created_at', '>=', now()->subDays(30));
        })]]></code>
    </UndefinedMagicMethod>
    <UndefinedMagicPropertyFetch>
      <code><![CDATA[$item->product]]></code>
      <code><![CDATA[$item->product]]></code>
      <code><![CDATA[$item->product]]></code>
      <code><![CDATA[$item->product]]></code>
      <code><![CDATA[$item->quantity]]></code>
      <code><![CDATA[$item->unit_price]]></code>
      <code><![CDATA[$order->created_at]]></code>
      <code><![CDATA[$order->items]]></code>
      <code><![CDATA[$order->order_number]]></code>
      <code><![CDATA[$order->status]]></code>
      <code><![CDATA[$order->total_amount]]></code>
    </UndefinedMagicPropertyFetch>
  </file>
  <file src="app/Services/CDN/Providers/CloudflareProvider.php">
    <DocblockTypeContradiction>
      <code><![CDATA[[]]]></code>
    </DocblockTypeContradiction>
    <ImplicitToStringCast>
      <code><![CDATA[now()]]></code>
    </ImplicitToStringCast>
    <MixedArrayAccess>
      <code><![CDATA[$result['id']]]></code>
      <code><![CDATA[$variants[0]]]></code>
      <code><![CDATA[$variants[0]]]></code>
    </MixedArrayAccess>
    <MixedAssignment>
      <code><![CDATA[$data]]></code>
      <code><![CDATA[$imageId]]></code>
      <code><![CDATA[$result]]></code>
      <code><![CDATA[$url]]></code>
      <code><![CDATA[$variants]]></code>
    </MixedAssignment>
    <MixedReturnTypeCoercion>
      <code><![CDATA[[
            'url' => $url,
            'id' => $imageId,
            'provider' => 'cloudflare',
        ]]]></code>
      <code><![CDATA[array]]></code>
    </MixedReturnTypeCoercion>
    <PossiblyUnusedReturnValue>
      <code><![CDATA[bool]]></code>
    </PossiblyUnusedReturnValue>
    <RedundantCastGivenDocblockType>
      <code><![CDATA[(string) ($config['account_id'] ?? '')]]></code>
      <code><![CDATA[(string) ($config['api_token'] ?? '')]]></code>
      <code><![CDATA[(string) ($config['base_url'] ?? '')]]></code>
      <code><![CDATA[(string) ($config['zone_id'] ?? '')]]></code>
    </RedundantCastGivenDocblockType>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[is_array($result)]]></code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="app/Services/CDN/Providers/GoogleCloudProvider.php">
    <RedundantCastGivenDocblockType>
      <code><![CDATA[(string) ($config['base_url'] ?? '')]]></code>
      <code><![CDATA[(string) ($config['bucket'] ?? '')]]></code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="app/Services/CDN/Providers/S3Provider.php">
    <RedundantCastGivenDocblockType>
      <code><![CDATA[(string) ($config['base_url'] ?? '')]]></code>
      <code><![CDATA[(string) ($config['bucket'] ?? '')]]></code>
      <code><![CDATA[(string) ($config['region'] ?? '')]]></code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="app/Services/CDNService.php">
    <MixedArgument>
      <code><![CDATA[$mimeType]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code><![CDATA[$configValue]]></code>
      <code><![CDATA[$mimeType]]></code>
      <code><![CDATA[$providerValue]]></code>
    </MixedAssignment>
    <UndefinedInterfaceMethod>
      <code><![CDATA[mimeType]]></code>
    </UndefinedInterfaceMethod>
    <UnusedClass>
      <code><![CDATA[CDNService]]></code>
    </UnusedClass>
  </file>
  <file src="app/Services/CacheService.php">
    <MixedAssignment>
      <code><![CDATA[$driver]]></code>
      <code><![CDATA[$existing]]></code>
      <code><![CDATA[$taggedCache]]></code>
    </MixedAssignment>
    <MixedReturnStatement>
      <code><![CDATA[$existing]]></code>
      <code><![CDATA[$existing]]></code>
      <code><![CDATA[Cache::get($key)]]></code>
      <code><![CDATA[Cache::get($key)]]></code>
      <code><![CDATA[Cache::get($key)]]></code>
      <code><![CDATA[Cache::get($prefixedKey, $default)]]></code>
    </MixedReturnStatement>
    <MoreSpecificImplementedParamType>
      <code><![CDATA[$callback]]></code>
    </MoreSpecificImplementedParamType>
    <PossiblyUnusedMethod>
      <code><![CDATA[cacheProduct]]></code>
      <code><![CDATA[cacheSearchResults]]></code>
      <code><![CDATA[getCachedProduct]]></code>
      <code><![CDATA[getCachedSearchResults]]></code>
      <code><![CDATA[getExchangeRateKey]]></code>
      <code><![CDATA[invalidateCategory]]></code>
      <code><![CDATA[invalidateStore]]></code>
    </PossiblyUnusedMethod>
    <PossiblyUnusedReturnValue>
      <code><![CDATA[bool]]></code>
      <code><![CDATA[bool]]></code>
      <code><![CDATA[bool]]></code>
    </PossiblyUnusedReturnValue>
    <RedundantCastGivenDocblockType>
      <code><![CDATA[(bool) Cache::forget($prefixedKey)]]></code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="app/Services/CacheStatisticsDisplayer.php">
    <InvalidOperand>
      <code><![CDATA[(float) $duration / 60]]></code>
    </InvalidOperand>
    <MixedArgumentTypeCoercion>
      <code><![CDATA[$stats]]></code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment>
      <code><![CDATA[$duration]]></code>
      <code><![CDATA[$name]]></code>
      <code><![CDATA[$name]]></code>
      <code><![CDATA[$prefix]]></code>
    </MixedAssignment>
    <PossiblyNullIterator>
      <code><![CDATA[$stats['durations']]]></code>
      <code><![CDATA[$stats['prefixes']]]></code>
    </PossiblyNullIterator>
    <UndefinedMethod>
      <code><![CDATA[line]]></code>
      <code><![CDATA[line]]></code>
      <code><![CDATA[line]]></code>
    </UndefinedMethod>
  </file>
  <file src="app/Services/CallbackService.php">
    <UnusedClass>
      <code><![CDATA[CallbackService]]></code>
    </UnusedClass>
  </file>
  <file src="app/Services/Compression/BrotliCompressionStrategy.php">
    <ClassMustBeFinal>
      <code><![CDATA[BrotliCompressionStrategy]]></code>
    </ClassMustBeFinal>
    <MixedAssignment>
      <code><![CDATA[$compressed]]></code>
    </MixedAssignment>
    <MixedReturnTypeCoercion>
      <code><![CDATA[?array]]></code>
      <code><![CDATA[[
            'content' => $compressed,
            'encoding' => $this->getEncoding(),
        ]]]></code>
    </MixedReturnTypeCoercion>
    <UndefinedFunction>
      <code><![CDATA[brotli_compress($content, self::COMPRESSION_LEVEL)]]></code>
    </UndefinedFunction>
  </file>
  <file src="app/Services/Compression/CompressionResponseService.php">
    <ClassMustBeFinal>
      <code><![CDATA[CompressionResponseService]]></code>
    </ClassMustBeFinal>
  </file>
  <file src="app/Services/Compression/CompressionService.php">
    <ClassMustBeFinal>
      <code><![CDATA[CompressionService]]></code>
    </ClassMustBeFinal>
    <PossiblyUnusedMethod>
      <code><![CDATA[__construct]]></code>
    </PossiblyUnusedMethod>
  </file>
  <file src="app/Services/Compression/ContentTypeService.php">
    <ClassMustBeFinal>
      <code><![CDATA[ContentTypeService]]></code>
    </ClassMustBeFinal>
  </file>
  <file src="app/Services/Compression/GzipCompressionStrategy.php">
    <ClassMustBeFinal>
      <code><![CDATA[GzipCompressionStrategy]]></code>
    </ClassMustBeFinal>
  </file>
  <file src="app/Services/ConfigurationService.php">
    <MixedReturnStatement>
      <code><![CDATA[$this->configRepository->get('suspicious_activity', $this->getDefaultSuspiciousActivityConfig())]]></code>
    </MixedReturnStatement>
    <PossiblyUnusedMethod>
      <code><![CDATA[__construct]]></code>
    </PossiblyUnusedMethod>
  </file>
  <file src="app/Services/Contracts/CacheServiceContract.php">
    <PossiblyUnusedMethod>
      <code><![CDATA[forget]]></code>
      <code><![CDATA[forgetByTags]]></code>
      <code><![CDATA[get]]></code>
    </PossiblyUnusedMethod>
    <PossiblyUnusedReturnValue>
      <code><![CDATA[bool]]></code>
    </PossiblyUnusedReturnValue>
  </file>
  <file src="app/Services/Contracts/StoreAdapterContract.php">
    <PossiblyUnusedMethod>
      <code><![CDATA[getRateLimits]]></code>
      <code><![CDATA[searchProducts]]></code>
    </PossiblyUnusedMethod>
  </file>
  <file src="app/Services/EnvironmentChecker.php">
    <ClassMustBeFinal>
      <code><![CDATA[EnvironmentChecker]]></code>
    </ClassMustBeFinal>
    <MixedArgument>
      <code><![CDATA[env('DB_DATABASE', 'forge')]]></code>
      <code><![CDATA[env('DB_HOST', '127.0.0.1')]]></code>
      <code><![CDATA[env('DB_PASSWORD')]]></code>
      <code><![CDATA[env('DB_PORT', '3306')]]></code>
      <code><![CDATA[env('DB_USERNAME')]]></code>
      <code><![CDATA[env('REDIS_HOST', '127.0.0.1')]]></code>
      <code><![CDATA[env('REDIS_HOST', '127.0.0.1')]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code><![CDATA[$cacheDriver]]></code>
      <code><![CDATA[$queueDriver]]></code>
    </MixedAssignment>
    <PossiblyFalseArgument>
      <code><![CDATA[$currentValue]]></code>
      <code><![CDATA[$phpVersion]]></code>
    </PossiblyFalseArgument>
    <UnusedClass>
      <code><![CDATA[EnvironmentChecker]]></code>
    </UnusedClass>
  </file>
  <file src="app/Services/ExchangeRateService.php">
    <InvalidArgument>
      <code><![CDATA[$response]]></code>
    </InvalidArgument>
    <InvalidOperand>
      <code><![CDATA[1 / $rate]]></code>
      <code><![CDATA[1 / (float) $rate]]></code>
    </InvalidOperand>
    <MixedAssignment>
      <code><![CDATA[$apiKey]]></code>
      <code><![CDATA[$rate]]></code>
    </MixedAssignment>
    <MixedReturnStatement>
      <code><![CDATA[$response->json()]]></code>
    </MixedReturnStatement>
    <PossiblyUnusedMethod>
      <code><![CDATA[__construct]]></code>
      <code><![CDATA[getSupportedCurrencies]]></code>
    </PossiblyUnusedMethod>
    <UndefinedMagicMethod>
      <code><![CDATA[ExchangeRate::updateOrCreate(
                    [
                        'from_currency' => $currency,
                        'to_currency' => self::BASE_CURRENCY,
                    ],
                    [
                        'rate' => 1 / (float) $rate,
                        'source' => 'config',
                        'fetched_at' => now(),
                    ]
                )]]></code>
      <code><![CDATA[ExchangeRate::updateOrCreate(
                [
                    'from_currency' => self::BASE_CURRENCY,
                    'to_currency' => $currency,
                ],
                [
                    'rate' => $rate,
                    'source' => 'config',
                    'fetched_at' => now(),
                ]
            )]]></code>
      <code><![CDATA[ExchangeRate::updateOrCreate(
                ['from_currency' => $toCurrency, 'to_currency' => $from],
                ['rate' => 1 / $rate, 'source' => 'api', 'fetched_at' => now()]
            )]]></code>
      <code><![CDATA[ExchangeRate::updateOrCreate(
            ['from_currency' => $from, 'to_currency' => $toCurrency],
            ['rate' => $rate, 'source' => 'api', 'fetched_at' => now()]
        )]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Services/ExchangeRates/RateProvider.php">
    <ClassMustBeFinal>
      <code><![CDATA[RateProvider]]></code>
    </ClassMustBeFinal>
    <MixedAssignment>
      <code><![CDATA[$cachedRate]]></code>
    </MixedAssignment>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[$rate]]></code>
    </RiskyTruthyFalsyComparison>
  </file>
  <file src="app/Services/ExternalStoreService.php">
    <MissingClosureParamType>
      <code><![CDATA[$productData]]></code>
    </MissingClosureParamType>
    <MixedArgument>
      <code><![CDATA[$productData]]></code>
      <code><![CDATA[$productData]]></code>
    </MixedArgument>
    <MixedArgumentTypeCoercion>
      <code><![CDATA[$filters]]></code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment>
      <code><![CDATA[$store]]></code>
      <code><![CDATA[$this->storeConfigs]]></code>
    </MixedAssignment>
    <MixedPropertyFetch>
      <code><![CDATA[$store->id]]></code>
    </MixedPropertyFetch>
    <MixedReturnStatement>
      <code><![CDATA[Cache::remember("external_product_{$storeName}_{$productId}", 3600, function () use ($storeName, $productId): ?array {
            try {
                $client = StoreClientFactory::create($storeName);
                if ($client instanceof \App\Services\StoreClients\GenericStoreClient) {
                    $productData = $client->getProduct($productId);

                    return $productData ? $this->normalizeProductData($productData, $storeName) : null;
                }
            } catch (\Exception $e) {
                Log::error("Failed to get product details from {$storeName}", ['product_id' => $productId, 'error' => $e->getMessage()]);
            }

            return null;
        })]]></code>
    </MixedReturnStatement>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[$productData]]></code>
    </RiskyTruthyFalsyComparison>
    <UndefinedMagicMethod>
      <code><![CDATA[Product::updateOrCreate(
            ['external_id' => $normalizedData['external_id'], 'store_id' => $store->id],
            [
                'name' => $normalizedData['name'],
                'description' => $normalizedData['description'],
                'price' => $normalizedData['price'],
                'currency' => $normalizedData['currency'],
                'image' => $normalizedData['image_url'],
                'rating' => $normalizedData['rating'],
                'reviews_count' => $normalizedData['reviews_count'],
                'is_active' => true,
                'external_data' => $normalizedData,
            ]
        )]]></code>
      <code><![CDATA[Store::firstOrCreate(
            ['name' => $storeName],
            ['is_active' => true, 'api_config' => Config::get("external_stores.{$storeName}")]
        )]]></code>
    </UndefinedMagicMethod>
    <UnusedClass>
      <code><![CDATA[ExternalStoreService]]></code>
    </UnusedClass>
  </file>
  <file src="app/Services/FactoryConfigurationService.php">
    <InvalidStringClass>
      <code><![CDATA[$factoryClass::guessFactoryNamesUsing(
            static fn (string $modelName): string => 'Database\\Factories\\'.class_basename($modelName).'Factory'
        )]]></code>
    </InvalidStringClass>
    <UnusedClass>
      <code><![CDATA[FactoryConfigurationService]]></code>
    </UnusedClass>
  </file>
  <file src="app/Services/FileCleanup/DirectoryCleaner.php">
    <MixedAssignment>
      <code><![CDATA[$file]]></code>
    </MixedAssignment>
  </file>
  <file src="app/Services/FileCleanup/Strategies/CacheFilesCleanupStrategy.php">
    <UndefinedClass>
      <code><![CDATA[\Artisan]]></code>
    </UndefinedClass>
  </file>
  <file src="app/Services/FileCleanupService.php">
    <ClassMustBeFinal>
      <code><![CDATA[FileCleanupService]]></code>
    </ClassMustBeFinal>
    <InvalidArgument>
      <code><![CDATA[$results]]></code>
      <code><![CDATA[$this->config]]></code>
    </InvalidArgument>
    <InvalidOperand>
      <code><![CDATA[$maxSizeMb * 1024]]></code>
      <code><![CDATA[$result['deleted_size'] ?? 0]]></code>
      <code><![CDATA[$totalFilesDeleted += array_sum(array_intersect_key($result, array_flip(preg_grep('/_files$/', array_keys($result)))))]]></code>
      <code><![CDATA[$totalSize / $maxSize]]></code>
      <code><![CDATA[$totalSize / 1024 / 1024]]></code>
    </InvalidOperand>
    <LessSpecificReturnStatement>
      <code><![CDATA[[
            'storage_usage' => $this->checkStorageUsage(),
            'config' => $this->config,
            'last_cleanup' => $this->getLastCleanupTime(),
            'next_cleanup' => $this->getNextCleanupTime(),
        ]]]></code>
    </LessSpecificReturnStatement>
    <MixedAssignment>
      <code><![CDATA[$this->config]]></code>
    </MixedAssignment>
    <MoreSpecificReturnType>
      <code><![CDATA[array{storage_usage: array<string, bool|float|int>, config: array<string, int|string>, last_cleanup: string|null, next_cleanup: string|null}]]></code>
    </MoreSpecificReturnType>
    <PossiblyFalseArgument>
      <code><![CDATA[$lastCleanup]]></code>
    </PossiblyFalseArgument>
    <PossiblyUnusedMethod>
      <code><![CDATA[__construct]]></code>
      <code><![CDATA[getCleanupStatistics]]></code>
      <code><![CDATA[performCompleteCleanup]]></code>
      <code><![CDATA[scheduleCleanup]]></code>
    </PossiblyUnusedMethod>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[is_array($result)]]></code>
    </RedundantConditionGivenDocblockType>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[file_get_contents($lastCleanupFile)]]></code>
    </RiskyTruthyFalsyComparison>
  </file>
  <file src="app/Services/FinancialTransactionService.php">
    <DocblockTypeContradiction>
      <code><![CDATA[! $product]]></code>
      <code><![CDATA[$product]]></code>
    </DocblockTypeContradiction>
    <InvalidOperand>
      <code><![CDATA[($newPrice - $oldPrice) / $oldPrice * 100]]></code>
    </InvalidOperand>
    <MixedArgument>
      <code><![CDATA[$offerData['expires_at']]]></code>
      <code><![CDATA[$priceOffer]]></code>
      <code><![CDATA[$updateData['expires_at']]]></code>
    </MixedArgument>
    <MixedArgumentTypeCoercion>
      <code><![CDATA[$oldData]]></code>
      <code><![CDATA[$updateData]]></code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment>
      <code><![CDATA[$lowestOffer]]></code>
      <code><![CDATA[$priceOffer]]></code>
    </MixedAssignment>
    <MixedMethodCall>
      <code><![CDATA[first]]></code>
      <code><![CDATA[orderBy]]></code>
      <code><![CDATA[where]]></code>
    </MixedMethodCall>
    <MixedPropertyFetch>
      <code><![CDATA[$lowestOffer->price]]></code>
    </MixedPropertyFetch>
    <MixedReturnStatement>
      <code><![CDATA[DB::transaction(/**
         * @return true
         */
            function () use ($product, $newPrice, $reason): bool {
                $oldPrice = (float) $product->price;
                $this->validatePrice($newPrice);

                $product->update(['price' => $newPrice]);

                $this->logPriceUpdate($product, $oldPrice, $newPrice, $reason);

                $this->checkPriceAlerts();

                return true;
            }
        )]]></code>
      <code><![CDATA[DB::transaction(function () use ($offerData) {
            $this->validateOfferData($offerData);

            $offerData['status'] = 'active';
            $priceOffer = PriceOffer::create($offerData);

            $this->logOfferCreation($priceOffer);

            $this->updateProductPriceFromOffer($priceOffer);

            return $priceOffer;
        })]]></code>
      <code><![CDATA[DB::transaction(function () use ($priceOffer): true {
            $priceOffer->delete();

            $this->logOfferDeletion($priceOffer);

            return true;
        })]]></code>
      <code><![CDATA[DB::transaction(function () use ($priceOffer, $updateData): \App\Models\PriceOffer {
            $this->validateOfferUpdateData($updateData);

            $oldData = $priceOffer->toArray();
            $priceOffer->update($updateData);

            $this->logOfferUpdate($priceOffer, $oldData);

            $this->updateProductPriceFromOffer($priceOffer);

            return $priceOffer;
        })]]></code>
    </MixedReturnStatement>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[! strtotime($offerData['expires_at'])]]></code>
      <code><![CDATA[! strtotime($updateData['expires_at'])]]></code>
    </RiskyTruthyFalsyComparison>
    <UndefinedMagicMethod>
      <code><![CDATA[PriceOffer::create($offerData)]]></code>
      <code><![CDATA[PriceOffer::where('product_id', $product->id)]]></code>
    </UndefinedMagicMethod>
    <UnusedClass>
      <code><![CDATA[FinancialTransactionService]]></code>
    </UnusedClass>
  </file>
  <file src="app/Services/GeolocationService.php">
    <InvalidOperand>
      <code><![CDATA[$earthRadius * $centralAngle]]></code>
      <code><![CDATA[$latDelta / 2]]></code>
      <code><![CDATA[$lonDelta / 2]]></code>
      <code><![CDATA[2 * asin(sqrt(pow(sin($latDelta / 2), 2) + cos($latFrom) * cos($latTo) * pow(sin($lonDelta / 2), 2)))]]></code>
    </InvalidOperand>
    <PossiblyUnusedMethod>
      <code><![CDATA[calculateDistance]]></code>
    </PossiblyUnusedMethod>
  </file>
  <file src="app/Services/ImageOptimizationService.php">
    <DocblockTypeContradiction>
      <code><![CDATA[! is_array($dimensions)]]></code>
      <code><![CDATA[count($dimensions) < 2]]></code>
      <code><![CDATA[is_string($encoded)]]></code>
    </DocblockTypeContradiction>
    <RedundantCastGivenDocblockType>
      <code><![CDATA[(string) $sizeName]]></code>
    </RedundantCastGivenDocblockType>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA['']]></code>
      <code><![CDATA[is_array($optimizedImages['medium'])]]></code>
      <code><![CDATA[isset($optimizedImages['medium']) && is_array($optimizedImages['medium'])]]></code>
    </RedundantConditionGivenDocblockType>
    <UnusedClass>
      <code><![CDATA[ImageOptimizationService]]></code>
    </UnusedClass>
  </file>
  <file src="app/Services/LogProcessing/ErrorStatisticsCalculator.php">
    <ClassMustBeFinal>
      <code><![CDATA[ErrorStatisticsCalculator]]></code>
    </ClassMustBeFinal>
    <MixedArrayOffset>
      <code><![CDATA[$stats['errors_by_type'][$type]]]></code>
      <code><![CDATA[$stats['errors_by_type'][$type]]]></code>
    </MixedArrayOffset>
    <MixedArrayTypeCoercion>
      <code><![CDATA[$stats['errors_by_type'][$type]]]></code>
    </MixedArrayTypeCoercion>
    <MixedAssignment>
      <code><![CDATA[$timestampValue]]></code>
      <code><![CDATA[$type]]></code>
    </MixedAssignment>
    <PossiblyUnusedMethod>
      <code><![CDATA[__construct]]></code>
    </PossiblyUnusedMethod>
    <ReferenceConstraintViolation>
      <code><![CDATA[$stats]]></code>
    </ReferenceConstraintViolation>
  </file>
  <file src="app/Services/LogProcessing/LogFileReader.php">
    <ClassMustBeFinal>
      <code><![CDATA[LogFileReader]]></code>
    </ClassMustBeFinal>
    <PossiblyUnusedMethod>
      <code><![CDATA[getLogFiles]]></code>
    </PossiblyUnusedMethod>
  </file>
  <file src="app/Services/LogProcessing/LogLineParser.php">
    <ClassMustBeFinal>
      <code><![CDATA[LogLineParser]]></code>
    </ClassMustBeFinal>
    <DocblockTypeContradiction>
      <code><![CDATA[[]]]></code>
    </DocblockTypeContradiction>
    <LessSpecificReturnStatement>
      <code><![CDATA[[
            'id' => uniqid(),
            'timestamp' => $parts[0] ?? '',
            'level' => $parts[1] ?? 'ERROR',
            'type' => $this->extractErrorType($line),
            'message' => $parts[3] ?? $line,
            'context' => $this->extractContext($line),
        ]]]></code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType>
      <code><![CDATA[array{id: string, timestamp: string, level: string, type: string, message: string, context: array<string, string>}]]></code>
    </MoreSpecificReturnType>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[is_array($result)]]></code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="app/Services/LogProcessing/LogProcessingService.php">
    <ClassMustBeFinal>
      <code><![CDATA[LogProcessingService]]></code>
    </ClassMustBeFinal>
  </file>
  <file src="app/Services/LogProcessing/SystemHealthChecker.php">
    <ClassMustBeFinal>
      <code><![CDATA[SystemHealthChecker]]></code>
    </ClassMustBeFinal>
    <InvalidOperand>
      <code><![CDATA[$diskSpace / (1024 * 1024 * 1024)]]></code>
      <code><![CDATA[$memoryUsage / $memoryLimitBytes * 100]]></code>
      <code><![CDATA[$usedSpace / $totalSpace * 100]]></code>
      <code><![CDATA[round($diskSpaceGB, 2)]]></code>
      <code><![CDATA[round($diskSpaceGB, 2)]]></code>
      <code><![CDATA[round($diskSpaceGB, 2)]]></code>
      <code><![CDATA[round($usagePercentage, 2)]]></code>
      <code><![CDATA[round($usagePercentage, 2)]]></code>
      <code><![CDATA[round($usagePercentage, 2)]]></code>
      <code><![CDATA[round($usagePercentage, 2)]]></code>
      <code><![CDATA[round($usagePercentage, 2)]]></code>
      <code><![CDATA[round($usagePercentage, 2)]]></code>
    </InvalidOperand>
    <MixedAssignment>
      <code><![CDATA[$retrieved]]></code>
    </MixedAssignment>
    <PossiblyFalseArgument>
      <code><![CDATA[$memoryLimit]]></code>
    </PossiblyFalseArgument>
    <PossiblyFalseOperand>
      <code><![CDATA[$diskSpace]]></code>
      <code><![CDATA[$freeSpace]]></code>
      <code><![CDATA[$totalSpace]]></code>
      <code><![CDATA[$totalSpace]]></code>
    </PossiblyFalseOperand>
  </file>
  <file src="app/Services/LoginAttemptService.php">
    <MixedAssignment>
      <code><![CDATA[$attempts]]></code>
      <code><![CDATA[$attempts]]></code>
      <code><![CDATA[$attempts]]></code>
      <code><![CDATA[$attempts]]></code>
      <code><![CDATA[$emailAttempts]]></code>
      <code><![CDATA[$ipAttempts]]></code>
    </MixedAssignment>
    <PossiblyUnusedMethod>
      <code><![CDATA[getIpLockoutTimeRemaining]]></code>
      <code><![CDATA[getLockoutTimeRemaining]]></code>
      <code><![CDATA[getRemainingAttempts]]></code>
      <code><![CDATA[getRemainingIpAttempts]]></code>
      <code><![CDATA[isEmailBlocked]]></code>
      <code><![CDATA[isIpBlocked]]></code>
      <code><![CDATA[recordFailedAttempt]]></code>
      <code><![CDATA[recordSuccessfulAttempt]]></code>
      <code><![CDATA[unblockEmail]]></code>
      <code><![CDATA[unblockIp]]></code>
    </PossiblyUnusedMethod>
  </file>
  <file src="app/Services/NotificationService.php">
    <ClassMustBeFinal>
      <code><![CDATA[NotificationService]]></code>
    </ClassMustBeFinal>
    <InvalidArgument>
      <code><![CDATA[true]]></code>
      <code><![CDATA[true]]></code>
    </InvalidArgument>
    <MixedAssignment>
      <code><![CDATA[$alert]]></code>
      <code><![CDATA[$alerts]]></code>
      <code><![CDATA[$notification]]></code>
      <code><![CDATA[$priceAlerts]]></code>
      <code><![CDATA[$store]]></code>
      <code><![CDATA[$user]]></code>
      <code><![CDATA[$user]]></code>
      <code><![CDATA[$users]]></code>
    </MixedAssignment>
    <MixedMethodCall>
      <code><![CDATA[$users]]></code>
      <code><![CDATA[count]]></code>
      <code><![CDATA[count]]></code>
      <code><![CDATA[find]]></code>
      <code><![CDATA[get]]></code>
      <code><![CDATA[get]]></code>
      <code><![CDATA[get]]></code>
      <code><![CDATA[isEmpty]]></code>
      <code><![CDATA[markAsRead]]></code>
      <code><![CDATA[notify]]></code>
      <code><![CDATA[where]]></code>
      <code><![CDATA[where]]></code>
      <code><![CDATA[with]]></code>
      <code><![CDATA[with]]></code>
    </MixedMethodCall>
    <MixedPropertyFetch>
      <code><![CDATA[$alert->target_price]]></code>
      <code><![CDATA[$alert->user]]></code>
      <code><![CDATA[$notification->read_at]]></code>
      <code><![CDATA[$store->contact_email]]></code>
    </MixedPropertyFetch>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[$user instanceof \App\Models\User]]></code>
    </RedundantConditionGivenDocblockType>
    <UndefinedMagicMethod>
      <code><![CDATA[PriceAlert::where('product_id', $product->id)]]></code>
      <code><![CDATA[PriceAlert::where('user_id', $user->id)]]></code>
      <code><![CDATA[User::whereIn('id', $userIds)]]></code>
      <code><![CDATA[get]]></code>
      <code><![CDATA[get]]></code>
      <code><![CDATA[notify]]></code>
      <code><![CDATA[notify]]></code>
    </UndefinedMagicMethod>
    <UndefinedMagicPropertyFetch>
      <code><![CDATA[$product->store]]></code>
    </UndefinedMagicPropertyFetch>
    <UnusedClass>
      <code><![CDATA[NotificationService]]></code>
    </UnusedClass>
  </file>
  <file src="app/Services/OptimizedQueryService.php">
    <InvalidArgument>
      <code><![CDATA[$filters]]></code>
      <code><![CDATA[$query]]></code>
      <code><![CDATA[$query]]></code>
    </InvalidArgument>
    <MissingClosureReturnType>
      <code><![CDATA[static fn (Relation $q) => $q->select(['id', 'product_id', 'rating'])]]></code>
    </MissingClosureReturnType>
    <MixedArgument>
      <code><![CDATA[$analyticsResult[0] ?? null]]></code>
    </MixedArgument>
    <TooManyArguments>
      <code><![CDATA[select]]></code>
    </TooManyArguments>
    <UndefinedMagicMethod>
      <code><![CDATA[select]]></code>
    </UndefinedMagicMethod>
    <UnusedClass>
      <code><![CDATA[OptimizedQueryService]]></code>
    </UnusedClass>
  </file>
  <file src="app/Services/OrderService.php">
    <ClassMustBeFinal>
      <code><![CDATA[OrderService]]></code>
    </ClassMustBeFinal>
    <DocblockTypeContradiction>
      <code><![CDATA[is_numeric($quantity)]]></code>
    </DocblockTypeContradiction>
    <InvalidOperand>
      <code><![CDATA[(float) $product->price * $item['quantity']]]></code>
      <code><![CDATA[(float) $product->price * (int) $quantity]]></code>
    </InvalidOperand>
    <MissingClosureReturnType>
      <code><![CDATA[function () use ($user, $cartItems, $addresses) {]]></code>
    </MissingClosureReturnType>
    <MixedArgument>
      <code><![CDATA[$oldStatus]]></code>
      <code><![CDATA[$product]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code><![CDATA[$item]]></code>
      <code><![CDATA[$oldStatus]]></code>
      <code><![CDATA[$order]]></code>
      <code><![CDATA[$product]]></code>
      <code><![CDATA[$product]]></code>
      <code><![CDATA[$product]]></code>
      <code><![CDATA[$schema]]></code>
      <code><![CDATA[$table]]></code>
      <code><![CDATA[$totalAmount]]></code>
    </MixedAssignment>
    <MixedMethodCall>
      <code><![CDATA[canTransitionTo]]></code>
      <code><![CDATA[exists]]></code>
      <code><![CDATA[get]]></code>
      <code><![CDATA[getConnection]]></code>
      <code><![CDATA[getSchemaBuilder]]></code>
      <code><![CDATA[getTable]]></code>
      <code><![CDATA[hasColumn]]></code>
      <code><![CDATA[hasColumn]]></code>
      <code><![CDATA[limit]]></code>
      <code><![CDATA[update]]></code>
    </MixedMethodCall>
    <MixedOperand>
      <code><![CDATA[$order->notes]]></code>
      <code><![CDATA[$order->subtotal]]></code>
    </MixedOperand>
    <MixedPropertyFetch>
      <code><![CDATA[$item->product]]></code>
      <code><![CDATA[$item->quantity]]></code>
      <code><![CDATA[$item->quantity]]></code>
      <code><![CDATA[$order->id]]></code>
      <code><![CDATA[$order->shipping_amount]]></code>
      <code><![CDATA[$order->subtotal]]></code>
      <code><![CDATA[$order->tax_amount]]></code>
      <code><![CDATA[$product->id]]></code>
      <code><![CDATA[$product->image]]></code>
      <code><![CDATA[$product->name]]></code>
      <code><![CDATA[$product->price]]></code>
      <code><![CDATA[$product->price]]></code>
      <code><![CDATA[$product->sku]]></code>
    </MixedPropertyFetch>
    <MixedReturnStatement>
      <code><![CDATA[$user->orders()
            ->with(['items.product', 'payments'])
            ->orderBy('created_at', 'desc')
            ->limit($limit)
            ->get()]]></code>
      <code><![CDATA[DB::transaction(function () use ($user, $cartItems, $addresses) {
            $order = Order::create([
                'order_number' => $this->generateOrderNumber(),
                'user_id' => $user->id,
                'status' => OrderStatus::PENDING,
                'subtotal' => $this->calculateSubtotal($cartItems),
                'tax_amount' => $this->calculateTax($cartItems),
                'shipping_amount' => $this->calculateShipping($cartItems),
                'total_amount' => 0, // Will be calculated
                'currency' => 'USD',
                'shipping_address' => $addresses['shipping'],
                'billing_address' => $addresses['billing'],
            ]);

            $totalAmount = $order->subtotal + $order->tax_amount + $order->shipping_amount;
            $order->update(['total_amount' => $totalAmount]);

            foreach ($cartItems as $item) {
                $productId = $item['product_id'] ?? null;
                if (! is_numeric($productId)) {
                    continue;
                }

                $product = Product::findOrFail((int) $productId);
                $quantity = $item['quantity'] ?? 1;
                if (! is_numeric($quantity)) {
                    $quantity = 1;
                }

                $orderItemData = [
                    'order_id' => $order->id,
                    'product_id' => $product->id,
                    'quantity' => (int) $quantity,
                    'unit_price' => $product->price,
                    'total_price' => (float) $product->price * (int) $quantity,
                ];

                // Only include product_details if the column exists on the same connection as OrderItem
                $orderItemModel = new OrderItem;
                $schema = $orderItemModel->getConnection()->getSchemaBuilder();
                if ($schema->hasColumn($orderItemModel->getTable(), 'product_details')) {
                    $orderItemData['product_details'] = [
                        'name' => $product->name,
                        'sku' => $product->sku ?? '',
                        'image' => $product->image ?? '',
                    ];
                }

                OrderItem::create($orderItemData);
            }

            return $order;
        })]]></code>
    </MixedReturnStatement>
    <RedundantCastGivenDocblockType>
      <code><![CDATA[(int) $productId]]></code>
      <code><![CDATA[(int) $quantity]]></code>
      <code><![CDATA[(int) $quantity]]></code>
    </RedundantCastGivenDocblockType>
    <UndefinedMagicMethod>
      <code><![CDATA[Order::create([
                'order_number' => $this->generateOrderNumber(),
                'user_id' => $user->id,
                'status' => OrderStatus::PENDING,
                'subtotal' => $this->calculateSubtotal($cartItems),
                'tax_amount' => $this->calculateTax($cartItems),
                'shipping_amount' => $this->calculateShipping($cartItems),
                'total_amount' => 0, // Will be calculated
                'currency' => 'USD',
                'shipping_address' => $addresses['shipping'],
                'billing_address' => $addresses['billing'],
            ])]]></code>
      <code><![CDATA[Order::where('order_number', $orderNumber)]]></code>
      <code><![CDATA[OrderItem::create($orderItemData)]]></code>
      <code><![CDATA[Product::find($item['product_id'])]]></code>
      <code><![CDATA[Product::findOrFail((int) $productId)]]></code>
      <code><![CDATA[orderBy]]></code>
    </UndefinedMagicMethod>
    <UndefinedMagicPropertyFetch>
      <code><![CDATA[$order->items]]></code>
      <code><![CDATA[$order->notes]]></code>
      <code><![CDATA[$order->status_enum]]></code>
      <code><![CDATA[$order->status_enum]]></code>
    </UndefinedMagicPropertyFetch>
  </file>
  <file src="app/Services/PasswordHistoryService.php">
    <DocblockTypeContradiction>
      <code><![CDATA[5]]></code>
    </DocblockTypeContradiction>
    <PossiblyUnusedMethod>
      <code><![CDATA[clearPasswordHistory]]></code>
      <code><![CDATA[savePasswordToHistory]]></code>
    </PossiblyUnusedMethod>
    <RedundantCastGivenDocblockType>
      <code><![CDATA[(int) $this->config['history_count']]]></code>
    </RedundantCastGivenDocblockType>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[is_numeric($this->config['history_count'])]]></code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="app/Services/PasswordPolicyService.php">
    <MixedArgumentTypeCoercion>
      <code><![CDATA[array_merge($this->config, $newPolicy)]]></code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment>
      <code><![CDATA[$attempts]]></code>
      <code><![CDATA[$attempts]]></code>
    </MixedAssignment>
    <MixedMethodCall>
      <code><![CDATA[make]]></code>
    </MixedMethodCall>
    <MixedPropertyTypeCoercion>
      <code><![CDATA[$this->loadConfig($config)]]></code>
      <code><![CDATA[$this->loadConfig(array_merge($this->config, $newPolicy))]]></code>
    </MixedPropertyTypeCoercion>
    <PossiblyUnusedMethod>
      <code><![CDATA[__construct]]></code>
      <code><![CDATA[clearFailedAttempts]]></code>
      <code><![CDATA[generateSecurePassword]]></code>
      <code><![CDATA[getPolicyRequirements]]></code>
      <code><![CDATA[isAccountLocked]]></code>
      <code><![CDATA[isPasswordExpired]]></code>
      <code><![CDATA[recordFailedAttempt]]></code>
      <code><![CDATA[updatePolicy]]></code>
    </PossiblyUnusedMethod>
    <PossiblyUnusedReturnValue>
      <code><![CDATA[bool]]></code>
    </PossiblyUnusedReturnValue>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[is_string($forbidden)]]></code>
    </RedundantConditionGivenDocblockType>
    <RiskyCast>
      <code><![CDATA[$this->config['expiry_days']]]></code>
      <code><![CDATA[$this->config['expiry_days']]]></code>
      <code><![CDATA[$this->config['history_count']]]></code>
      <code><![CDATA[$this->config['max_length']]]></code>
      <code><![CDATA[$this->config['max_length']]]></code>
      <code><![CDATA[$this->config['min_length']]]></code>
      <code><![CDATA[$this->config['min_length']]]></code>
    </RiskyCast>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[$this->config[$configKey]]]></code>
      <code><![CDATA[$userId]]></code>
    </RiskyTruthyFalsyComparison>
  </file>
  <file src="app/Services/PasswordResetService.php">
    <MixedArgument>
      <code><![CDATA[$user->email]]></code>
      <code><![CDATA[$user->name]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code><![CDATA[$createdAt]]></code>
      <code><![CDATA[$createdAtValue]]></code>
    </MixedAssignment>
    <MixedReturnTypeCoercion>
      <code><![CDATA[[
            'created_at' => $createdAt,
            'expires_at' => $createdAt && is_string($createdAt) ? Carbon::parse($createdAt)->addMinutes(self::TOKEN_EXPIRY)->toISOString() : null,
            'attempts' => $attempts,
            'remaining_attempts' => self::MAX_ATTEMPTS - $attempts,
        ]]]></code>
      <code><![CDATA[array<string, string|int|null>|null]]></code>
    </MixedReturnTypeCoercion>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[$createdAt]]></code>
      <code><![CDATA[$createdAtValue]]></code>
    </RiskyTruthyFalsyComparison>
    <UndefinedMagicMethod>
      <code><![CDATA[first]]></code>
      <code><![CDATA[first]]></code>
    </UndefinedMagicMethod>
    <UndefinedMagicPropertyAssignment>
      <code><![CDATA[$user->password]]></code>
    </UndefinedMagicPropertyAssignment>
    <UndefinedMagicPropertyFetch>
      <code><![CDATA[$user->email]]></code>
      <code><![CDATA[$user->id]]></code>
      <code><![CDATA[$user->id]]></code>
      <code><![CDATA[$user->id]]></code>
      <code><![CDATA[$user->is_blocked]]></code>
      <code><![CDATA[$user->name]]></code>
    </UndefinedMagicPropertyFetch>
    <UnusedClass>
      <code><![CDATA[PasswordResetService]]></code>
    </UnusedClass>
  </file>
  <file src="app/Services/PaymentService.php">
    <DocblockTypeContradiction>
      <code><![CDATA['']]></code>
    </DocblockTypeContradiction>
    <InvalidOperand>
      <code><![CDATA[$refundAmount * 100]]></code>
      <code><![CDATA[(is_numeric($payment->amount) ? $payment->amount : 0) * 100]]></code>
    </InvalidOperand>
    <MixedArgument>
      <code><![CDATA[$payment]]></code>
      <code><![CDATA[$payment]]></code>
      <code><![CDATA[$refundAmount * 100]]></code>
    </MixedArgument>
    <MixedArgumentTypeCoercion>
      <code><![CDATA[[
                            'payment_intent' => $paymentIntentId,
                            'amount' => (int) round($refundAmount * 100),
                        ]]]></code>
      <code><![CDATA[[
            'amount' => (int) ((is_numeric($payment->amount) ? $payment->amount : 0) * 100), // Convert to cents and cast to int
            'currency' => $payment->currency,
            'payment_method' => is_string($paymentMethodId) ? $paymentMethodId : '',
            'confirmation_method' => 'manual',
            'confirm' => true,
        ]]]></code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment>
      <code><![CDATA[$gatewayResponse]]></code>
      <code><![CDATA[$payment]]></code>
      <code><![CDATA[$paymentIntentId]]></code>
      <code><![CDATA[$paymentMethod]]></code>
      <code><![CDATA[$refundAmount]]></code>
      <code><![CDATA[$responseStatus]]></code>
    </MixedAssignment>
    <MixedMethodCall>
      <code><![CDATA[update]]></code>
    </MixedMethodCall>
    <MixedOperand>
      <code><![CDATA[$refundAmount]]></code>
    </MixedOperand>
    <MixedPropertyFetch>
      <code><![CDATA[$payment->id]]></code>
      <code><![CDATA[$payment->paymentMethod->gateway]]></code>
      <code><![CDATA[$paymentMethod->gateway]]></code>
    </MixedPropertyFetch>
    <MixedReturnStatement>
      <code><![CDATA[$payment]]></code>
      <code><![CDATA[$payment]]></code>
    </MixedReturnStatement>
    <MixedReturnTypeCoercion>
      <code><![CDATA[[
            'status' => $intent->status === 'succeeded' ? 'completed' : 'failed',
            'response' => $intent->toArray(),
        ]]]></code>
      <code><![CDATA[[
            'status' => $responseStatus === 'COMPLETED' ? 'completed' : 'failed',
            'response' => is_array($response) ? $response : [],
        ]]]></code>
      <code><![CDATA[array<string, array<string, int|string|list<string>>|string>]]></code>
      <code><![CDATA[array{status: string, response: array<string, string|int|float|array<string, array<string, string|int|float|null>>|bool|null>}]]></code>
    </MixedReturnTypeCoercion>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[is_string($paymentMethodId)]]></code>
    </RedundantConditionGivenDocblockType>
    <UndefinedMagicMethod>
      <code><![CDATA[Payment::create([
            'order_id' => $order->id,
            'payment_method_id' => $paymentMethodId,
            'transaction_id' => $this->generateTransactionId(),
            'amount' => $order->total_amount,
            'currency' => $order->currency,
            'status' => 'processing',
        ])]]></code>
      <code><![CDATA[PaymentMethod::findOrFail($paymentMethodId)]]></code>
    </UndefinedMagicMethod>
    <UndefinedMagicPropertyFetch>
      <code><![CDATA[$order->currency]]></code>
      <code><![CDATA[$order->id]]></code>
      <code><![CDATA[$order->total_amount]]></code>
      <code><![CDATA[$payment->amount]]></code>
      <code><![CDATA[$payment->amount]]></code>
      <code><![CDATA[$payment->amount]]></code>
      <code><![CDATA[$payment->currency]]></code>
      <code><![CDATA[$payment->currency]]></code>
      <code><![CDATA[$payment->gateway_response]]></code>
      <code><![CDATA[$payment->id]]></code>
      <code><![CDATA[$payment->id]]></code>
      <code><![CDATA[$payment->paymentMethod]]></code>
    </UndefinedMagicPropertyFetch>
    <UnusedClass>
      <code><![CDATA[PaymentService]]></code>
    </UnusedClass>
  </file>
  <file src="app/Services/Performance/CacheOptimizerService.php">
    <UndefinedMethod>
      <code><![CDATA[line]]></code>
    </UndefinedMethod>
  </file>
  <file src="app/Services/Performance/DatabaseOptimizerService.php">
    <DocblockTypeContradiction>
      <code><![CDATA['Tables_in_']]></code>
    </DocblockTypeContradiction>
    <MixedAssignment>
      <code><![CDATA[$table]]></code>
      <code><![CDATA[$tableNames[]]]></code>
    </MixedAssignment>
    <MixedReturnTypeCoercion>
      <code><![CDATA[$tableNames]]></code>
      <code><![CDATA[array<string>]]></code>
    </MixedReturnTypeCoercion>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[is_string($database)]]></code>
    </RedundantConditionGivenDocblockType>
    <UndefinedMethod>
      <code><![CDATA[line]]></code>
      <code><![CDATA[line]]></code>
      <code><![CDATA[warn]]></code>
      <code><![CDATA[warn]]></code>
    </UndefinedMethod>
  </file>
  <file src="app/Services/Performance/PerformanceReporter.php">
    <MixedArgument>
      <code><![CDATA[$opcacheStatus['opcache_statistics']['opcache_hit_rate'] ?? 0]]></code>
      <code><![CDATA[($opcacheStatus['memory_usage']['free_memory'] ?? 0) / 1024 / 1024]]></code>
      <code><![CDATA[($opcacheStatus['memory_usage']['used_memory'] ?? 0) / 1024 / 1024]]></code>
      <code><![CDATA[($opcacheStatus['memory_usage']['wasted_memory'] ?? 0) / 1024 / 1024]]></code>
    </MixedArgument>
    <MixedOperand>
      <code><![CDATA[$opcacheStatus['memory_usage']['free_memory'] ?? 0]]></code>
      <code><![CDATA[$opcacheStatus['memory_usage']['used_memory'] ?? 0]]></code>
      <code><![CDATA[$opcacheStatus['memory_usage']['wasted_memory'] ?? 0]]></code>
      <code><![CDATA[($opcacheStatus['memory_usage']['free_memory'] ?? 0) / 1024]]></code>
      <code><![CDATA[($opcacheStatus['memory_usage']['used_memory'] ?? 0) / 1024]]></code>
      <code><![CDATA[($opcacheStatus['memory_usage']['wasted_memory'] ?? 0) / 1024]]></code>
    </MixedOperand>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[$opcacheStatus]]></code>
      <code><![CDATA[$opcacheStatus['opcache_enabled'] ?? false]]></code>
      <code><![CDATA[ini_get('opcache.enable')]]></code>
    </RiskyTruthyFalsyComparison>
    <UndefinedMethod>
      <code><![CDATA[line]]></code>
      <code><![CDATA[line]]></code>
      <code><![CDATA[line]]></code>
      <code><![CDATA[line]]></code>
      <code><![CDATA[line]]></code>
      <code><![CDATA[warn]]></code>
      <code><![CDATA[warn]]></code>
    </UndefinedMethod>
    <UnusedClass>
      <code><![CDATA[PerformanceReporter]]></code>
    </UnusedClass>
  </file>
  <file src="app/Services/Performance/PerformanceReporterService.php">
    <MixedAssignment>
      <code><![CDATA[$cacheStats]]></code>
      <code><![CDATA[$dbStats]]></code>
    </MixedAssignment>
    <PossiblyFalseOperand>
      <code><![CDATA[json_encode($stats)]]></code>
    </PossiblyFalseOperand>
    <UndefinedMethod>
      <code><![CDATA[line]]></code>
    </UndefinedMethod>
  </file>
  <file src="app/Services/Performance/SystemOptimizerService.php">
    <MixedArgumentTypeCoercion>
      <code><![CDATA[$execOutput]]></code>
    </MixedArgumentTypeCoercion>
    <UndefinedMethod>
      <code><![CDATA[line]]></code>
      <code><![CDATA[warn]]></code>
    </UndefinedMethod>
  </file>
  <file src="app/Services/PerformanceAnalysisService.php">
    <LessSpecificReturnStatement>
      <code><![CDATA[[
            'score' => $score,
            'max_score' => 100,
            'issues' => $issues,
            'category' => 'Performance',
        ]]]></code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType>
      <code><![CDATA[array<string, int|list<string>>]]></code>
    </MoreSpecificReturnType>
    <UnusedClass>
      <code><![CDATA[PerformanceAnalysisService]]></code>
    </UnusedClass>
  </file>
  <file src="app/Services/PerformanceMonitoringService.php">
    <DocblockTypeContradiction>
      <code><![CDATA[! is_array($operationData)]]></code>
      <code><![CDATA[! is_array($operationData)]]></code>
    </DocblockTypeContradiction>
    <InvalidOperand>
      <code><![CDATA[$currentMemory / $this->parseMemoryLimit($limit) * 100]]></code>
      <code><![CDATA[$usedSpace / $totalSpace * 100]]></code>
      <code><![CDATA[(float) $config['memory_threshold'] * 1024]]></code>
    </InvalidOperand>
    <MixedArgument>
      <code><![CDATA[$config]]></code>
    </MixedArgument>
    <MixedArgumentTypeCoercion>
      <code><![CDATA[$config]]></code>
      <code><![CDATA[$config]]></code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment>
      <code><![CDATA[$config]]></code>
      <code><![CDATA[$executionTime]]></code>
      <code><![CDATA[$totalTime]]></code>
    </MixedAssignment>
    <MixedOperand>
      <code><![CDATA[$executionTime]]></code>
      <code><![CDATA[$totalTime]]></code>
    </MixedOperand>
    <MixedReturnTypeCoercion>
      <code><![CDATA[[
            'total_queries' => count($queries),
            'total_time' => $totalTime,
            'average_time' => count($queries) > 0 ? $totalTime / count($queries) : 0,
            'slow_queries' => $slowQueries,
            'slow_queries_count' => count($slowQueries),
        ]]]></code>
      <code><![CDATA[array<string, int|float|list<array<string, string|int|list<string>>>>]]></code>
    </MixedReturnTypeCoercion>
    <PossiblyFalseArgument>
      <code><![CDATA[$limit]]></code>
      <code><![CDATA[$limit]]></code>
      <code><![CDATA[$limit]]></code>
    </PossiblyFalseArgument>
    <PossiblyFalseOperand>
      <code><![CDATA[$freeSpace]]></code>
      <code><![CDATA[$totalSpace]]></code>
    </PossiblyFalseOperand>
    <RedundantCondition>
      <code><![CDATA[is_array($config)]]></code>
      <code><![CDATA[is_array($config)]]></code>
      <code><![CDATA[is_array($config)]]></code>
    </RedundantCondition>
    <UnusedClass>
      <code><![CDATA[PerformanceMonitoringService]]></code>
    </UnusedClass>
  </file>
  <file src="app/Services/PointsService.php">
    <ClassMustBeFinal>
      <code><![CDATA[PointsService]]></code>
    </ClassMustBeFinal>
    <MixedArgument>
      <code><![CDATA[$order->id]]></code>
      <code><![CDATA[$reward]]></code>
      <code><![CDATA[$reward->points_required]]></code>
      <code><![CDATA[$user]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code><![CDATA[$reward]]></code>
      <code><![CDATA[$sum]]></code>
      <code><![CDATA[$user]]></code>
    </MixedAssignment>
    <MixedMethodCall>
      <code><![CDATA[get]]></code>
      <code><![CDATA[get]]></code>
      <code><![CDATA[limit]]></code>
      <code><![CDATA[orderBy]]></code>
      <code><![CDATA[orderBy]]></code>
      <code><![CDATA[sum]]></code>
      <code><![CDATA[toArray]]></code>
      <code><![CDATA[valid]]></code>
    </MixedMethodCall>
    <MixedPropertyFetch>
      <code><![CDATA[$reward->name]]></code>
      <code><![CDATA[$reward->points_required]]></code>
    </MixedPropertyFetch>
    <MixedReturnStatement>
      <code><![CDATA[DB::transaction(function () use ($user, $reward): true {
            $this->redeemPoints($user, $reward->points_required, "Redeemed reward: {$reward->name}");

            // Apply reward benefits
            $this->applyReward($user, $reward);

            return true;
        })]]></code>
      <code><![CDATA[Reward::availableForPoints($availablePoints)
            ->orderBy('points_required')
            ->get()
            ->toArray()]]></code>
      <code><![CDATA[UserPoint::create([
            'user_id' => $user->id,
            'points' => $points,
            'type' => $type,
            'source' => $source,
            'order_id' => $orderId,
            'description' => $description,
            'expires_at' => $this->calculateExpirationDate($type),
        ])]]></code>
      <code><![CDATA[UserPoint::where('user_id', $userId)
            ->orderBy('created_at', 'desc')
            ->limit($limit)
            ->get()]]></code>
    </MixedReturnStatement>
    <PossiblyUnusedMethod>
      <code><![CDATA[getAvailableRewards]]></code>
      <code><![CDATA[getPointsHistory]]></code>
      <code><![CDATA[redeemReward]]></code>
    </PossiblyUnusedMethod>
    <PossiblyUnusedReturnValue>
      <code><![CDATA[UserPoint]]></code>
      <code><![CDATA[bool]]></code>
    </PossiblyUnusedReturnValue>
    <UndefinedMagicMethod>
      <code><![CDATA[Reward::availableForPoints($availablePoints)]]></code>
      <code><![CDATA[Reward::findOrFail($rewardId)]]></code>
      <code><![CDATA[UserPoint::create([
            'user_id' => $user->id,
            'points' => $points,
            'type' => $type,
            'source' => $source,
            'order_id' => $orderId,
            'description' => $description,
            'expires_at' => $this->calculateExpirationDate($type),
        ])]]></code>
      <code><![CDATA[UserPoint::where('user_id', $userId)]]></code>
      <code><![CDATA[UserPoint::where('user_id', $userId)]]></code>
    </UndefinedMagicMethod>
    <UndefinedMagicPropertyFetch>
      <code><![CDATA[$order->id]]></code>
      <code><![CDATA[$order->order_number]]></code>
      <code><![CDATA[$order->total_amount]]></code>
      <code><![CDATA[$order->user]]></code>
      <code><![CDATA[$reward->name]]></code>
      <code><![CDATA[$reward->name]]></code>
      <code><![CDATA[$reward->name]]></code>
      <code><![CDATA[$reward->name]]></code>
      <code><![CDATA[$reward->type]]></code>
    </UndefinedMagicPropertyFetch>
  </file>
  <file src="app/Services/PriceComparisonService.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$pricesArray]]></code>
    </ArgumentTypeCoercion>
    <InvalidReturnStatement>
      <code><![CDATA[$item['in_stock'] ?? false]]></code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code><![CDATA[bool]]></code>
    </InvalidReturnType>
    <LessSpecificReturnStatement>
      <code><![CDATA[$prices]]></code>
    </LessSpecificReturnStatement>
    <MixedAssignment>
      <code><![CDATA[$lowestPrice]]></code>
    </MixedAssignment>
    <MoreSpecificReturnType>
      <code><![CDATA[array<int, array<string, string|float|bool|null>>]]></code>
    </MoreSpecificReturnType>
    <PossiblyUnusedMethod>
      <code><![CDATA[__construct]]></code>
    </PossiblyUnusedMethod>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[$price['in_stock'] ?? false]]></code>
      <code><![CDATA[$productData]]></code>
    </RiskyTruthyFalsyComparison>
  </file>
  <file src="app/Services/PriceUpdate/PriceFetcherService.php">
    <DocblockTypeContradiction>
      <code><![CDATA[0.0]]></code>
      <code><![CDATA[0.0]]></code>
    </DocblockTypeContradiction>
    <InvalidOperand>
      <code><![CDATA[$currentPrice * (1 + $fluctuation)]]></code>
      <code><![CDATA[1 + $fluctuation]]></code>
    </InvalidOperand>
    <RedundantCastGivenDocblockType>
      <code><![CDATA[(float) $priceOffer->price]]></code>
      <code><![CDATA[(float) $priceOffer->price]]></code>
    </RedundantCastGivenDocblockType>
    <RedundantCondition>
      <code><![CDATA[$currentPrice > 0 && $newPrice !== null]]></code>
      <code><![CDATA[$newPrice !== null]]></code>
    </RedundantCondition>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[is_numeric($priceOffer->price)]]></code>
      <code><![CDATA[is_numeric($priceOffer->price)]]></code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="app/Services/PriceUpdate/PriceUpdateDisplayService.php">
    <DocblockTypeContradiction>
      <code><![CDATA['Unknown Product']]></code>
      <code><![CDATA['Unknown Store']]></code>
    </DocblockTypeContradiction>
    <PossiblyUnusedMethod>
      <code><![CDATA[logAppliedFilter]]></code>
    </PossiblyUnusedMethod>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[$product]]></code>
      <code><![CDATA[$product && is_string($product->name)]]></code>
      <code><![CDATA[$store]]></code>
      <code><![CDATA[$store && is_string($store->name)]]></code>
      <code><![CDATA[is_string($priceOffer->product->name)]]></code>
      <code><![CDATA[is_string($priceOffer->store->name)]]></code>
      <code><![CDATA[is_string($product->name)]]></code>
      <code><![CDATA[is_string($store->name)]]></code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="app/Services/PriceUpdate/PriceUpdateProcessorService.php">
    <DocblockTypeContradiction>
      <code><![CDATA[0.0]]></code>
      <code><![CDATA[0.0]]></code>
    </DocblockTypeContradiction>
    <RedundantCastGivenDocblockType>
      <code><![CDATA[(float) $priceOffer->price]]></code>
      <code><![CDATA[(float) $priceOffer->price]]></code>
    </RedundantCastGivenDocblockType>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[is_numeric($priceOffer->price)]]></code>
      <code><![CDATA[is_numeric($priceOffer->price)]]></code>
    </RedundantConditionGivenDocblockType>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[$newPrice]]></code>
    </RiskyTruthyFalsyComparison>
  </file>
  <file src="app/Services/ProcessService.php">
    <DocblockTypeContradiction>
      <code><![CDATA[$data['name'] === null]]></code>
    </DocblockTypeContradiction>
    <InvalidArgument>
      <code><![CDATA[$cleaned[$key]]]></code>
    </InvalidArgument>
    <MixedArgumentTypeCoercion>
      <code><![CDATA[$data]]></code>
      <code><![CDATA[$data]]></code>
    </MixedArgumentTypeCoercion>
    <PossiblyUnusedMethod>
      <code><![CDATA[getErrors]]></code>
      <code><![CDATA[getMetrics]]></code>
      <code><![CDATA[getStatus]]></code>
      <code><![CDATA[process]]></code>
      <code><![CDATA[reset]]></code>
      <code><![CDATA[transform]]></code>
    </PossiblyUnusedMethod>
  </file>
  <file src="app/Services/Product/SearchFilterBuilder.php">
    <DocblockTypeContradiction>
      <code><![CDATA[[]]]></code>
    </DocblockTypeContradiction>
    <MixedArgumentTypeCoercion>
      <code><![CDATA[$filters]]></code>
    </MixedArgumentTypeCoercion>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[is_array($filters)]]></code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="app/Services/Product/Services/ProductCacheService.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$callback]]></code>
      <code><![CDATA[$callback]]></code>
      <code><![CDATA[$callback]]></code>
      <code><![CDATA[$callback]]></code>
    </ArgumentTypeCoercion>
    <MixedOperand>
      <code><![CDATA[request()->get('page', 1)]]></code>
    </MixedOperand>
    <MixedReturnStatement>
      <code><![CDATA[Cache::remember($cacheKey, now()->addHours(1), $callback)]]></code>
      <code><![CDATA[Cache::remember($cacheKey, now()->addHours(1), $callback)]]></code>
      <code><![CDATA[Cache::remember($cacheKey, now()->addMinutes(15), $callback)]]></code>
      <code><![CDATA[Cache::remember($cacheKey, now()->addMinutes(15), $callback)]]></code>
    </MixedReturnStatement>
  </file>
  <file src="app/Services/Product/Services/ProductPriceService.php">
    <MixedArgument>
      <code><![CDATA[$lockedProduct]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code><![CDATA[$lockedProduct]]></code>
      <code><![CDATA[$updated]]></code>
      <code><![CDATA[$userId]]></code>
    </MixedAssignment>
    <MixedMethodCall>
      <code><![CDATA[firstOrFail]]></code>
      <code><![CDATA[lockForUpdate]]></code>
      <code><![CDATA[update]]></code>
    </MixedMethodCall>
    <MixedPropertyFetch>
      <code><![CDATA[$lockedProduct->id]]></code>
    </MixedPropertyFetch>
    <MixedReturnStatement>
      <code><![CDATA[DB::transaction(/**
             * @return true
             */
                function () use ($product, $newPrice): bool {
                    $oldPrice = $product->price;

                    // Lock the row for update
                    $lockedProduct = Product::where('id', $product->id)->lockForUpdate()->firstOrFail();

                    $updated = $lockedProduct->update(['price' => $newPrice]);

                    if (! $updated) {
                        throw new RuntimeException('Failed to update product price');
                    }

                    $userId = auth()->id();

                    // Log price change
                    Log::info('Product price updated', [
                        'product_id' => $lockedProduct->id,
                        'old_price' => $oldPrice,
                        'new_price' => $newPrice,
                        'user_id' => $userId,
                        'ip' => request()->ip(),
                    ]);

                    // Create price history record (if priceHistory method exists)
                    $this->createPriceHistory($lockedProduct, $newPrice);

                    return true;
                }
            )]]></code>
    </MixedReturnStatement>
    <UndefinedInterfaceMethod>
      <code><![CDATA[id]]></code>
    </UndefinedInterfaceMethod>
    <UndefinedMagicMethod>
      <code><![CDATA[Product::where('id', $product->id)]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Services/Product/Services/ProductQueryBuilderService.php">
    <MixedArgument>
      <code><![CDATA[$filters['sort_by'] ?? 'latest']]></code>
    </MixedArgument>
  </file>
  <file src="app/Services/Product/Services/ProductValidationService.php">
    <DocblockTypeContradiction>
      <code><![CDATA[$value === null]]></code>
    </DocblockTypeContradiction>
  </file>
  <file src="app/Services/ProductService.php">
    <ClassMustBeFinal>
      <code><![CDATA[ProductService]]></code>
    </ClassMustBeFinal>
    <MixedAssignment>
      <code><![CDATA[$page]]></code>
      <code><![CDATA[$result]]></code>
    </MixedAssignment>
    <MixedReturnStatement>
      <code><![CDATA[$result]]></code>
      <code><![CDATA[$this->cache->remember(
            'product.slug.'.$slug,
            3600,
            function () use ($slug): ?Product {
                return $this->repository->findBySlug($slug);
            },
            ['products']
        )]]></code>
    </MixedReturnStatement>
  </file>
  <file src="app/Services/QualityAnalysisService.php">
    <InvalidOperand>
      <code><![CDATA[$duplication * 5]]></code>
    </InvalidOperand>
    <LessSpecificReturnStatement>
      <code><![CDATA[[
            'score' => min(100, $score),
            'max_score' => 100,
            'issues' => $issues,
            'category' => 'Code Quality',
        ]]]></code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType>
      <code><![CDATA[array<string, int|list<string>>]]></code>
    </MoreSpecificReturnType>
    <UnusedClass>
      <code><![CDATA[QualityAnalysisService]]></code>
    </UnusedClass>
  </file>
  <file src="app/Services/RecommendationService.php">
    <InvalidArgument>
      <code><![CDATA[$collaborativeRecs]]></code>
      <code><![CDATA[$contentRecs]]></code>
      <code><![CDATA[$query]]></code>
      <code><![CDATA[$query]]></code>
      <code><![CDATA[$query]]></code>
      <code><![CDATA[$trendingRecs]]></code>
    </InvalidArgument>
    <MissingClosureParamType>
      <code><![CDATA[$o]]></code>
      <code><![CDATA[$q]]></code>
      <code><![CDATA[$q]]></code>
      <code><![CDATA[$query]]></code>
      <code><![CDATA[$query]]></code>
      <code><![CDATA[$query]]></code>
      <code><![CDATA[$query]]></code>
      <code><![CDATA[$query]]></code>
    </MissingClosureParamType>
    <MixedArgument>
      <code><![CDATA[$purchases]]></code>
    </MixedArgument>
    <MixedArgumentTypeCoercion>
      <code><![CDATA[$similarUserIds]]></code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment>
      <code><![CDATA[$product]]></code>
      <code><![CDATA[$product]]></code>
      <code><![CDATA[$product]]></code>
      <code><![CDATA[$purchases]]></code>
    </MixedAssignment>
    <MixedMethodCall>
      <code><![CDATA[all]]></code>
      <code><![CDATA[all]]></code>
      <code><![CDATA[all]]></code>
      <code><![CDATA[all]]></code>
      <code><![CDATA[distinct]]></code>
      <code><![CDATA[get]]></code>
      <code><![CDATA[get]]></code>
      <code><![CDATA[get]]></code>
      <code><![CDATA[get]]></code>
      <code><![CDATA[get]]></code>
      <code><![CDATA[get]]></code>
      <code><![CDATA[groupBy]]></code>
      <code><![CDATA[isEmpty]]></code>
      <code><![CDATA[limit]]></code>
      <code><![CDATA[limit]]></code>
      <code><![CDATA[limit]]></code>
      <code><![CDATA[limit]]></code>
      <code><![CDATA[orderBy]]></code>
      <code><![CDATA[orderBy]]></code>
      <code><![CDATA[orderBy]]></code>
      <code><![CDATA[orderByDesc]]></code>
      <code><![CDATA[orderByDesc]]></code>
      <code><![CDATA[pluck]]></code>
      <code><![CDATA[pluck]]></code>
      <code><![CDATA[select]]></code>
      <code><![CDATA[select]]></code>
      <code><![CDATA[selectRaw]]></code>
      <code><![CDATA[toArray]]></code>
      <code><![CDATA[toArray]]></code>
      <code><![CDATA[where]]></code>
      <code><![CDATA[where]]></code>
      <code><![CDATA[where]]></code>
      <code><![CDATA[where]]></code>
      <code><![CDATA[where]]></code>
      <code><![CDATA[where]]></code>
      <code><![CDATA[where]]></code>
      <code><![CDATA[where]]></code>
      <code><![CDATA[whereHas]]></code>
      <code><![CDATA[whereHas]]></code>
      <code><![CDATA[whereIn]]></code>
      <code><![CDATA[whereIn]]></code>
      <code><![CDATA[whereNotIn]]></code>
      <code><![CDATA[with]]></code>
      <code><![CDATA[withCount]]></code>
      <code><![CDATA[withCount]]></code>
    </MixedMethodCall>
    <MixedPropertyFetch>
      <code><![CDATA[$product->brand_id]]></code>
      <code><![CDATA[$product->category_id]]></code>
      <code><![CDATA[$product->price]]></code>
    </MixedPropertyFetch>
    <MixedReturnStatement>
      <code><![CDATA[$items->sum('quantity')]]></code>
      <code><![CDATA[$items->sum('quantity')]]></code>
      <code><![CDATA[$product && $product->brand_id ? $product->brand_id : 0]]></code>
      <code><![CDATA[$product && $product->brand_id ? $product->brand_id : 0]]></code>
      <code><![CDATA[$product && $product->category_id ? $product->category_id : 0]]></code>
      <code><![CDATA[$product && $product->category_id ? $product->category_id : 0]]></code>
      <code><![CDATA[$product ? $product->price : 0.0]]></code>
      <code><![CDATA[$product ? $product->price : 0.0]]></code>
      <code><![CDATA[Cache::remember($cacheKey, $cacheTtl, /**
         * @psalm-return array<int, mixed>
         */
            function () use ($user, $limit): array {
                $recommendations = $this->collectRecommendations($user, $limit);

                return $this->filterAndLimitRecommendations($recommendations, $user, $limit);
            })]]></code>
      <code><![CDATA[OrderItem::whereHas('order', function ($query) use ($product): void {
            $query->whereHas('items', function ($q) use ($product): void {
                $q->where('product_id', $product->id);
            });
        })
            ->where('product_id', '!=', $product->id)
            ->select('product_id')
            ->selectRaw('COUNT(*) as frequency')
            ->groupBy('product_id')
            ->orderBy('frequency', 'desc')
            ->limit($limit)
            ->pluck('product_id')
            ->toArray()]]></code>
      <code><![CDATA[OrderItem::whereHas('order', function ($query) use ($user): void {
            $query->where('user_id', $user->id);
        })
            ->select('product_id')
            ->distinct()
            ->get()]]></code>
      <code><![CDATA[OrderItem::whereHas('order', function ($query) use ($user): void {
            $query->where('user_id', $user->id);
        })->pluck('product_id')->toArray()]]></code>
      <code><![CDATA[Product::where('category_id', $product->category_id)
            ->where('id', '!=', $product->id)
            ->where('is_active', true)
            ->orderBy('rating', 'desc')
            ->limit($limit)
            ->get()
            ->all()]]></code>
      <code><![CDATA[Product::where('is_active', true)
            ->withCount([
                'orderItems as recent_purchases' => $this->getRecentPurchasesQuery(),
            ])
            ->orderByDesc('recent_purchases')
            ->orderBy('rating', 'desc')
            ->limit($limit)
            ->get()
            ->all()]]></code>
      <code><![CDATA[Product::whereHas('orderItems.order', function ($query) use ($similarUserIds): void {
            $query->whereIn('user_id', $similarUserIds);
        })
            ->whereNotIn('id', $purchasedProductIds)
            ->withCount([
                'orderItems as purchase_count' => function ($q) use ($similarUserIds): void {
                    $q->whereHas('order', function ($o) use ($similarUserIds): void {
                        $o->whereIn('user_id', $similarUserIds);
                    });
                },
            ])
            ->orderByDesc('purchase_count')
            ->limit($limit)
            ->get()
            ->all()]]></code>
      <code><![CDATA[Product::whereIn('id', $productIds)
            ->where('is_active', true)
            ->get()
            ->all()]]></code>
    </MixedReturnStatement>
    <MixedReturnTypeCoercion>
      <code><![CDATA[[
            'categories' => $categories->keys()->toArray(),
            'brands' => $brands->keys()->toArray(),
            'price_range' => $priceRange,
        ]]]></code>
      <code><![CDATA[array<string, array<int, int>|array<string, float|null>>]]></code>
    </MixedReturnTypeCoercion>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[is_array($userPreferences['price_range'])]]></code>
      <code><![CDATA[isset($userPreferences['price_range']) && is_array($userPreferences['price_range'])]]></code>
    </RedundantConditionGivenDocblockType>
    <UndefinedMagicMethod>
      <code><![CDATA[OrderItem::whereHas('order', function ($query) use ($product): void {
            $query->whereHas('items', function ($q) use ($product): void {
                $q->where('product_id', $product->id);
            });
        })]]></code>
      <code><![CDATA[OrderItem::whereHas('order', function ($query) use ($user): void {
            $query->where('user_id', $user->id);
        })]]></code>
      <code><![CDATA[OrderItem::whereHas('order', function ($query) use ($user): void {
            $query->where('user_id', $user->id);
        })]]></code>
      <code><![CDATA[OrderItem::whereHas('order', static function ($query) use ($user): void {
            $query->where('user_id', $user->id);
        })]]></code>
      <code><![CDATA[Product::where('category_id', $product->category_id)]]></code>
      <code><![CDATA[Product::where('is_active', true)]]></code>
      <code><![CDATA[Product::whereHas('orderItems.order', function ($query) use ($similarUserIds): void {
            $query->whereIn('user_id', $similarUserIds);
        })]]></code>
      <code><![CDATA[Product::whereIn('id', $productIds)]]></code>
    </UndefinedMagicMethod>
    <UndefinedMagicPropertyFetch>
      <code><![CDATA[$item->product]]></code>
      <code><![CDATA[$item->product]]></code>
      <code><![CDATA[$item->product]]></code>
    </UndefinedMagicPropertyFetch>
  </file>
  <file src="app/Services/ReportService.php">
    <InvalidMethodCall>
      <code><![CDATA[map]]></code>
    </InvalidMethodCall>
    <InvalidOperand>
      <code><![CDATA[$priceChanges / $startDate->diffInDays($endDate)]]></code>
      <code><![CDATA[($price - $averagePrice) ** 2]]></code>
      <code><![CDATA[array_reduce(
            $prices,
            static function (float $carry, float $price) use ($averagePrice): float {
                return $carry + ($price - $averagePrice) ** 2;
            },
            0.0
        ) / $pricesCount]]></code>
      <code><![CDATA[array_sum($prices) / $totalOffers]]></code>
      <code><![CDATA[array_sum($ratings) / count($ratings)]]></code>
    </InvalidOperand>
    <InvalidStringClass>
      <code><![CDATA[$modelClass::where('product_id', $productId)]]></code>
      <code><![CDATA[$modelClass::where('user_id', $userId)]]></code>
    </InvalidStringClass>
    <InvalidTemplateParam>
      <code><![CDATA[$alerts->map(/**
         * @return array<float|int|string|null>
         *
         * @psalm-return array{user_id: int, product_id: int, product_name: string, target_price: float, created_at: string|null}
         */
            static function (PriceAlert $alert): array {
                $createdAt = $alert->created_at;

                return [
                    'user_id' => $alert->user_id,
                    'product_id' => $alert->product_id,
                    'product_name' => $alert->product->name,
                    'target_price' => $alert->target_price,
                    'created_at' => $createdAt ? $createdAt->toDateTimeString() : null,
                ];
            }
        )]]></code>
      <code><![CDATA[$reviews->map(/**
         * @return array<int|mixed|string|null>
         *
         * @psalm-return array{user_id: int, product_id: int, product_name: string, rating: int, comment: string, created_at: mixed|null}
         */
            static function (Review $review): array {
                $createdAt = $review->created_at;

                return [
                    'user_id' => $review->user_id,
                    'product_id' => $review->product_id,
                    'product_name' => $review->product->name,
                    'rating' => $review->rating,
                    'comment' => $review->content,
                    'created_at' => $createdAt ? $createdAt->toDateTimeString() : null,
                ];
            }
        )]]></code>
      <code><![CDATA[$wishlists->map(/**
         * @return array<int|string|null>
         *
         * @psalm-return array{user_id: int, product_id: int, product_name: string, created_at: string|null}
         */
            static function (Wishlist $wishlist): array {
                $createdAt = $wishlist->created_at;

                return [
                    'user_id' => $wishlist->user_id,
                    'product_id' => $wishlist->product_id,
                    'product_name' => $wishlist->product->name,
                    'created_at' => $createdAt ? $createdAt->toDateTimeString() : null,
                ];
            }
        )]]></code>
    </InvalidTemplateParam>
    <MissingClosureParamType>
      <code><![CDATA[$trend]]></code>
    </MissingClosureParamType>
    <MixedArgument>
      <code><![CDATA[$offers]]></code>
      <code><![CDATA[$reviews]]></code>
      <code><![CDATA[$trend]]></code>
    </MixedArgument>
    <MixedArgumentTypeCoercion>
      <code><![CDATA[$ratings]]></code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment>
      <code><![CDATA[$availabilityCounts]]></code>
      <code><![CDATA[$createdAt]]></code>
      <code><![CDATA[$offers]]></code>
      <code><![CDATA[$offers]]></code>
      <code><![CDATA[$product]]></code>
      <code><![CDATA[$reviews]]></code>
      <code><![CDATA[$storeCounts]]></code>
      <code><![CDATA[$trends]]></code>
      <code><![CDATA[$user]]></code>
    </MixedAssignment>
    <MixedMethodCall>
      <code><![CDATA[count]]></code>
      <code><![CDATA[count]]></code>
      <code><![CDATA[count]]></code>
      <code><![CDATA[count]]></code>
      <code><![CDATA[count]]></code>
      <code><![CDATA[count]]></code>
      <code><![CDATA[count]]></code>
      <code><![CDATA[format]]></code>
      <code><![CDATA[get]]></code>
      <code><![CDATA[get]]></code>
      <code><![CDATA[get]]></code>
      <code><![CDATA[get]]></code>
      <code><![CDATA[get]]></code>
      <code><![CDATA[get]]></code>
      <code><![CDATA[get]]></code>
      <code><![CDATA[groupBy]]></code>
      <code><![CDATA[groupBy]]></code>
      <code><![CDATA[groupBy]]></code>
      <code><![CDATA[isEmpty]]></code>
      <code><![CDATA[isEmpty]]></code>
      <code><![CDATA[map]]></code>
      <code><![CDATA[orderBy]]></code>
      <code><![CDATA[orderBy]]></code>
      <code><![CDATA[orderBy]]></code>
      <code><![CDATA[orderBy]]></code>
      <code><![CDATA[orderBy]]></code>
      <code><![CDATA[select]]></code>
      <code><![CDATA[sortDesc]]></code>
      <code><![CDATA[take]]></code>
      <code><![CDATA[take]]></code>
      <code><![CDATA[toArray]]></code>
      <code><![CDATA[toArray]]></code>
      <code><![CDATA[toArray]]></code>
      <code><![CDATA[toDateTimeString]]></code>
      <code><![CDATA[whereBetween]]></code>
      <code><![CDATA[whereBetween]]></code>
      <code><![CDATA[whereBetween]]></code>
      <code><![CDATA[whereBetween]]></code>
      <code><![CDATA[whereBetween]]></code>
      <code><![CDATA[whereBetween]]></code>
      <code><![CDATA[with]]></code>
    </MixedMethodCall>
    <MixedPropertyFetch>
      <code><![CDATA[$offers->groupBy('is_available')->map]]></code>
      <code><![CDATA[$offers->groupBy('store_id')->map]]></code>
      <code><![CDATA[$product->brand]]></code>
      <code><![CDATA[$product->brand->name]]></code>
      <code><![CDATA[$product->category]]></code>
      <code><![CDATA[$product->category->name]]></code>
      <code><![CDATA[$product->id]]></code>
      <code><![CDATA[$product->name]]></code>
      <code><![CDATA[$product->price]]></code>
      <code><![CDATA[$user->created_at]]></code>
      <code><![CDATA[$user->email]]></code>
      <code><![CDATA[$user->id]]></code>
      <code><![CDATA[$user->name]]></code>
    </MixedPropertyFetch>
    <MixedReturnStatement>
      <code><![CDATA[$modelClass::where('product_id', $productId)
            ->whereBetween('created_at', [$startDate, $endDate])
            ->count()]]></code>
      <code><![CDATA[$modelClass::where('user_id', $userId)
            ->whereBetween('created_at', [$startDate, $endDate])
            ->count()]]></code>
      <code><![CDATA[$products->map(/**
         * @return array<int|string|null>
         *
         * @psalm-return array<string, int|string|null>
         */
            function (Product $product): array {
                return $this->formatTopProduct($product);
            }
        )->toArray()]]></code>
      <code><![CDATA[$trends->map(/**
         * @return array<float|string>
         *
         * @psalm-return array<string, float|string>
         */
            /**
             * @return array<float|string>
             *
             * @psalm-return array{date: string, average_price: float}
             */
            function ($trend): array {
                return $this->formatTrendData($trend);
            }
        )->toArray()]]></code>
    </MixedReturnStatement>
    <MixedReturnTypeCoercion>
      <code><![CDATA[[
            'id' => $product->id,
            'name' => $product->name,
            'wishlists_count' => $product->wishlists_count,
            'price_alerts_count' => $product->price_alerts_count,
            'reviews_count' => $product->reviews_count,
        ]]]></code>
      <code><![CDATA[[
            'period' => [
                'start_date' => $startDate->format('Y-m-d'),
                'end_date' => $endDate->format('Y-m-d'),
            ],
            'total_offers' => PriceOffer::whereBetween('created_at', [$startDate, $endDate])->count(),
            'price_changes' => $this->getPriceChanges($startDate, $endDate),
            'top_products' => $this->getTopProducts($startDate, $endDate),
            'top_stores' => $this->getTopStores($startDate, $endDate),
            'price_trends' => $this->getPriceTrends($startDate, $endDate),
        ]]]></code>
      <code><![CDATA[[
            'total_offers' => $offers->count(),
            'unique_stores' => $storeCounts->count(),
            'available_offers' => $availabilityCounts->get('1', 0),
            'unavailable_offers' => $availabilityCounts->get('0', 0),
            'top_stores' => $storeCounts->sortDesc()->take(5)->toArray(),
        ]]]></code>
      <code><![CDATA[[
            'total_reviews' => $reviews->count(),
            'average_rating' => array_sum($ratings) / count($ratings),
            'rating_distribution' => $ratingDistribution,
            'approved_reviews' => $reviews->where('is_approved', true)->count(),
            'pending_reviews' => $reviews->where('is_approved', false)->count(),
        ]]]></code>
      <code><![CDATA[array<string, int|array<int, int>>]]></code>
      <code><![CDATA[array<string, int|array<int, int>>]]></code>
      <code><![CDATA[array<string, int|string|null>]]></code>
      <code><![CDATA[array{
     *     period: array<string, string>,
     *     total_offers: int,
     *     price_changes: array<string, float|int>,
     *     top_products: array<int, array<string, int|string|null>>,
     *     top_stores: array<int, int>,
     *     price_trends: array<int, array<string, string|float>>
     * }]]></code>
    </MixedReturnTypeCoercion>
    <RedundantCastGivenDocblockType>
      <code><![CDATA[(float) $trend->average_price]]></code>
    </RedundantCastGivenDocblockType>
    <UndefinedMagicMethod>
      <code><![CDATA[PriceOffer::where('product_id', $productId)]]></code>
      <code><![CDATA[PriceOffer::where('product_id', $productId)]]></code>
      <code><![CDATA[PriceOffer::whereBetween('created_at', [$startDate, $endDate])]]></code>
      <code><![CDATA[Product::withCount(['wishlists', 'priceAlerts', 'reviews'])]]></code>
      <code><![CDATA[Review::where('product_id', $productId)]]></code>
      <code><![CDATA[findOrFail]]></code>
      <code><![CDATA[findOrFail]]></code>
      <code><![CDATA[whereBetween]]></code>
    </UndefinedMagicMethod>
    <UndefinedMagicPropertyFetch>
      <code><![CDATA[$product->price_alerts_count]]></code>
      <code><![CDATA[$product->reviews_count]]></code>
      <code><![CDATA[$product->wishlists_count]]></code>
      <code><![CDATA[$review->created_at]]></code>
    </UndefinedMagicPropertyFetch>
    <UndefinedMethod>
      <code><![CDATA[getTopStores]]></code>
    </UndefinedMethod>
    <UnusedClass>
      <code><![CDATA[ReportService]]></code>
    </UnusedClass>
  </file>
  <file src="app/Services/RouteConfigurationService.php">
    <MixedPropertyFetch>
      <code><![CDATA[$request->user()->id]]></code>
      <code><![CDATA[$request->user()->id]]></code>
      <code><![CDATA[$request->user()->id]]></code>
      <code><![CDATA[$request->user()->id]]></code>
    </MixedPropertyFetch>
    <UnresolvableInclude>
      <code><![CDATA[require base_path('routes/api.php')]]></code>
      <code><![CDATA[require base_path('routes/web.php')]]></code>
    </UnresolvableInclude>
  </file>
  <file src="app/Services/SEO/SEOAuditReporter.php">
    <InvalidArgument>
      <code><![CDATA[$result->getIssues()]]></code>
    </InvalidArgument>
  </file>
  <file src="app/Services/SEO/SEOAuditResult.php">
    <MixedReturnStatement>
      <code><![CDATA[$this->model->name ?? 'unknown']]></code>
      <code><![CDATA[$this->model->name ?? 'unknown']]></code>
    </MixedReturnStatement>
    <TypeDoesNotContainType>
      <code><![CDATA['App\Models\Category' => 'Categories']]></code>
      <code><![CDATA['App\Models\Product' => 'Products']]></code>
      <code><![CDATA['App\Models\Store' => 'Stores']]></code>
    </TypeDoesNotContainType>
  </file>
  <file src="app/Services/SEO/SEOAuditor.php">
    <InvalidArgument>
      <code><![CDATA[$issues]]></code>
    </InvalidArgument>
    <InvalidReturnStatement>
      <code><![CDATA[[
            Product::class => 'Products',
            Category::class => 'Categories',
            Store::class => 'Stores',
        ]]]></code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code><![CDATA[array{'App\\Models\\Product'::class: 'Products', 'App\\Models\\Category'::class: 'Categories', 'App\\Models\\Store'::class: 'Stores'}]]></code>
    </InvalidReturnType>
    <InvalidStringClass>
      <code><![CDATA[$modelClass::all()]]></code>
    </InvalidStringClass>
    <MixedMethodCall>
      <code><![CDATA[map]]></code>
    </MixedMethodCall>
    <MixedReturnStatement>
      <code><![CDATA[$modelClass::all()->map(function (Model $model): \App\Services\SEO\SEOAuditResult {
            return $this->auditModel($model);
        })]]></code>
    </MixedReturnStatement>
    <PossiblyUnusedMethod>
      <code><![CDATA[auditModels]]></code>
    </PossiblyUnusedMethod>
  </file>
  <file src="app/Services/SEO/SEOIssueFixer.php">
    <UndefinedClass>
      <code><![CDATA[\Schema]]></code>
    </UndefinedClass>
    <UnusedParam>
      <code><![CDATA[$field]]></code>
      <code><![CDATA[$model]]></code>
    </UnusedParam>
  </file>
  <file src="app/Services/SEO/SEORouteAuditor.php">
    <DocblockTypeContradiction>
      <code><![CDATA[is_string($uri)]]></code>
    </DocblockTypeContradiction>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[is_string($uri)]]></code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="app/Services/SEOService.php">
    <DocblockTypeContradiction>
      <code><![CDATA['']]></code>
      <code><![CDATA['']]></code>
      <code><![CDATA[0.0]]></code>
    </DocblockTypeContradiction>
    <MixedArgument>
      <code><![CDATA[$imageUrl]]></code>
      <code><![CDATA[$imageUrl]]></code>
      <code><![CDATA[$model->name]]></code>
      <code><![CDATA[$this->configRepository->get('app.name', 'COPRRA')]]></code>
      <code><![CDATA[$this->configRepository->get('app.name', 'COPRRA')]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code><![CDATA[$imageUrl]]></code>
      <code><![CDATA[$imageUrl]]></code>
    </MixedAssignment>
    <MixedPropertyFetch>
      <code><![CDATA[$product->store->currency]]></code>
    </MixedPropertyFetch>
    <MixedReturnStatement>
      <code><![CDATA[$product->image_url && $product->image_url !== ''
            ? $product->image_url
            : $this->urlGenerator->asset('images/default-product.png')]]></code>
      <code><![CDATA[$product->image_url && $product->image_url !== ''
            ? $product->image_url
            : $this->urlGenerator->asset('images/default-product.png')]]></code>
      <code><![CDATA[$product->store->currency]]></code>
    </MixedReturnStatement>
    <MixedReturnTypeCoercion>
      <code><![CDATA[$this->addProductRatingData($product, $data)]]></code>
      <code><![CDATA[[
            '@type' => 'AggregateRating',
            'ratingValue' => $product->rating ?? 0,
            'reviewCount' => $reviewCount,
        ]]]></code>
      <code><![CDATA[array<string, array<string, string|float>|string>]]></code>
      <code><![CDATA[array<string, string|int|float>]]></code>
    </MixedReturnTypeCoercion>
    <PossiblyUnusedMethod>
      <code><![CDATA[__construct]]></code>
      <code><![CDATA[generateBreadcrumbData]]></code>
      <code><![CDATA[generateProductStructuredData]]></code>
      <code><![CDATA[generateStructuredData]]></code>
    </PossiblyUnusedMethod>
    <RedundantCondition>
      <code><![CDATA[$category->description !== '']]></code>
      <code><![CDATA[$product->description !== '']]></code>
      <code><![CDATA[$product->description !== '']]></code>
      <code><![CDATA[$store->description !== '']]></code>
      <code><![CDATA[$store->logo_url !== '']]></code>
    </RedundantCondition>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[$product->brand]]></code>
      <code><![CDATA[$product->brand->name]]></code>
      <code><![CDATA[$product->category]]></code>
      <code><![CDATA[$product->category->name]]></code>
      <code><![CDATA[$product->price]]></code>
    </RedundantConditionGivenDocblockType>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[$category->description]]></code>
      <code><![CDATA[$store->description]]></code>
      <code><![CDATA[$store->logo_url]]></code>
    </RiskyTruthyFalsyComparison>
    <UndefinedMagicPropertyFetch>
      <code><![CDATA[$category->image_url]]></code>
      <code><![CDATA[$product->image_url]]></code>
      <code><![CDATA[$product->image_url]]></code>
      <code><![CDATA[$product->reviews_count]]></code>
      <code><![CDATA[$product->store]]></code>
      <code><![CDATA[$product->store]]></code>
    </UndefinedMagicPropertyFetch>
  </file>
  <file src="app/Services/Security/Headers/ContentSecurityPolicyHeaderStrategy.php">
    <ClassMustBeFinal>
      <code><![CDATA[ContentSecurityPolicyHeaderStrategy]]></code>
    </ClassMustBeFinal>
    <MixedReturnStatement>
      <code><![CDATA[$config['enabled'] ?? true]]></code>
      <code><![CDATA[$config['enabled'] ?? true]]></code>
      <code><![CDATA[$config['value'] ?? "default-src 'self'; script-src 'self'; style-src 'self';"]]></code>
      <code><![CDATA[$config['value'] ?? "default-src 'self'; script-src 'self'; style-src 'self';"]]></code>
    </MixedReturnStatement>
  </file>
  <file src="app/Services/Security/Headers/PermissionsPolicyHeaderStrategy.php">
    <ClassMustBeFinal>
      <code><![CDATA[PermissionsPolicyHeaderStrategy]]></code>
    </ClassMustBeFinal>
    <MixedReturnStatement>
      <code><![CDATA[$config['enabled'] ?? true]]></code>
      <code><![CDATA[$config['enabled'] ?? true]]></code>
      <code><![CDATA[config(
            'security.headers.Permissions-Policy',
            $config['value'] ?? 'camera=(), microphone=(), geolocation=()'
        )]]></code>
    </MixedReturnStatement>
  </file>
  <file src="app/Services/Security/Headers/SecurityHeaderStrategyFactory.php">
    <ClassMustBeFinal>
      <code><![CDATA[SecurityHeaderStrategyFactory]]></code>
    </ClassMustBeFinal>
    <PossiblyUnusedMethod>
      <code><![CDATA[registerStrategy]]></code>
    </PossiblyUnusedMethod>
  </file>
  <file src="app/Services/Security/Headers/SecurityHeaderStrategyInterface.php">
    <PossiblyUnusedMethod>
      <code><![CDATA[getHeaderName]]></code>
      <code><![CDATA[supportsDynamicValues]]></code>
    </PossiblyUnusedMethod>
  </file>
  <file src="app/Services/Security/Headers/StandardSecurityHeaderStrategy.php">
    <ClassMustBeFinal>
      <code><![CDATA[StandardSecurityHeaderStrategy]]></code>
    </ClassMustBeFinal>
    <MissingParamType>
      <code><![CDATA[$environments]]></code>
      <code><![CDATA[$patterns]]></code>
      <code><![CDATA[$required]]></code>
    </MissingParamType>
    <MixedArgument>
      <code><![CDATA[$condition]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code><![CDATA[$condition]]></code>
      <code><![CDATA[$overrideValue]]></code>
      <code><![CDATA[$pattern]]></code>
      <code><![CDATA[$pattern]]></code>
      <code><![CDATA[$required]]></code>
    </MixedAssignment>
    <MixedReturnStatement>
      <code><![CDATA[$config['value'] ?? $this->defaultValue]]></code>
      <code><![CDATA[$config['value'] ?? $this->defaultValue]]></code>
      <code><![CDATA[$overrideValue]]></code>
    </MixedReturnStatement>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[! ($config['enabled'] ?? true)]]></code>
    </RiskyTruthyFalsyComparison>
  </file>
  <file src="app/Services/Security/Headers/StrictTransportSecurityHeaderStrategy.php">
    <ClassMustBeFinal>
      <code><![CDATA[StrictTransportSecurityHeaderStrategy]]></code>
    </ClassMustBeFinal>
    <MixedReturnStatement>
      <code><![CDATA[$config['enabled'] ?? true]]></code>
      <code><![CDATA[$config['enabled'] ?? true]]></code>
      <code><![CDATA[config(
            'security.headers.Strict-Transport-Security',
            $config['value'] ?? 'max-age=31536000; includeSubDomains; preload'
        )]]></code>
    </MixedReturnStatement>
  </file>
  <file src="app/Services/Security/SecurityHeaderConfiguration.php">
    <ClassMustBeFinal>
      <code><![CDATA[SecurityHeaderConfiguration]]></code>
    </ClassMustBeFinal>
    <MixedArgument>
      <code><![CDATA[$header]]></code>
      <code><![CDATA[$header]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code><![CDATA[$configHeaders]]></code>
      <code><![CDATA[$header]]></code>
      <code><![CDATA[$value]]></code>
    </MixedAssignment>
    <MixedPropertyTypeCoercion>
      <code><![CDATA[$this->getDefaultConfiguration()]]></code>
      <code><![CDATA[$this->headers]]></code>
    </MixedPropertyTypeCoercion>
    <MixedReturnStatement>
      <code><![CDATA[$this->headers[$header]['enabled'] ?? false]]></code>
      <code><![CDATA[$this->headers[$header]['enabled'] ?? false]]></code>
    </MixedReturnStatement>
    <PossiblyUnusedMethod>
      <code><![CDATA[disableHeader]]></code>
      <code><![CDATA[enableHeader]]></code>
      <code><![CDATA[isHeaderEnabled]]></code>
      <code><![CDATA[removeHeaderConfig]]></code>
    </PossiblyUnusedMethod>
  </file>
  <file src="app/Services/Security/SecurityHeadersService.php">
    <ClassMustBeFinal>
      <code><![CDATA[SecurityHeadersService]]></code>
    </ClassMustBeFinal>
    <MixedAssignment>
      <code><![CDATA[$overrideValue]]></code>
      <code><![CDATA[$pattern]]></code>
      <code><![CDATA[$value]]></code>
      <code><![CDATA[$value]]></code>
      <code><![CDATA[$value]]></code>
      <code><![CDATA[$viteHost]]></code>
    </MixedAssignment>
    <MixedReturnStatement>
      <code><![CDATA[config(
            'security.headers.Strict-Transport-Security',
            'max-age=31536000; includeSubDomains; preload'
        )]]></code>
    </MixedReturnStatement>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[$isLocal]]></code>
      <code><![CDATA[$isLocal]]></code>
    </RiskyTruthyFalsyComparison>
  </file>
  <file src="app/Services/Security/VirusScanner.php">
    <ClassMustBeFinal>
      <code><![CDATA[VirusScanner]]></code>
    </ClassMustBeFinal>
    <MixedAssignment>
      <code><![CDATA[$binary]]></code>
    </MixedAssignment>
  </file>
  <file src="app/Services/SecurityAnalysisService.php">
    <MixedAssignment>
      <code><![CDATA[$appUrl]]></code>
    </MixedAssignment>
    <UnusedClass>
      <code><![CDATA[SecurityAnalysisService]]></code>
    </UnusedClass>
  </file>
  <file src="app/Services/ShippingService.php">
    <UnusedClass>
      <code><![CDATA[ShippingService]]></code>
    </UnusedClass>
  </file>
  <file src="app/Services/StorageManagementService.php">
    <DocblockTypeContradiction>
      <code><![CDATA[is_string($file)]]></code>
    </DocblockTypeContradiction>
    <InvalidArgument>
      <code><![CDATA[[self::class, 'sortDirectoriesBySize']]]></code>
    </InvalidArgument>
    <InvalidOperand>
      <code><![CDATA[$maxMb * 1024]]></code>
      <code><![CDATA[$maxSize / 1024 / 1024]]></code>
      <code><![CDATA[$results['space_saved_mb'] += ($originalSize - $compressedSize) / 1024 / 1024]]></code>
      <code><![CDATA[$size / 1024 / 1024]]></code>
      <code><![CDATA[$size / 1024 / 1024]]></code>
      <code><![CDATA[$this->getDirectorySize($directory) / 1024 / 1024]]></code>
      <code><![CDATA[$totalSize / $maxSize * 100]]></code>
      <code><![CDATA[$totalSize / 1024 / 1024]]></code>
      <code><![CDATA[($originalSize - $compressedSize) / 1024 / 1024]]></code>
    </InvalidOperand>
    <InvalidReturnStatement>
      <code><![CDATA[[
                'cleanup_performed' => false,
                'reason' => 'No cleanup needed or auto cleanup disabled',
                'usage' => $usage->toArray(),
            ]]]></code>
    </InvalidReturnStatement>
    <LessSpecificReturnStatement>
      <code><![CDATA[$cleanupResults]]></code>
      <code><![CDATA[$recommendations]]></code>
      <code><![CDATA[$this->performAndReportCleanup($usage)]]></code>
    </LessSpecificReturnStatement>
    <MixedArgument>
      <code><![CDATA[$data]]></code>
      <code><![CDATA[$path]]></code>
      <code><![CDATA[$path]]></code>
      <code><![CDATA[$type]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code><![CDATA[$cleanupResults[$type]]]></code>
      <code><![CDATA[$config]]></code>
      <code><![CDATA[$data]]></code>
      <code><![CDATA[$file]]></code>
      <code><![CDATA[$file]]></code>
      <code><![CDATA[$file]]></code>
      <code><![CDATA[$file]]></code>
      <code><![CDATA[$filePath]]></code>
      <code><![CDATA[$path]]></code>
      <code><![CDATA[$results]]></code>
      <code><![CDATA[$total['files_compressed']]]></code>
      <code><![CDATA[$total['space_saved_mb']]]></code>
      <code><![CDATA[$type]]></code>
      <code><![CDATA[$zip]]></code>
    </MixedAssignment>
    <MixedMethodCall>
      <code><![CDATA[addFile]]></code>
      <code><![CDATA[close]]></code>
      <code><![CDATA[getRealPath]]></code>
      <code><![CDATA[isDir]]></code>
      <code><![CDATA[open]]></code>
    </MixedMethodCall>
    <MixedOperand>
      <code><![CDATA[$result['files_compressed']]]></code>
      <code><![CDATA[$result['space_saved_mb']]]></code>
    </MixedOperand>
    <MixedPropertyTypeCoercion>
      <code><![CDATA[is_array($config) ? $config : []]]></code>
    </MixedPropertyTypeCoercion>
    <MixedReturnStatement>
      <code><![CDATA[$results]]></code>
    </MixedReturnStatement>
    <MixedReturnTypeCoercion>
      <code><![CDATA[$breakdown]]></code>
      <code><![CDATA[$this->executeStorageOperation('archival', function (): array {
            return $this->executeArchival();
        }, [
            'files_archived' => 0,
            'archives_created' => 0,
            'space_saved_mb' => 0,
            'errors' => [],
        ])]]></code>
      <code><![CDATA[$this->executeStorageOperation('compression', function (): array {
            return $this->executeCompression();
        }, [
            'files_compressed' => 0,
            'space_saved_mb' => 0,
            'errors' => [],
        ])]]></code>
      <code><![CDATA[$total]]></code>
      <code><![CDATA[array<string, StorageBreakdown>]]></code>
      <code><![CDATA[array{
     *     archival_disabled?: bool,
     *     files_archived?: int,
     *     archives_created?: int,
     *     space_saved_mb?: float,
     *     errors?: list<string>
     * }]]></code>
      <code><![CDATA[array{
     *     compression_disabled?: bool,
     *     files_compressed?: int,
     *     space_saved_mb?: float,
     *     errors?: list<string>
     * }]]></code>
      <code><![CDATA[array{files_compressed: int, space_saved_mb: float}]]></code>
    </MixedReturnTypeCoercion>
    <MoreSpecificReturnType>
      <code><![CDATA[array{
     *     cleanup_performed: bool,
     *     reason?: string,
     *     usage?: array<string, int|float|string>,
     *     cleanup_results?: array<string, string|int|float>,
     *     usage_before?: array<string, int|float|string>,
     *     usage_after?: array<string, int|float|string>
     * }]]></code>
      <code><![CDATA[array{
     *     deleted_files: int,
     *     space_freed_mb: float,
     *     errors: list<string>
     * }]]></code>
      <code><![CDATA[list<array<string, string>>]]></code>
    </MoreSpecificReturnType>
    <PossiblyInvalidArgument>
      <code><![CDATA[$this->config['cleanup_priority'] ?? []]]></code>
    </PossiblyInvalidArgument>
    <RedundantCast>
      <code><![CDATA[(string) $name]]></code>
    </RedundantCast>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[is_array($breakdown)]]></code>
      <code><![CDATA[is_string($file)]]></code>
      <code><![CDATA[is_string($largestDir)]]></code>
    </RedundantConditionGivenDocblockType>
    <ReferenceConstraintViolation>
      <code><![CDATA[$cleanupResults]]></code>
    </ReferenceConstraintViolation>
    <RiskyCast>
      <code><![CDATA[$this->config['max_storage_size_mb'] ?? 1024.0]]></code>
    </RiskyCast>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[! ($this->config[$configKey] ?? false)]]></code>
      <code><![CDATA[! ($this->config['auto_cleanup'] ?? true)]]></code>
      <code><![CDATA[$newestFile]]></code>
      <code><![CDATA[$oldestFile]]></code>
    </RiskyTruthyFalsyComparison>
    <TypeDoesNotContainType>
      <code><![CDATA[! is_array($data)]]></code>
    </TypeDoesNotContainType>
    <UndefinedClass>
      <code><![CDATA[$this->logger]]></code>
      <code><![CDATA[$this->logger]]></code>
      <code><![CDATA[$this->logger]]></code>
      <code><![CDATA[$this->logger]]></code>
      <code><![CDATA[ZipArchive]]></code>
      <code><![CDATA[ZipArchive]]></code>
      <code><![CDATA[private]]></code>
    </UndefinedClass>
    <UnusedClass>
      <code><![CDATA[StorageManagementService]]></code>
    </UnusedClass>
    <UnusedDocblockParam>
      <code><![CDATA[$config]]></code>
    </UnusedDocblockParam>
  </file>
  <file src="app/Services/StoreAdapterManager.php">
    <InvalidReturnStatement>
      <code><![CDATA[$adapter->fetchProduct($productIdentifier)]]></code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code><![CDATA[array<string, string|int|float|null>|null]]></code>
    </InvalidReturnType>
    <PossiblyUnusedMethod>
      <code><![CDATA[__construct]]></code>
      <code><![CDATA[getAllAdapters]]></code>
      <code><![CDATA[getProductUrl]]></code>
      <code><![CDATA[getStatistics]]></code>
      <code><![CDATA[getSupportedStores]]></code>
      <code><![CDATA[isStoreSupported]]></code>
      <code><![CDATA[validateIdentifier]]></code>
    </PossiblyUnusedMethod>
  </file>
  <file src="app/Services/StoreAdapters/AmazonAdapter.php">
    <LessSpecificImplementedReturnType>
      <code><![CDATA[array<string, mixed>|null]]></code>
    </LessSpecificImplementedReturnType>
    <MixedArgumentTypeCoercion>
      <code><![CDATA[[
            'name' => data_get($amazonData, 'ItemInfo.Title.DisplayValue', ''),
            'price' => data_get($amazonData, 'Offers.Listings.0.Price.Amount', 0),
            'currency' => data_get($amazonData, 'Offers.Listings.0.Price.Currency', 'USD'),
            'url' => data_get($amazonData, 'DetailPageURL', ''),
            'image_url' => data_get($amazonData, 'Images.Primary.Large.URL'),
            'availability' => data_get($amazonData, 'Offers.Listings.0.Availability.Type', 'unknown'),
            'rating' => data_get($amazonData, 'CustomerReviews.StarRating.Value'),
            'reviews_count' => data_get($amazonData, 'CustomerReviews.Count'),
            'description' => data_get($amazonData, 'ItemInfo.Features.DisplayValues.0'),
            'brand' => data_get($amazonData, 'ItemInfo.ByLineInfo.Brand.DisplayValue'),
            'category' => data_get($amazonData, 'BrowseNodeInfo.BrowseNodes.0.DisplayName'),
            'metadata' => [
                'asin' => data_get($amazonData, 'ASIN', ''),
                'parent_asin' => data_get($amazonData, 'ParentASIN'),
            ],
        ]]]></code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment>
      <code><![CDATA[$apiKey]]></code>
      <code><![CDATA[$apiSecret]]></code>
      <code><![CDATA[$region]]></code>
    </MixedAssignment>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[$cached]]></code>
    </RiskyTruthyFalsyComparison>
  </file>
  <file src="app/Services/StoreAdapters/EbayAdapter.php">
    <DocblockTypeContradiction>
      <code><![CDATA[is_array($item)]]></code>
    </DocblockTypeContradiction>
    <MixedArgument>
      <code><![CDATA[data_get($item, 'SellingStatus.SellingState')]]></code>
    </MixedArgument>
    <MixedArgumentTypeCoercion>
      <code><![CDATA[$item]]></code>
      <code><![CDATA[[
            'name' => data_get($item, 'Title', ''),
            'price' => is_numeric($price) ? (float) $price : 0.0,
            'currency' => data_get($item, 'ConvertedCurrentPrice.CurrencyID', 'USD'),
            'url' => data_get($item, 'ViewItemURLForNaturalSearch', ''),
            'image_url' => data_get($item, 'GalleryURL'),
            'availability' => $this->mapEbayAvailability(data_get($item, 'SellingStatus.SellingState')),
            'rating' => null, // Not directly available
            'reviews_count' => null, // Not directly available
            'description' => data_get($item, 'Description'),
            'brand' => null, // Can be extracted from item specifics
            'category' => data_get($item, 'PrimaryCategoryName'),
            'metadata' => [
                'item_id' => data_get($item, 'ItemID', ''),
                'listing_type' => data_get($item, 'ListingType'),
                'condition' => data_get($item, 'ConditionDisplayName'),
                'end_time' => data_get($item, 'EndTime'),
                'seller' => data_get($item, 'Seller.UserID'),
            ],
        ]]]></code>
      <code><![CDATA[[
            'name' => data_get($item, 'title.0', ''),
            'price' => is_numeric($price) ? (float) $price : 0.0,
            'currency' => data_get($item, 'sellingStatus.0.currentPrice.0.@currencyId', 'USD'),
            'url' => data_get($item, 'viewItemURL.0', ''),
            'image_url' => data_get($item, 'galleryURL.0'),
            'availability' => 'in_stock', // Search results are typically for active items
            'rating' => null,
            'reviews_count' => null,
            'description' => null,
            'brand' => null,
            'category' => data_get($item, 'primaryCategory.0.categoryName.0'),
            'metadata' => [
                'item_id' => data_get($item, 'itemId.0', ''),
                'listing_type' => data_get($item, 'listingInfo.0.listingType.0'),
                'condition' => data_get($item, 'condition.0.conditionDisplayName.0'),
            ],
        ]]]></code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment>
      <code><![CDATA[$appId]]></code>
      <code><![CDATA[$price]]></code>
      <code><![CDATA[$price]]></code>
      <code><![CDATA[$searchResult]]></code>
    </MixedAssignment>
    <RedundantCondition>
      <code><![CDATA[$this->appId !== null]]></code>
    </RedundantCondition>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[$response]]></code>
    </RiskyTruthyFalsyComparison>
  </file>
  <file src="app/Services/StoreAdapters/NoonAdapter.php">
    <InvalidArgument>
      <code><![CDATA[$sku]]></code>
    </InvalidArgument>
    <MixedArgumentTypeCoercion>
      <code><![CDATA[$product]]></code>
      <code><![CDATA[$product]]></code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment>
      <code><![CDATA[$apiKey]]></code>
      <code><![CDATA[$country]]></code>
    </MixedAssignment>
    <PossiblyInvalidCast>
      <code><![CDATA[$sku]]></code>
    </PossiblyInvalidCast>
    <RedundantCondition>
      <code><![CDATA[$this->apiKey !== null]]></code>
    </RedundantCondition>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[$response]]></code>
      <code><![CDATA[$response]]></code>
    </RiskyTruthyFalsyComparison>
  </file>
  <file src="app/Services/StoreAdapters/StoreAdapter.php">
    <MixedAssignment>
      <code><![CDATA[$cached]]></code>
      <code><![CDATA[$data]]></code>
    </MixedAssignment>
    <MixedReturnTypeCoercion>
      <code><![CDATA[array<string, string|int|float|bool|array|null>|null]]></code>
      <code><![CDATA[array<string, string|int|float|bool|array|null>|null]]></code>
      <code><![CDATA[is_array($cached) ? $cached : null]]></code>
      <code><![CDATA[is_array($data) ? $data : null]]></code>
    </MixedReturnTypeCoercion>
    <PossiblyUnusedMethod>
      <code><![CDATA[getLastError]]></code>
    </PossiblyUnusedMethod>
  </file>
  <file src="app/Services/StoreClients/BaseStoreClient.php">
    <MissingReturnType>
      <code><![CDATA[makeRequest]]></code>
    </MissingReturnType>
    <MixedAssignment>
      <code><![CDATA[$response]]></code>
    </MixedAssignment>
    <MixedMethodCall>
      <code><![CDATA[getHandlerStat]]></code>
      <code><![CDATA[successful]]></code>
    </MixedMethodCall>
    <MixedPropertyFetch>
      <code><![CDATA[$response->transferStats]]></code>
    </MixedPropertyFetch>
    <MixedReturnTypeCoercion>
      <code><![CDATA[[
                'status' => $response->successful() ? 'online' : 'offline',
                'response_time' => $response->transferStats?->getHandlerStat('total_time') ?? 0,
            ]]]></code>
      <code><![CDATA[array<string, string|int|float>]]></code>
    </MixedReturnTypeCoercion>
  </file>
  <file src="app/Services/StoreClients/GenericStoreClient.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[[
            'q' => $query,
            'limit' => 20,
            'filters' => $filters,
        ]]]></code>
    </ArgumentTypeCoercion>
    <ClassMustBeFinal>
      <code><![CDATA[GenericStoreClient]]></code>
    </ClassMustBeFinal>
    <LessSpecificImplementedReturnType>
      <code><![CDATA[array<int, array<string, scalar|array|object|null>>]]></code>
      <code><![CDATA[array<string, scalar|array|object|null>|null]]></code>
    </LessSpecificImplementedReturnType>
    <MixedAssignment>
      <code><![CDATA[$data]]></code>
      <code><![CDATA[$data]]></code>
      <code><![CDATA[$data]]></code>
      <code><![CDATA[$data]]></code>
      <code><![CDATA[$data]]></code>
      <code><![CDATA[$data]]></code>
      <code><![CDATA[$productData]]></code>
      <code><![CDATA[$products]]></code>
      <code><![CDATA[$response]]></code>
      <code><![CDATA[$response]]></code>
      <code><![CDATA[$response]]></code>
    </MixedAssignment>
    <MixedMethodCall>
      <code><![CDATA[json]]></code>
      <code><![CDATA[json]]></code>
      <code><![CDATA[json]]></code>
      <code><![CDATA[successful]]></code>
      <code><![CDATA[successful]]></code>
      <code><![CDATA[successful]]></code>
    </MixedMethodCall>
    <MixedReturnStatement>
      <code><![CDATA[is_array($data) ? ($data['products'] ?? []) : []]]></code>
      <code><![CDATA[is_array($data) ? ($data['products'] ?? []) : []]]></code>
    </MixedReturnStatement>
    <MixedReturnTypeCoercion>
      <code><![CDATA[array<string, scalar|array|object|null>|null]]></code>
      <code><![CDATA[is_array($data) ? $data : null]]></code>
    </MixedReturnTypeCoercion>
  </file>
  <file src="app/Services/StoreClients/StoreClientFactory.php">
    <ClassMustBeFinal>
      <code><![CDATA[StoreClientFactory]]></code>
    </ClassMustBeFinal>
    <MixedArgumentTypeCoercion>
      <code><![CDATA[$config]]></code>
    </MixedArgumentTypeCoercion>
  </file>
  <file src="app/Services/SuspiciousActivityNotifier.php">
    <MissingClosureParamType>
      <code><![CDATA[$mail]]></code>
    </MissingClosureParamType>
    <MixedArrayAccess>
      <code><![CDATA[$notification['email']]]></code>
      <code><![CDATA[$notification['slack']]]></code>
      <code><![CDATA[$notification['webhook']]]></code>
    </MixedArrayAccess>
    <MixedAssignment>
      <code><![CDATA[$adminEmails]]></code>
      <code><![CDATA[$notification]]></code>
    </MixedAssignment>
    <MixedMethodCall>
      <code><![CDATA[subject]]></code>
      <code><![CDATA[to]]></code>
    </MixedMethodCall>
    <PossiblyFalseOperand>
      <code><![CDATA[json_encode($value, JSON_PRETTY_PRINT)]]></code>
    </PossiblyFalseOperand>
    <PossiblyUnusedMethod>
      <code><![CDATA[__construct]]></code>
    </PossiblyUnusedMethod>
  </file>
  <file src="app/Services/SuspiciousActivityService.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$activity]]></code>
      <code><![CDATA[$data]]></code>
    </ArgumentTypeCoercion>
    <InvalidArgument>
      <code><![CDATA[$activity]]></code>
    </InvalidArgument>
    <UnusedClass>
      <code><![CDATA[SuspiciousActivityService]]></code>
    </UnusedClass>
  </file>
  <file src="app/Services/TestAnalysisService.php">
    <InvalidOperand>
      <code><![CDATA[$coverage / 100]]></code>
    </InvalidOperand>
    <PossiblyUnusedMethod>
      <code><![CDATA[analyze]]></code>
      <code><![CDATA[create]]></code>
      <code><![CDATA[withCoverage]]></code>
    </PossiblyUnusedMethod>
  </file>
  <file src="app/Services/UserBanService.php">
    <DocblockTypeContradiction>
      <code><![CDATA[false]]></code>
      <code><![CDATA[false]]></code>
    </DocblockTypeContradiction>
    <MissingClosureParamType>
      <code><![CDATA[$query]]></code>
    </MissingClosureParamType>
    <MixedAssignment>
      <code><![CDATA[$bannedUsersQuery]]></code>
      <code><![CDATA[$expiredBans]]></code>
      <code><![CDATA[$permanentBans]]></code>
      <code><![CDATA[$temporaryBans]]></code>
      <code><![CDATA[$this->auth]]></code>
      <code><![CDATA[$this->logger]]></code>
      <code><![CDATA[$totalBanned]]></code>
    </MixedAssignment>
    <MixedClone>
      <code><![CDATA[clone $bannedUsersQuery]]></code>
      <code><![CDATA[clone $bannedUsersQuery]]></code>
      <code><![CDATA[clone $bannedUsersQuery]]></code>
    </MixedClone>
    <MixedMethodCall>
      <code><![CDATA[count]]></code>
      <code><![CDATA[count]]></code>
      <code><![CDATA[count]]></code>
      <code><![CDATA[count]]></code>
      <code><![CDATA[get]]></code>
      <code><![CDATA[get]]></code>
      <code><![CDATA[orWhere]]></code>
      <code><![CDATA[where]]></code>
      <code><![CDATA[where]]></code>
      <code><![CDATA[where]]></code>
      <code><![CDATA[whereNotNull]]></code>
      <code><![CDATA[whereNull]]></code>
      <code><![CDATA[whereNull]]></code>
    </MixedMethodCall>
    <MixedReturnStatement>
      <code><![CDATA[$this->user->where('is_blocked', true)
            ->where('ban_expires_at', '<=', now())
            ->get()]]></code>
      <code><![CDATA[$this->user->where('is_blocked', true)
            ->where(static function ($query): void {
                $query->whereNull('ban_expires_at')
                    ->orWhere('ban_expires_at', '>', now());
            })
            ->get()]]></code>
    </MixedReturnStatement>
    <MixedReturnTypeCoercion>
      <code><![CDATA[[
            'total_banned' => $totalBanned,
            'permanent_bans' => $permanentBans,
            'temporary_bans' => $temporaryBans,
            'expired_bans' => $expiredBans,
            'ban_reasons' => self::BAN_REASONS,
        ]]]></code>
      <code><![CDATA[array<string, int|array<string, string>>]]></code>
    </MixedReturnTypeCoercion>
    <PossiblyUnusedMethod>
      <code><![CDATA[__construct]]></code>
      <code><![CDATA[banUser]]></code>
      <code><![CDATA[canBanUser]]></code>
      <code><![CDATA[canUnbanUser]]></code>
      <code><![CDATA[cleanupExpiredBans]]></code>
      <code><![CDATA[extendBan]]></code>
      <code><![CDATA[getBanHistory]]></code>
      <code><![CDATA[getBanInfo]]></code>
      <code><![CDATA[getBanReasons]]></code>
      <code><![CDATA[isUserBanned]]></code>
      <code><![CDATA[reduceBan]]></code>
    </PossiblyUnusedMethod>
    <RedundantCastGivenDocblockType>
      <code><![CDATA[(bool) ($user->is_blocked ?? false)]]></code>
      <code><![CDATA[(bool) ($user->is_blocked ?? false)]]></code>
    </RedundantCastGivenDocblockType>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[$user->is_blocked]]></code>
      <code><![CDATA[$user->is_blocked]]></code>
    </RedundantConditionGivenDocblockType>
    <UndefinedMagicMethod>
      <code><![CDATA[where]]></code>
      <code><![CDATA[where]]></code>
      <code><![CDATA[where]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Services/Validators/PriceChangeValidator.php">
    <ClassMustBeFinal>
      <code><![CDATA[PriceChangeValidator]]></code>
    </ClassMustBeFinal>
    <InvalidOperand>
      <code><![CDATA[abs($newPriceFloat - $oldPriceFloat) / $oldPriceFloat * 100]]></code>
    </InvalidOperand>
    <RedundantCondition>
      <code><![CDATA[$product instanceof \App\Models\Product]]></code>
    </RedundantCondition>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[$oldPrice]]></code>
    </RiskyTruthyFalsyComparison>
  </file>
  <file src="app/Services/WebhookService.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$payload['currency'] ?? 'USD']]></code>
      <code><![CDATA[[
            'in_stock' => $inStock,
            'quantity' => $quantity,
        ]]]></code>
    </ArgumentTypeCoercion>
    <DocblockTypeContradiction>
      <code><![CDATA[is_array($payload)]]></code>
      <code><![CDATA[is_array($storePrices)]]></code>
    </DocblockTypeContradiction>
    <InvalidArgument>
      <code><![CDATA[$updates]]></code>
      <code><![CDATA[[
            'new_price' => $newPrice,
        ]]]></code>
    </InvalidArgument>
    <InvalidArrayAccess>
      <code><![CDATA[$payload['description']]]></code>
      <code><![CDATA[$payload['image_url']]]></code>
      <code><![CDATA[$payload['title']]]></code>
    </InvalidArrayAccess>
    <MixedArgument>
      <code><![CDATA[$pendingDispatch]]></code>
      <code><![CDATA[$secret]]></code>
      <code><![CDATA[$webhook]]></code>
    </MixedArgument>
    <MixedArgumentTypeCoercion>
      <code><![CDATA[[
                'product_id' => $product->id,
            ]]]></code>
    </MixedArgumentTypeCoercion>
    <MixedArrayAccess>
      <code><![CDATA[$payload['name']]]></code>
    </MixedArrayAccess>
    <MixedAssignment>
      <code><![CDATA[$completed]]></code>
      <code><![CDATA[$failed]]></code>
      <code><![CDATA[$pending]]></code>
      <code><![CDATA[$pendingDispatch]]></code>
      <code><![CDATA[$processing]]></code>
      <code><![CDATA[$product]]></code>
      <code><![CDATA[$product]]></code>
      <code><![CDATA[$secret]]></code>
      <code><![CDATA[$storeStock]]></code>
      <code><![CDATA[$total]]></code>
      <code><![CDATA[$updates['description']]]></code>
      <code><![CDATA[$updates['image_url']]]></code>
      <code><![CDATA[$updates['name']]]></code>
      <code><![CDATA[$webhook]]></code>
      <code><![CDATA[$webhook]]></code>
    </MixedAssignment>
    <MixedMethodCall>
      <code><![CDATA[addLog]]></code>
      <code><![CDATA[count]]></code>
      <code><![CDATA[count]]></code>
      <code><![CDATA[count]]></code>
      <code><![CDATA[count]]></code>
      <code><![CDATA[count]]></code>
      <code><![CDATA[first]]></code>
      <code><![CDATA[where]]></code>
      <code><![CDATA[where]]></code>
      <code><![CDATA[where]]></code>
      <code><![CDATA[where]]></code>
    </MixedMethodCall>
    <MixedPropertyFetch>
      <code><![CDATA[$product->id]]></code>
    </MixedPropertyFetch>
    <MixedReturnStatement>
      <code><![CDATA[$product]]></code>
      <code><![CDATA[$webhook]]></code>
      <code><![CDATA[$webhook]]></code>
    </MixedReturnStatement>
    <MixedReturnTypeCoercion>
      <code><![CDATA[$updates]]></code>
      <code><![CDATA[[
            'total' => $total,
            'pending' => $pending,
            'processing' => $processing,
            'completed' => $completed,
            'failed' => $failed,
        ]]]></code>
      <code><![CDATA[array<string, scalar|array|null>]]></code>
      <code><![CDATA[array{
     *     total: int,
     *     pending: int,
     *     processing: int,
     *     completed: int,
     *     failed: int
     * }]]></code>
    </MixedReturnTypeCoercion>
    <PossiblyUnusedMethod>
      <code><![CDATA[__construct]]></code>
      <code><![CDATA[getStatistics]]></code>
    </PossiblyUnusedMethod>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[! $newPrice]]></code>
      <code><![CDATA[! app()->environment('testing')]]></code>
      <code><![CDATA[! app()->environment('testing')]]></code>
      <code><![CDATA[$webhook->signature]]></code>
    </RiskyTruthyFalsyComparison>
    <UndefinedMagicMethod>
      <code><![CDATA[create]]></code>
      <code><![CDATA[create]]></code>
      <code><![CDATA[create]]></code>
      <code><![CDATA[where]]></code>
      <code><![CDATA[where]]></code>
      <code><![CDATA[where]]></code>
      <code><![CDATA[where]]></code>
      <code><![CDATA[where]]></code>
      <code><![CDATA[whereJsonContains]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="app/Traits/HasEnumUtilities.php">
    <PossiblyUnusedMethod>
      <code><![CDATA[toArray]]></code>
      <code><![CDATA[toArray]]></code>
      <code><![CDATA[toArray]]></code>
    </PossiblyUnusedMethod>
  </file>
  <file src="app/View/Composers/AppComposer.php">
    <DocblockTypeContradiction>
      <code><![CDATA['']]></code>
      <code><![CDATA['']]></code>
      <code><![CDATA['']]></code>
      <code><![CDATA['']]></code>
      <code><![CDATA['']]></code>
      <code><![CDATA['']]></code>
      <code><![CDATA['']]></code>
      <code><![CDATA['ltr']]></code>
      <code><![CDATA[[]]]></code>
    </DocblockTypeContradiction>
    <InvalidTemplateParam>
      <code><![CDATA[$collection->map($mapper)]]></code>
    </InvalidTemplateParam>
    <MixedArgumentTypeCoercion>
      <code><![CDATA[$mapper]]></code>
    </MixedArgumentTypeCoercion>
    <MixedMethodCall>
      <code><![CDATA[$modelClass::where('is_active', true)]]></code>
    </MixedMethodCall>
    <PossiblyUnusedMethod>
      <code><![CDATA[compose]]></code>
    </PossiblyUnusedMethod>
    <RedundantCastGivenDocblockType>
      <code><![CDATA[(int) $brand->id]]></code>
      <code><![CDATA[(int) $category->id]]></code>
    </RedundantCastGivenDocblockType>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[$brand->name]]></code>
      <code><![CDATA[$brand->slug]]></code>
      <code><![CDATA[$category->name]]></code>
      <code><![CDATA[$category->slug]]></code>
      <code><![CDATA[$language->code]]></code>
      <code><![CDATA[$language->direction]]></code>
      <code><![CDATA[$language->name]]></code>
      <code><![CDATA[$language->native_name]]></code>
      <code><![CDATA[is_array($result)]]></code>
    </RedundantConditionGivenDocblockType>
    <RedundantFunctionCallGivenDocblockType>
      <code><![CDATA[array_values]]></code>
    </RedundantFunctionCallGivenDocblockType>
  </file>
  <file src="app/_ide_helper_cart.php">
    <ClassMustBeFinal>
      <code><![CDATA[CartFacade]]></code>
    </ClassMustBeFinal>
  </file>
  <file src="config/broadcasting.php">
    <MixedOperand>
      <code><![CDATA[env('PUSHER_APP_CLUSTER', 'mt1')]]></code>
    </MixedOperand>
  </file>
  <file src="config/cdn.php">
    <MixedArgument>
      <code><![CDATA[env('CDN_URLS', '')]]></code>
    </MixedArgument>
  </file>
  <file src="config/filesystems.php">
    <MixedOperand>
      <code><![CDATA[env('APP_URL')]]></code>
    </MixedOperand>
  </file>
  <file src="config/insights.php">
    <MissingDependency>
      <code><![CDATA[AlphabeticallySortedUsesSniff]]></code>
      <code><![CDATA[DeclareStrictTypesSniff]]></code>
      <code><![CDATA[DisallowMixedTypeHintSniff]]></code>
      <code><![CDATA[ParameterTypeHintSniff]]></code>
      <code><![CDATA[PropertyTypeHintSniff]]></code>
      <code><![CDATA[ReturnTypeHintSniff]]></code>
      <code><![CDATA[UselessFunctionDocCommentSniff]]></code>
      <code><![CDATA[\SlevomatCodingStandard\Sniffs\Commenting\DocCommentSpacingSniff]]></code>
      <code><![CDATA[\SlevomatCodingStandard\Sniffs\Functions\StaticClosureSniff]]></code>
    </MissingDependency>
  </file>
  <file src="config/logging.php">
    <MixedOperand>
      <code><![CDATA[env('PAPERTRAIL_PORT')]]></code>
      <code><![CDATA[env('PAPERTRAIL_URL')]]></code>
    </MixedOperand>
  </file>
  <file src="config/security.php">
    <MixedOperand>
      <code><![CDATA[env('HSTS_MAX_AGE', 31536000)]]></code>
    </MixedOperand>
  </file>
  <file src="database/factories/AnalyticsEventFactory.php">
    <ClassMustBeFinal>
      <code><![CDATA[AnalyticsEventFactory]]></code>
    </ClassMustBeFinal>
    <UnusedClass>
      <code><![CDATA[AnalyticsEventFactory]]></code>
    </UnusedClass>
  </file>
  <file src="database/factories/AuditLogFactory.php">
    <ClassMustBeFinal>
      <code><![CDATA[AuditLogFactory]]></code>
    </ClassMustBeFinal>
    <UnusedClass>
      <code><![CDATA[AuditLogFactory]]></code>
    </UnusedClass>
  </file>
  <file src="database/factories/BrandFactory.php">
    <ClassMustBeFinal>
      <code><![CDATA[BrandFactory]]></code>
    </ClassMustBeFinal>
  </file>
  <file src="database/factories/CategoryFactory.php">
    <ClassMustBeFinal>
      <code><![CDATA[CategoryFactory]]></code>
    </ClassMustBeFinal>
  </file>
  <file src="database/factories/CurrencyFactory.php">
    <ClassMustBeFinal>
      <code><![CDATA[CurrencyFactory]]></code>
    </ClassMustBeFinal>
  </file>
  <file src="database/factories/ExchangeRateFactory.php">
    <ClassMustBeFinal>
      <code><![CDATA[ExchangeRateFactory]]></code>
    </ClassMustBeFinal>
    <UnusedClass>
      <code><![CDATA[ExchangeRateFactory]]></code>
    </UnusedClass>
  </file>
  <file src="database/factories/LanguageFactory.php">
    <ClassMustBeFinal>
      <code><![CDATA[LanguageFactory]]></code>
    </ClassMustBeFinal>
    <MixedAssignment>
      <code><![CDATA[$name]]></code>
      <code><![CDATA[$nativeName]]></code>
    </MixedAssignment>
  </file>
  <file src="database/factories/NotificationFactory.php">
    <ClassMustBeFinal>
      <code><![CDATA[NotificationFactory]]></code>
    </ClassMustBeFinal>
    <InvalidReturnStatement>
      <code><![CDATA[[
            'user_id' => \App\Models\User::factory(),
            'type' => $this->faker->randomElement(['info', 'warning', 'error', 'success']),
            'title' => $this->faker->sentence(3),
            'message' => $this->faker->paragraph(2),
            'data' => [
                'key' => $this->faker->word,
                'value' => $this->faker->sentence,
            ],
            'read_at' => null,
            'sent_at' => null,
            'priority' => $this->faker->numberBetween(1, 5),
            'channel' => $this->faker->randomElement(['email', 'sms', 'push', 'database']),
            'status' => $this->faker->randomElement(['pending', 'sent', 'failed']),
            'metadata' => [
                'source' => $this->faker->word,
                'timestamp' => $this->faker->unixTime,
            ],
            'tags' => $this->faker->words(3),
        ]]]></code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code><![CDATA[array{user_id: 1, type: mixed, title: string, message: string, data: array{key: string, value: string}, read_at: null, sent_at: null, priority: int, channel: mixed, status: mixed, metadata: array{source: string, timestamp: int}, tags: array|string}]]></code>
    </InvalidReturnType>
    <PossiblyUnusedMethod>
      <code><![CDATA[read]]></code>
    </PossiblyUnusedMethod>
    <UnusedClosureParam>
      <code><![CDATA[$attributes]]></code>
    </UnusedClosureParam>
  </file>
  <file src="database/factories/OrderFactory.php">
    <ClassMustBeFinal>
      <code><![CDATA[OrderFactory]]></code>
    </ClassMustBeFinal>
    <UnusedClass>
      <code><![CDATA[OrderFactory]]></code>
    </UnusedClass>
  </file>
  <file src="database/factories/OrderItemFactory.php">
    <ClassMustBeFinal>
      <code><![CDATA[OrderItemFactory]]></code>
    </ClassMustBeFinal>
    <InvalidOperand>
      <code><![CDATA[$quantity * $unitPrice]]></code>
    </InvalidOperand>
    <UnusedClass>
      <code><![CDATA[OrderItemFactory]]></code>
    </UnusedClass>
  </file>
  <file src="database/factories/PaymentFactory.php">
    <ClassMustBeFinal>
      <code><![CDATA[PaymentFactory]]></code>
    </ClassMustBeFinal>
    <UnusedClass>
      <code><![CDATA[PaymentFactory]]></code>
    </UnusedClass>
  </file>
  <file src="database/factories/PaymentMethodFactory.php">
    <ClassMustBeFinal>
      <code><![CDATA[PaymentMethodFactory]]></code>
    </ClassMustBeFinal>
    <PossiblyUnusedMethod>
      <code><![CDATA[default]]></code>
      <code><![CDATA[inactive]]></code>
    </PossiblyUnusedMethod>
  </file>
  <file src="database/factories/PriceAlertFactory.php">
    <ClassMustBeFinal>
      <code><![CDATA[PriceAlertFactory]]></code>
    </ClassMustBeFinal>
    <UndefinedMagicPropertyFetch>
      <code><![CDATA[Product::factory()->create()->id]]></code>
    </UndefinedMagicPropertyFetch>
  </file>
  <file src="database/factories/PriceHistoryFactory.php">
    <ClassMustBeFinal>
      <code><![CDATA[PriceHistoryFactory]]></code>
    </ClassMustBeFinal>
    <UnusedClass>
      <code><![CDATA[PriceHistoryFactory]]></code>
    </UnusedClass>
  </file>
  <file src="database/factories/PriceOfferFactory.php">
    <ClassMustBeFinal>
      <code><![CDATA[PriceOfferFactory]]></code>
    </ClassMustBeFinal>
  </file>
  <file src="database/factories/ProductFactory.php">
    <ClassMustBeFinal>
      <code><![CDATA[ProductFactory]]></code>
    </ClassMustBeFinal>
  </file>
  <file src="database/factories/ReviewFactory.php">
    <ClassMustBeFinal>
      <code><![CDATA[ReviewFactory]]></code>
    </ClassMustBeFinal>
  </file>
  <file src="database/factories/RewardFactory.php">
    <ClassMustBeFinal>
      <code><![CDATA[RewardFactory]]></code>
    </ClassMustBeFinal>
    <PossiblyUnusedMethod>
      <code><![CDATA[expired]]></code>
      <code><![CDATA[future]]></code>
      <code><![CDATA[inactive]]></code>
    </PossiblyUnusedMethod>
  </file>
  <file src="database/factories/StoreFactory.php">
    <ClassMustBeFinal>
      <code><![CDATA[StoreFactory]]></code>
    </ClassMustBeFinal>
  </file>
  <file src="database/factories/UserFactory.php">
    <ClassMustBeFinal>
      <code><![CDATA[UserFactory]]></code>
    </ClassMustBeFinal>
    <UndefinedDocblockClass>
      <code><![CDATA[array{name: string, email: string, email_verified_at: \Illuminate\Support\Carbon, password: string, phone: null, is_admin: false, is_active: true, is_blocked: false, role: App\Enums\UserRole::USER}]]></code>
    </UndefinedDocblockClass>
  </file>
  <file src="database/factories/UserLocaleSettingFactory.php">
    <ClassMustBeFinal>
      <code><![CDATA[UserLocaleSettingFactory]]></code>
    </ClassMustBeFinal>
  </file>
  <file src="database/factories/UserPointFactory.php">
    <ClassMustBeFinal>
      <code><![CDATA[UserPointFactory]]></code>
    </ClassMustBeFinal>
    <UnusedClass>
      <code><![CDATA[UserPointFactory]]></code>
    </UnusedClass>
  </file>
  <file src="database/factories/WebhookFactory.php">
    <ClassMustBeFinal>
      <code><![CDATA[WebhookFactory]]></code>
    </ClassMustBeFinal>
    <UnusedClass>
      <code><![CDATA[WebhookFactory]]></code>
    </UnusedClass>
  </file>
  <file src="database/factories/WebhookLogFactory.php">
    <ClassMustBeFinal>
      <code><![CDATA[WebhookLogFactory]]></code>
    </ClassMustBeFinal>
    <UnusedClass>
      <code><![CDATA[WebhookLogFactory]]></code>
    </UnusedClass>
  </file>
  <file src="database/factories/WishlistFactory.php">
    <ClassMustBeFinal>
      <code><![CDATA[WishlistFactory]]></code>
    </ClassMustBeFinal>
  </file>
  <file src="database/migrations/2018_08_08_100000_create_telescope_entries_table.php">
    <MixedAssignment>
      <code><![CDATA[$connection]]></code>
    </MixedAssignment>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[app()->environment('testing')]]></code>
      <code><![CDATA[app()->environment('testing')]]></code>
      <code><![CDATA[app()->environment('testing')]]></code>
    </RiskyTruthyFalsyComparison>
  </file>
  <file src="database/migrations/2025_09_14_065423_create_permission_tables.php">
    <MixedArgument>
      <code><![CDATA[$modelHasPermissionsTable]]></code>
      <code><![CDATA[$modelHasRolesTable]]></code>
      <code><![CDATA[$permissionsTable]]></code>
      <code><![CDATA[$roleHasPermissionsTable]]></code>
      <code><![CDATA[$rolesTable]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code><![CDATA[$columnNames]]></code>
      <code><![CDATA[$modelHasPermissionsTable]]></code>
      <code><![CDATA[$modelHasRolesTable]]></code>
      <code><![CDATA[$permissionsTable]]></code>
      <code><![CDATA[$pivotPermission]]></code>
      <code><![CDATA[$pivotRole]]></code>
      <code><![CDATA[$roleHasPermissionsTable]]></code>
      <code><![CDATA[$rolesTable]]></code>
      <code><![CDATA[$tableNames]]></code>
      <code><![CDATA[$tableNames]]></code>
    </MixedAssignment>
    <UnevaluatedCode>
      <code><![CDATA[$cacheKey = config('permission.cache.key');]]></code>
      <code><![CDATA[$cacheStore = config('permission.cache.store');]]></code>
      <code><![CDATA[$keyParam = is_string($cacheKey) ? $cacheKey : 'spatie.permission.cache';]]></code>
      <code><![CDATA[$modelHasPermissionsTable = is_string($tableNames['model_has_permissions'] ?? null) ? $tableNames['model_has_permissions'] : 'model_has_permissions';]]></code>
      <code><![CDATA[$modelHasRolesTable = is_string($tableNames['model_has_roles'] ?? null) ? $tableNames['model_has_roles'] : 'model_has_roles';]]></code>
      <code><![CDATA[$permissionsTable = is_string($tableNames['permissions'] ?? null) ? $tableNames['permissions'] : 'permissions';]]></code>
      <code><![CDATA[$roleHasPermissionsTable = is_string($tableNames['role_has_permissions'] ?? null) ? $tableNames['role_has_permissions'] : 'role_has_permissions';]]></code>
      <code><![CDATA[$rolesTable = is_string($tableNames['roles'] ?? null) ? $tableNames['roles'] : 'roles';]]></code>
      <code><![CDATA[$storeParam = is_string($cacheStore) && $cacheStore !== 'default' ? $cacheStore : null;]]></code>
      <code><![CDATA[$teamForeignKey = is_string($columnNames['team_foreign_key'] ?? null) ? $columnNames['team_foreign_key'] : null;]]></code>
      <code><![CDATA[Schema::create($modelHasPermissionsTable, static function (Blueprint $table) use ($permissionsTable, $columnNames, $pivotPermission, $teams): void {
            $table->unsignedBigInteger($pivotPermission);

            $table->string('model_type');
            $modelMorphKey = is_string($columnNames['model_morph_key'] ?? null) ? $columnNames['model_morph_key'] : 'model_id';
            $table->unsignedBigInteger($modelMorphKey);
            $table->index([$modelMorphKey, 'model_type'], 'model_has_permissions_model_id_model_type_index');

            $table->foreign($pivotPermission)
                ->references('id') // permission id
                ->on($permissionsTable)
                ->onDelete('cascade');
            if ($teams) {
                $teamForeignKey = is_string($columnNames['team_foreign_key'] ?? null) ? $columnNames['team_foreign_key'] : 'team_id';
                $table->unsignedBigInteger($teamForeignKey);
                $table->index($teamForeignKey, 'model_has_permissions_team_foreign_key_index');

                $table->primary(
                    [$teamForeignKey, $pivotPermission, $modelMorphKey, 'model_type'],
                    'model_has_permissions_permission_model_type_primary'
                );
            } else {
                $table->primary(
                    [$pivotPermission, $modelMorphKey, 'model_type'],
                    'model_has_permissions_permission_model_type_primary'
                );
            }
        });]]></code>
      <code><![CDATA[Schema::create($modelHasRolesTable, static function (Blueprint $table) use ($rolesTable, $columnNames, $pivotRole, $teams): void {
            $pivotRoleColumn = $pivotRole;
            $table->unsignedBigInteger($pivotRoleColumn);

            $table->string('model_type');
            $modelMorphKey = is_string($columnNames['model_morph_key'] ?? null) ? $columnNames['model_morph_key'] : 'model_id';
            $table->unsignedBigInteger($modelMorphKey);
            $table->index([$modelMorphKey, 'model_type'], 'model_has_roles_model_id_model_type_index');

            $table->foreign($pivotRoleColumn)
                ->references('id') // role id
                ->on($rolesTable)
                ->onDelete('cascade');
            if ($teams) {
                $teamForeignKey = is_string($columnNames['team_foreign_key'] ?? null) ? $columnNames['team_foreign_key'] : 'team_id';
                $table->unsignedBigInteger($teamForeignKey);
                $table->index($teamForeignKey, 'model_has_roles_team_foreign_key_index');

                $table->primary(
                    [$teamForeignKey, $pivotRoleColumn, $modelMorphKey, 'model_type'],
                    'model_has_roles_role_model_type_primary'
                );
            } else {
                $table->primary(
                    [$pivotRoleColumn, $modelMorphKey, 'model_type'],
                    'model_has_roles_role_model_type_primary'
                );
            }
        });]]></code>
      <code><![CDATA[Schema::create($permissionsTable, static function (Blueprint $table): void {
            // $table->engine('InnoDB');
            $table->bigIncrements('id'); // permission id
            $table->string('name');       // For MyISAM use string('name', 225); // (or 166 for InnoDB with Redundant/Compact row format)
            $table->string('guard_name'); // For MyISAM use string('guard_name', 25);
            $table->timestamps();

            $table->unique(['name', 'guard_name']);
        });]]></code>
      <code><![CDATA[Schema::create($roleHasPermissionsTable, static function (Blueprint $table) use ($permissionsTable, $rolesTable, $pivotRole, $pivotPermission): void {
            $pivotPermissionStr = $pivotPermission;
            $pivotRoleStr = $pivotRole;

            $table->unsignedBigInteger($pivotPermissionStr);
            $table->unsignedBigInteger($pivotRoleStr);

            $table->foreign($pivotPermissionStr)
                ->references('id') // permission id
                ->on($permissionsTable)
                ->onDelete('cascade');

            $table->foreign($pivotRoleStr)
                ->references('id') // role id
                ->on($rolesTable)
                ->onDelete('cascade');

            $table->primary([$pivotPermissionStr, $pivotRoleStr], 'role_has_permissions_permission_id_role_id_primary');
        });]]></code>
      <code><![CDATA[Schema::create($rolesTable, static function (Blueprint $table) use ($teams, $columnNames): void {
            // $table->engine('InnoDB');
            $table->bigIncrements('id'); // role id
            $testing = config('permission.testing');
            if ($teams || $testing) { // permission.testing is a fix for sqlite testing
                $teamForeignKey = is_string($columnNames['team_foreign_key'] ?? null) ? $columnNames['team_foreign_key'] : 'team_id';
                $table->unsignedBigInteger($teamForeignKey)->nullable();
                $table->index($teamForeignKey, 'roles_team_foreign_key_index');
            }
            $table->string('name');       // For MyISAM use string('name', 225); // (or 166 for InnoDB with Redundant/Compact row format)
            $table->string('guard_name'); // For MyISAM use string('guard_name', 25);
            $table->timestamps();
            if ($teams || $testing) {
                $teamForeignKey = is_string($columnNames['team_foreign_key'] ?? null) ? $columnNames['team_foreign_key'] : 'team_id';
                $table->unique([$teamForeignKey, 'name', 'guard_name']);
            } else {
                $table->unique(['name', 'guard_name']);
            }
        });]]></code>
      <code><![CDATA[app('cache')
            ->store($storeParam)
            ->forget($keyParam);]]></code>
      <code><![CDATA[throw_if($teams && empty($teamForeignKey), new \Exception('Error: team_foreign_key on config/permission.php not loaded. Run [php artisan config:clear] and try again.'));]]></code>
    </UnevaluatedCode>
    <UnusedVariable>
      <code><![CDATA[$pivotPermission]]></code>
      <code><![CDATA[$pivotRole]]></code>
      <code><![CDATA[$teams]]></code>
    </UnusedVariable>
  </file>
  <file src="database/migrations/2025_10_09_163500_add_currency_id_to_products_table.php">
    <RedundantCondition>
      <code><![CDATA[method_exists($table, 'foreignId')]]></code>
    </RedundantCondition>
  </file>
  <file src="database/seeders/BrandSeeder.php">
    <ClassMustBeFinal>
      <code><![CDATA[BrandSeeder]]></code>
    </ClassMustBeFinal>
  </file>
  <file src="database/seeders/CategorySeeder.php">
    <ClassMustBeFinal>
      <code><![CDATA[CategorySeeder]]></code>
    </ClassMustBeFinal>
  </file>
  <file src="database/seeders/DatabaseSeeder.php">
    <ClassMustBeFinal>
      <code><![CDATA[DatabaseSeeder]]></code>
    </ClassMustBeFinal>
    <UnusedClass>
      <code><![CDATA[DatabaseSeeder]]></code>
    </UnusedClass>
  </file>
  <file src="database/seeders/ExchangeRateSeeder.php">
    <ClassMustBeFinal>
      <code><![CDATA[ExchangeRateSeeder]]></code>
    </ClassMustBeFinal>
    <UnusedClass>
      <code><![CDATA[ExchangeRateSeeder]]></code>
    </UnusedClass>
  </file>
  <file src="database/seeders/LanguagesAndCurrenciesSeeder.php">
    <ClassMustBeFinal>
      <code><![CDATA[LanguagesAndCurrenciesSeeder]]></code>
    </ClassMustBeFinal>
  </file>
  <file src="database/seeders/PriceOfferSeeder.php">
    <ClassMustBeFinal>
      <code><![CDATA[PriceOfferSeeder]]></code>
    </ClassMustBeFinal>
  </file>
  <file src="database/seeders/ProductSeeder.php">
    <ClassMustBeFinal>
      <code><![CDATA[ProductSeeder]]></code>
    </ClassMustBeFinal>
  </file>
  <file src="database/seeders/StoreSeeder.php">
    <ClassMustBeFinal>
      <code><![CDATA[StoreSeeder]]></code>
    </ClassMustBeFinal>
  </file>
  <file src="routes/api.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$validated['products']]]></code>
    </ArgumentTypeCoercion>
    <MissingClosureReturnType>
      <code><![CDATA[function () {]]></code>
    </MissingClosureReturnType>
    <MixedMethodCall>
      <code><![CDATA[count]]></code>
      <code><![CDATA[count]]></code>
    </MixedMethodCall>
    <PossiblyFalseOperand>
      <code><![CDATA[strtotime('2025-01-01 00:00:00')]]></code>
    </PossiblyFalseOperand>
    <PossiblyInvalidMethodCall>
      <code><![CDATA[name]]></code>
    </PossiblyInvalidMethodCall>
    <UndefinedMagicMethod>
      <code><![CDATA[\App\Models\PriceOffer::count()]]></code>
      <code><![CDATA[\App\Models\Product::count()]]></code>
      <code><![CDATA[\App\Models\Product::whereDate('created_at', today())]]></code>
      <code><![CDATA[\App\Models\Review::count()]]></code>
      <code><![CDATA[\App\Models\User::count()]]></code>
      <code><![CDATA[\App\Models\User::whereDate('created_at', today())]]></code>
    </UndefinedMagicMethod>
  </file>
  <file src="routes/channels.php">
    <RedundantCastGivenDocblockType>
      <code><![CDATA[(int) $user->id]]></code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="routes/console.php">
    <InvalidScope>
      <code><![CDATA[$this]]></code>
    </InvalidScope>
  </file>
  <file src="routes/web.php">
    <PossiblyInvalidMethodCall>
      <code><![CDATA[name]]></code>
      <code><![CDATA[name]]></code>
      <code><![CDATA[name]]></code>
      <code><![CDATA[name]]></code>
      <code><![CDATA[name]]></code>
      <code><![CDATA[name]]></code>
      <code><![CDATA[name]]></code>
      <code><![CDATA[name]]></code>
      <code><![CDATA[name]]></code>
      <code><![CDATA[name]]></code>
      <code><![CDATA[name]]></code>
      <code><![CDATA[name]]></code>
    </PossiblyInvalidMethodCall>
  </file>
</files>
