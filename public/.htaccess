# Laravel .htaccess - Hostinger Optimized

<IfModule mod_rewrite.c>
    <IfModule mod_negotiation.c>
        Options -MultiViews -Indexes
    </IfModule>

    RewriteEngine On

    # Force HTTPS
    RewriteCond %{HTTPS} off
    RewriteRule ^(.*)$ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]

    # Handle Authorization Header
    RewriteCond %{HTTP:Authorization} .
    RewriteRule .* - [E=HTTP_AUTHORIZATION:%{HTTP:Authorization}]

    # Redirect Trailing Slashes If Not A Folder...
    RewriteCond %{REQUEST_FILENAME} !-d
    RewriteCond %{REQUEST_URI} (.+)/$
    RewriteRule ^ %1 [L,R=301]

    # Send Requests To Front Controller...
    RewriteCond %{REQUEST_FILENAME} !-d
    RewriteCond %{REQUEST_FILENAME} !-f
    RewriteRule ^ index.php [L]
</IfModule>

# Security Headers
<IfModule mod_headers.c>
    # Force HTTPS
    Header always set Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"

    # Prevent Clickjacking
    Header always set X-Frame-Options "SAMEORIGIN"

    # Prevent MIME Type Sniffing
    Header always set X-Content-Type-Options "nosniff"

    # XSS Protection
    Header always set X-XSS-Protection "1; mode=block"

    # Referrer Policy
    Header always set Referrer-Policy "strict-origin-when-cross-origin"

    # Content Security Policy
    Header always set Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net https://cdnjs.cloudflare.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self'; frame-ancestors 'self';"

    # Permissions Policy
    Header always set Permissions-Policy "geolocation=(), microphone=(), camera=(), payment=(), usb=(), magnetometer=(), gyroscope=(), speaker=(), vibrate=(), fullscreen=(self), sync-xhr=()"

    # Cross-Origin Policies
    Header always set Cross-Origin-Embedder-Policy "require-corp"
    Header always set Cross-Origin-Opener-Policy "same-origin"
    Header always set Cross-Origin-Resource-Policy "same-origin"

    # Additional Security Headers
    Header always set X-Permitted-Cross-Domain-Policies "none"
    Header always set X-Download-Options "noopen"
    Header always set X-DNS-Prefetch-Control "off"

    # Remove Server Information
    Header unset Server
    Header unset X-Powered-By
    Header unset X-Generator
</IfModule>

# Hide Server Information
ServerTokens Prod
ServerSignature Off

# Disable Directory Browsing
Options -Indexes

# Protect Sensitive Files
<FilesMatch "\.(env|log|ini|conf|sql|bak|backup|old|tmp|key|pem|crt|p12|pfx)$">
    Order allow,deny
    Deny from all
</FilesMatch>

# Protect Laravel Files
<FilesMatch "^(artisan|composer\.(json|lock)|package\.json|yarn\.lock|webpack\.mix\.js|\.env\.example|\.gitignore|\.gitattributes|README\.md|CHANGELOG\.md|LICENSE)$">
    Order allow,deny
    Deny from all
</FilesMatch>

# Protect PHP Configuration Files
<FilesMatch "^(php\.ini|\.user\.ini|\.htaccess|\.htpasswd)$">
    Order allow,deny
    Deny from all
</FilesMatch>

# Protect Directories
<DirectoryMatch "^(storage|bootstrap/cache|vendor|node_modules|tests|database|resources)">
    Order allow,deny
    Deny from all
</DirectoryMatch>

# Cache Control
<IfModule mod_expires.c>
    ExpiresActive On
    ExpiresByType text/css "access plus 1 year"
    ExpiresByType application/javascript "access plus 1 year"
    ExpiresByType image/png "access plus 1 year"
    ExpiresByType image/jpg "access plus 1 year"
    ExpiresByType image/jpeg "access plus 1 year"
    ExpiresByType image/gif "access plus 1 year"
    ExpiresByType image/svg+xml "access plus 1 year"
    ExpiresByType image/webp "access plus 1 year"
    ExpiresByType font/woff "access plus 1 year"
    ExpiresByType font/woff2 "access plus 1 year"
    ExpiresByType application/font-woff "access plus 1 year"
    ExpiresByType application/font-woff2 "access plus 1 year"
</IfModule>

# Compression
<IfModule mod_deflate.c>
    AddOutputFilterByType DEFLATE text/plain
    AddOutputFilterByType DEFLATE text/html
    AddOutputFilterByType DEFLATE text/xml
    AddOutputFilterByType DEFLATE text/css
    AddOutputFilterByType DEFLATE application/xml
    AddOutputFilterByType DEFLATE application/xhtml+xml
    AddOutputFilterByType DEFLATE application/rss+xml
    AddOutputFilterByType DEFLATE application/javascript
    AddOutputFilterByType DEFLATE application/x-javascript
    AddOutputFilterByType DEFLATE application/json
</IfModule>

# Rate Limiting (if mod_security is available)
<IfModule mod_security.c>
    SecRuleEngine On
    SecRule REQUEST_URI "@contains /telescope" "id:1001,phase:1,block,msg:'Telescope access blocked'"
    SecRule REQUEST_URI "@contains /admin" "id:1002,phase:1,block,msg:'Admin access blocked'"
</IfModule>

# Block Common Attack Patterns
<IfModule mod_rewrite.c>
    # Block SQL injection attempts
    RewriteCond %{QUERY_STRING} (\<|%3C).*script.*(\>|%3E) [NC,OR]
    RewriteCond %{QUERY_STRING} GLOBALS(=|\[|\%[0-9A-Z]{0,2}) [OR]
    RewriteCond %{QUERY_STRING} _REQUEST(=|\[|\%[0-9A-Z]{0,2}) [OR]
    RewriteCond %{QUERY_STRING} proc/self/environ [OR]
    RewriteCond %{QUERY_STRING} mosConfig_[a-zA-Z_]{1,21}(=|\%3D) [OR]
    RewriteCond %{QUERY_STRING} base64_(en|de)code[^(]*\([^)]*\) [OR]
    RewriteCond %{QUERY_STRING} (<|%3C)([^s]*s)+cript.*(>|%3E) [NC,OR]
    RewriteCond %{QUERY_STRING} (\<|%3C).*iframe.*(\>|%3E) [NC]
    RewriteRule .* - [F]
</IfModule>

# Block access to sensitive directories
<IfModule mod_rewrite.c>
    RewriteCond %{REQUEST_URI} ^/(\.git|\.svn|\.env|\.htaccess|\.htpasswd|composer\.json|composer\.lock|package\.json|yarn\.lock|webpack\.mix\.js|artisan|storage|bootstrap/cache|vendor|node_modules|tests|database|resources)/
    RewriteRule .* - [F,L]
</IfModule>

# Error Pages
ErrorDocument 404 /index.php
ErrorDocument 500 /index.php
